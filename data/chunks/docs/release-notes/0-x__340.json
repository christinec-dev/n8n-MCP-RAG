{
  "source": "docs/release-notes/0-x.md",
  "index": 340,
  "content": "### New features\n\n<div class=\"n8n-new-features\" markdown>\n\n#### Community nodes repository\n\nThis release introduces the [community node repository](/integrations/community-nodes/installation/index.md). This allows developers to build and share nodes as npm packages. Users can install community-built nodes directly in n8n.\n\n</div>\n\n<div class=\"n8n-new-features\" markdown>\n\n#### Data pinning\n\n[Data pinning](/data/data-pinning.md) allows you to freeze and edit data during workflow development. Data pinning means saving the output data of a node, and using the saved data instead of fetching fresh data in future workflow executions. This avoids repeated API calls when developing a workflow, reducing calls to external systems, and speeding up workflow development.\n\n</div>\n\n<div class=\"n8n-new-features\" markdown>\n\n#### Data mapping\n\nThis release introduces a drag and drop interface for [data mapping](/data/data-mapping/index.md), as a quick way to map data without using expressions.\n\n</div>\n\n<div class=\"n8n-new-features\" markdown>\n\n#### Simplify authentication setup for node creators\n\nThis release introduces a simpler way of handling authorization when building a node. All credentials should now contain an `authenticate` property that dictates how the credential is used in a request.\nn8n has also simplified authentication types: instead of specifying an authentication type and using the correct interface, you can now set the type as `\"generic\"`, and use the `IAuthenticateGeneric` interface.\n\nYou can use this approach for any authentication method where data is sent in the header, body, or query string. This includes methods like bearer and basic auth. You can't use this approach for more complex authentication types that require multiple calls, or for methods that don't pass authentication data. This includes OAuth.\n\nFor an example of the new authentication syntax, refer to n8n's [Asana node](https://github.com/n8n-io/n8n/blob/master/packages/nodes-base/credentials/AsanaApi.credentials.ts).\n\n```js\n// in AsanaApi.credentials.ts\nimport {\n\tIAuthenticateGeneric,\n\tICredentialType,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class AsanaApi implements ICredentialType {\n\tname = 'asanaApi';\n\tdisplayName = 'Asana API';\n\tdocumentationUrl = 'asana';\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Access Token',\n\t\t\tname: 'accessToken',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\tauthenticate: IAuthenticateGeneric = {\n\t\ttype: 'generic',\n\t\tproperties: {\n\t\t\theaders: {\n\t\t\t\tAuthorization: '=Bearer {{$credentials.accessToken}}',\n\t\t\t},\n\t\t},\n\t};\n}\n```\n</div>\n\n#### Other new features\n\n* Added a `preAuthentication` method to credentials.\n* Added more credentials tests.\n* Introduce automatic fixing for paired item information in some scenarios."
}