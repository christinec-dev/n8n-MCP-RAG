{
  "source": "docs/advanced-ai/examples/understand-vector-databases.md",
  "index": 3,
  "content": "## A simplified example\n\nA vector database could store the sentence \"n8n is a source-available automation tool that you can self-host\", but instead of storing it as text, the vector database stores an array of dimensions (numbers between 0 and 1) that represent its features. This doesn't mean turning each letter in the sentence into a number. Instead, the vectors in the vector database describe the sentence. \n\nSuppose that in a vector store `0.1` represents `automation tool`, `0.2` represents `source available`, and `0.3` represents `can be self-hosted`. You could end up with the following vectors:\n\n| Sentence | Vector (array of dimensions) |\n| -------- | ------ |\n| n8n is a source-available automation tool that you can self-host | [0.1, 0.2, 0.3] |\n| Zapier is an automation tool | [0.1] |\n| Make is an automation tool | [0.1] |\n| Confluence is a wiki tool that you can self-host | [0.3] |\n\n/// note | This example is very simplified\nIn practice, vectors are far more complex. A vector can range in size from tens to thousands of dimensions. The dimensions don't have a one-to-one relationship to a single feature, so you can't translate individual dimensions directly into single concepts. This example gives an approximate mental model, not a true technical understanding.\n///"
}