{
  "source": "docs/advanced-ai/evaluations/tips-and-common-issues.md",
  "index": 3,
  "content": "## Combining multiple triggers\n\nIf you have another trigger in the workflow already, you have two potential starting points: that trigger and the [evaluation trigger](/integrations/builtin/core-nodes/n8n-nodes-base.evaluationtrigger.md). To make sure your workflow works as expected no matter which trigger executes, you will need to merge these branches together.\n\n<figure markdown=\"span\">\n![Merging trigger branches](/_images/advanced-ai/evaluations/merging-trigger-branches.png)\n<figcaption>Logic to merge two trigger branches together so that they have the same data format and can be referenced from a single node.</figcaption>\n</figure>\n\nTo do so:\n\n1. **Get the data format of the other trigger**:\n\t* Execute the other trigger.\n    * Open it and navigate to the JSON view of its output pane.\n    * Click the **copy** button on the right.\n2. **Re-shape the evaluation trigger data to match**:\n    * Insert an [Edit Fields (Set) node](/integrations/builtin/core-nodes/n8n-nodes-base.set.md) after the evaluation trigger and connect them together.\n    * Change its mode to **JSON**.\n    * Paste your data into the 'JSON' field, removing the `[` and `]` on the first and last lines.\n    * Switch the field type to **Expression**.\n    * Map in the data from the trigger by dragging it from the input pane.\n    * For strings, make sure to replace the entire value (including the quotes) and add `.toJsonString()` to the end of the expression.\n3. **Merge the branches using a 'No-op' node**: Insert a [No-op node](/integrations/builtin/core-nodes/n8n-nodes-base.noop.md) and wire both the other trigger and the Set node up to it. The 'No-op' node just outputs whatever input it receives.\n4. **Reference the 'No-op' node outputs in the rest of the workflow**: Since both paths will flow through this node with the same format, you can be sure that your input data will always be there."
}