{
  "source": "docs/courses/level-two/chapter-4.md",
  "index": 4,
  "content": "## Catching erroring workflows\n\nTo catch failed workflows, create a separate [**Error Workflow**](/flow-logic/error-handling.md) with the [**Error Trigger node**](/integrations/builtin/core-nodes/n8n-nodes-base.errortrigger.md). This workflow will only execute if the main workflow execution fails.\n\nUse additional nodes in your **Error Workflow** that make sense, like sending notifications about the failed workflow and its errors using email or Slack.\n\nTo receive error messages for a failed workflow, set the **Error Workflow** in the [Workflow Settings](/workflows/settings.md) to an Error Workflow that uses an **Error Trigger node**.\n\nThe only difference between a regular workflow and an Error Workflow is that the latter contains an **Error Trigger node**. Make sure to create this node before you set this as another workflow's designated Error Workflow.\n\n/// note | Error workflows\n- If a workflow uses the Error Trigger node, you don't have to activate the workflow.\n- If a workflow contains the Error Trigger node, by default, the workflow uses itself as the error workflow.\n- You can't test error workflows when running workflows manually. The Error trigger only runs when an automatic workflow errors.\n- You can set the same Error Workflow for multiple workflows.\n///"
}