{
  "source": "docs/hosting/installation/docker.md",
  "index": 5,
  "content": "## Using with PostgreSQL\n\nBy default, n8n uses SQLite to save [credentials](/glossary.md#credential-n8n), past executions, and workflows. n8n also supports PostgreSQL, configurable using environment variables as detailed below.\n\nWhen using PostgreSQL, it's still important to persist the data stored in the `/home/node/.n8n` folder. This includes n8n user data and, even more importantly, the encryption key for credentials. It's also the name of the webhook when using the [n8n tunnel](#n8n-with-tunnel).\n\nIf n8n can't find the `/home/node/.n8n` directory on startup, it automatically creates one. In this case, all existing credentials that n8n saved with a different encryption key will no longer work.\n\n/// note | Keep in mind\nWhile persisting the `/home/node/.n8n` directory with PostgreSQL is the recommended best practice, it's not explicitly required. You can provide the encryption key by passing the [`N8N_ENCRYPTION_KEY` environment variable](/hosting/configuration/environment-variables/deployment.md) when starting your Docker container.\n///\n\nTo use n8n with PostgreSQL, execute the following commands, replacing the placeholders (depicted within angled brackets, for example `<POSTGRES_USER>`) with your actual values:\n\n```sh\ndocker volume create n8n_data\n\ndocker run -it --rm \\\n --name n8n \\\n -p 5678:5678 \\\n -e DB_TYPE=postgresdb \\\n -e DB_POSTGRESDB_DATABASE=<POSTGRES_DATABASE> \\\n -e DB_POSTGRESDB_HOST=<POSTGRES_HOST> \\\n -e DB_POSTGRESDB_PORT=<POSTGRES_PORT> \\\n -e DB_POSTGRESDB_USER=<POSTGRES_USER> \\\n -e DB_POSTGRESDB_SCHEMA=<POSTGRES_SCHEMA> \\\n -e DB_POSTGRESDB_PASSWORD=<POSTGRES_PASSWORD> \\\n -v n8n_data:/home/node/.n8n \\\n docker.n8n.io/n8nio/n8n\n```\n\nYou can find a complete `docker-compose` file for PostgreSQL in the [n8n hosting repository](https://github.com/n8n-io/n8n-hosting/tree/main/docker-compose/withPostgres)."
}