{
  "source": "docs/integrations/creating-nodes/build/declarative-style-node.md",
  "index": 8,
  "content": "},\n\t\t\t{\n\t\t\t\tname: 'Mars Rover Photos',\n\t\t\t\tvalue: 'marsRoverPhotos',\n\t\t\t},\n\t\t],\n\t\tdefault: 'astronomyPictureOfTheDay',\n\t},\n\t// Operations will go here\n\n]\n```\n\n`type` controls which UI element n8n displays for the resource, and tells n8n what type of data to expect from the user. `options` results in n8n adding a dropdown that allows users to choose one option. Refer to [Node UI elements](/integrations/creating-nodes/build/reference/ui-elements.md) for more information.\n\n#### Step 3.5: Add operations\n\nThe operations object defines the available operations on a resource.\n\nIn a declarative-style node, the operations object includes `routing` (within the `options` array). This sets up the details of the API call.\n\nAdd the following to the `properties` array, after the `resource` object:\n\n```typescript\n{\n\tdisplayName: 'Operation',\n\tname: 'operation',\n\ttype: 'options',\n\tnoDataExpression: true,\n\tdisplayOptions: {\n\t\tshow: {\n\t\t\tresource: [\n\t\t\t\t'astronomyPictureOfTheDay',\n\t\t\t],\n\t\t},\n\t},\n\toptions: [\n\t\t{\n\t\t\tname: 'Get',\n\t\t\tvalue: 'get',\n\t\t\taction: 'Get the APOD',\n\t\t\tdescription: 'Get the Astronomy Picture of the day',\n\t\t\trouting: {\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: '/planetary/apod',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\tdefault: 'get',\n},\n{\n\tdisplayName: 'Operation',\n\tname: 'operation',\n\ttype: 'options',\n\tnoDataExpression: true,\n\tdisplayOptions: {\n\t\tshow: {\n\t\t\tresource: [\n\t\t\t\t'marsRoverPhotos',\n\t\t\t],\n\t\t},\n\t},\n\toptions: [\n\t\t{\n\t\t\tname: 'Get',\n\t\t\tvalue: 'get',\n\t\t\taction: 'Get Mars Rover photos',\n\t\t\tdescription: 'Get photos from the Mars Rover',\n\t\t\trouting: {\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\tdefault: 'get',\n},\n{\n\tdisplayName: 'Rover name',\n\tdescription: 'Choose which Mars Rover to get a photo from',\n\trequired: true,\n\tname: 'roverName',\n\ttype: 'options',\n\toptions: [\n\t\t{name: 'Curiosity', value: 'curiosity'},\n\t\t{name: 'Opportunity', value: 'opportunity'},\n\t\t{name: 'Perseverance', value: 'perseverance'},\n\t\t{name: 'Spirit', value: 'spirit'},\n\t],\n\trouting: {\n\t\trequest: {\n\t\t\turl: '=/mars-photos/api/v1/rovers/{{$value}}/photos',\n\t\t},\n\t},\n\tdefault: 'curiosity',\n\tdisplayOptions: {\n\t\tshow: {\n\t\t\tresource: [\n\t\t\t\t'marsRoverPhotos',\n\t\t\t],\n\t\t},\n\t},\n},\n{\n\tdisplayName: 'Date',\n\tdescription: 'Earth date',\n\trequired: true,\n\tname: 'marsRoverDate',\n\ttype: 'dateTime',\n\tdefault:'',\n\tdisplayOptions: {\n\t\tshow: {\n\t\t\tresource: [\n\t\t\t\t'marsRoverPhotos',\n\t\t\t],\n\t\t},\n\t},\n\trouting: {\n\t\trequest: {\n\t\t\t// You've already set up the URL. qs appends the value of the field as a query string\n\t\t\tqs: {\n\t\t\t\tearth_date: '={{ new Date($value).toISOString().substr(0,10) }}',\n\t\t\t},\n\t\t},\n\t},\n},\n// Optional/additional fields will go here\n```\n\nThis code creates two operations: one to get today's APOD image, and another to send a get request for photos from one of the Mars Rovers. The object named `roverName"
}