{
  "source": "docs/integrations/creating-nodes/build/reference/node-file-structure.md",
  "index": 4,
  "content": "## Modular structure\n<!-- vale off -->\nYou can choose whether to place all your node's functionality in one file, or split it out into a base file and other modules, which the base file then imports. Unless your node is very simple, it's a best practice to split it out.\n<!-- vale on -->\n\nA basic pattern is to separate out operations. Refer to the [HttpBin starter node](https://github.com/n8n-io/n8n-nodes-starter/tree/master/nodes/HttpBin) for an example of this.\n\nFor more complex nodes, n8n recommends a directory structure. Refer to the [Airtable node](https://github.com/n8n-io/n8n/tree/master/packages/nodes-base/nodes/Airtable) or [Microsoft Outlook node](https://github.com/n8n-io/n8n/tree/master/packages/nodes-base/nodes/Microsoft/Outlook) as examples. \n\n  * `actions`: a directory containing sub-directories that represent resources.\n    * Each sub-directory should contain two types of files: \n      * An index file with resource description (named either `<resourceName>.resource.ts` or `index.ts`) \n      * Files for operations `<operationName>.operation.ts`. These files should have two exports: `description` of the operation and an `execute` function.\n  * `methods`: an optional directory dynamic parameters' functions.  \n  * `transport`: a directory containing the communication implementation."
}