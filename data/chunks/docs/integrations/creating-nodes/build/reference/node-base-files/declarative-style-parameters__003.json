{
  "source": "docs/integrations/creating-nodes/build/reference/node-base-files/declarative-style-parameters.md",
  "index": 3,
  "content": "## `methods` and `loadOptions`\n\n_Object_ | _Optional_\n\n`methods` contains the `loadOptions` object. You can use `loadOptions` to query the service to get user-specific settings, then return them and render them in the GUI so the user can include them in subsequent queries. The object must include routing information for how to query the service, and output settings that define how to handle the returned options. For example:\n\n```js\nmethods : {\n\tloadOptions: {\n\t\trouting: {\n\t\t\trequest: {\n\t\t\t\turl: '/webhook/example-option-parameters',\n\t\t\t\tmethod: 'GET',\n\t\t\t},\n\t\t\toutput: {\n\t\t\t\tpostReceive: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// When the returned data is nested under another property\n\t\t\t\t\t\t// Specify that property key\n\t\t\t\t\t\ttype: 'rootProperty',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tproperty: 'responseData',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'setKeyValue',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tname: '={{$responseItem.key}} ({{$responseItem.value}})',\n\t\t\t\t\t\t\tvalue: '={{$responseItem.value}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// If incoming data is an array of objects, sort alphabetically by key\n\t\t\t\t\t\ttype: 'sort',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tkey: 'name',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t}\n},\n```"
}