{
  "source": "docs/integrations/creating-nodes/build/reference/node-base-files/programmatic-style-parameters.md",
  "index": 4,
  "content": "## `methods` and `loadOptions`\n\n_Object_ | _Optional_\n\nContains the `loadOptions` method for programmatic-style nodes. You can use this method to query the service to get user-specific settings (such as getting a user's email labels from Gmail), then return them and render them in the GUI so the user can include them in subsequent queries.\n\nFor example, n8n's [Gmail node](https://github.com/n8n-io/n8n/blob/master/packages/nodes-base/nodes/Google/Gmail/Gmail.node.ts) uses `loadOptions` to get all email labels:\n\n```js\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the labels and display them\n\t\t\tasync getLabels(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst labels = await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'labels',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/gmail/v1/users/me/labels',\n\t\t\t\t);\n\t\t\t\tfor (const label of labels) {\n\t\t\t\t\tconst labelName = label.name;\n\t\t\t\t\tconst labelId = label.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: labelName,\n\t\t\t\t\t\tvalue: labelId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n```"
}