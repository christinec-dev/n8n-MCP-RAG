{
  "source": "docs/integrations/creating-nodes/build/reference/ui-elements.md",
  "index": 12,
  "content": "## Filter\n\nUse this component to evaluate, match, or filter incoming data.\n\nThis is the code from n8n's own If node. It shows a filter component working with a [collection](#collection) component where users can configure the filter's behavior.\n\n```typescript\n{\n\tdisplayName: 'Conditions',\n\tname: 'conditions',\n\tplaceholder: 'Add Condition',\n\ttype: 'filter',\n\tdefault: {},\n\ttypeOptions: {\n\t\tfilter: {\n\t\t\t// Use the user options (below) to determine filter behavior\n\t\t\tcaseSensitive: '={{!$parameter.options.ignoreCase}}',\n\t\t\ttypeValidation: '={{$parameter.options.looseTypeValidation ? \"loose\" : \"strict\"}}',\n\t\t},\n\t},\n},\n{\ndisplayName: 'Options',\nname: 'options',\ntype: 'collection',\nplaceholder: 'Add option',\ndefault: {},\noptions: [\n\t{\n\t\tdisplayName: 'Ignore Case',\n\t\tdescription: 'Whether to ignore letter case when evaluating conditions',\n\t\tname: 'ignoreCase',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n\t{\n\t\tdisplayName: 'Less Strict Type Validation',\n\t\tdescription: 'Whether to try casting value types based on the selected operator',\n\t\tname: 'looseTypeValidation',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n],\n},\n```\n\n![Filter](/_images/integrations/creating-nodes/filter.png)"
}