{
  "source": "docs/integrations/creating-nodes/build/reference/node-versioning.md",
  "index": 3,
  "content": "## Light versioning\n\nThis is available for all node types.\n\nOne node can contain more than one version, allowing small version increments without code duplication. To use this feature: \n\n1. Change the main `version` parameter to an array, and add your version numbers, including your existing version. \n2. You can then access the version parameter with `@version` in your `displayOptions` in any object (to control which versions n8n displays the object with). You can also query the version from a function using `const nodeVersion = this.getNode().typeVersion;`.\n\nAs an example, say you want to add versioning to the NasaPics node from the [Declarative node tutorial](/integrations/creating-nodes/build/declarative-style-node.md), then configure a resource so that n8n only displays it in version 2 of the node. In your base `NasaPics.node.ts` file:\n\n```js\n{\n    displayName: 'NASA Pics',\n    name: 'NasaPics',\n    icon: 'file:nasapics.svg',\n    // List the available versions\n    version: [1,2,3],\n    // More basic parameters here\n    properties: [\n        // Add a resource that's only displayed for version2\n        {\n            displayName: 'Resource name',\n            // More resource parameters\n            displayOptions: {\n                show: {\n                    '@version': 2,\n                },\n            },\n        },\n    ],\n}\n```"
}