{
  "source": "docs/integrations/creating-nodes/build/reference/code-standards.md",
  "index": 8,
  "content": "### Reuse internal parameter names\n\nAll resource and operation fields in an n8n node have two settings: a display name, set using the `name` parameter, and an internal name, set using the `value` parameter. Reusing the internal name for fields allows n8n to preserve user-entered data if a user switches operations. \n\nFor example: you're building a node with a resource named 'Order'. This resource has several operations, including Get, Edit, and Delete. Each of these operations uses an order ID to perform the operation on the specified order. You need to display an ID field for the user. This field has a display label, and an internal name. By using the same internal name (set in `value`) for the operation ID field on each resource, a user can enter the ID with the Get operation selected, and not lose it if they switch to Edit.\n\nWhen reusing the internal name, you must ensure that only one field is visible to the user at a time. You can control this using `displayOptions`."
}