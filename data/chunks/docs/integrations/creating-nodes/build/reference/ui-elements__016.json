{
  "source": "docs/integrations/creating-nodes/build/reference/ui-elements.md",
  "index": 16,
  "content": "## Resource mapper\n\nIf your node performs insert, update, or upsert operations, you need to send data from the node in a format supported by the service you're integrating with. A common pattern is to use a Set node before the node that sends data, to convert the data to match the schema of the service you're connecting to. The resource mapper UI component provides a way to get data into the required format directly within the node, rather than using a Set node. The resource mapper component can also validate input data against the schema provided in the node, and cast input data into the expected type.\n\n/// note | Mapping and matching\nMapping is the process of setting the input data to use as values when updating row(s). Matching is the process of using column names to identify the row(s) to update. \n///\t\n\n```js\n{\n\tdisplayName: 'Columns',\n\tname: 'columns', // The name used to reference the element UI within the code\n\ttype: 'resourceMapper', // The UI element type\n\tdefault: {\n\t\t// mappingMode can be defined in the component (mappingMode: 'defineBelow')\n\t\t// or you can attempt automatic mapping (mappingMode: 'autoMapInputData')\n\t\tmappingMode: 'defineBelow',\n\t\t// Important: always set default value to null\n\t\tvalue: null,\n\t},\n\trequired: true,\n\t// See \"Resource mapper type options interface\" below for the full typeOptions specification\n\ttypeOptions: {\n\t\tresourceMapper: {\n\t\t\tresourceMapperMethod: 'getMappingColumns',\n\t\t\tmode: 'update',\n\t\t\tfieldWords: {\n\t\t\t\tsingular: 'column',\n\t\t\t\tplural: 'columns',\n\t\t\t},\n\t\t\taddAllFields: true, \n\t\t\tmultiKeyMatch: true,\n\t\t\tsupportAutoMap: true,\n\t\t\tmatchingFieldsLabels: {\n\t\t\t\ttitle: 'Custom matching columns title',\n\t\t\t\tdescription: 'Help text for custom matching columns',\n\t\t\t\thint: 'Below-field hint for custom matching columns',\n\t\t\t},\n\t\t},\n\t},\n},\n```\n\nRefer to the [Postgres node (version 2)](https://github.com/n8n-io/n8n/tree/master/packages/nodes-base/nodes/Postgres/v2) for a live example using a database schema.\n\nRefer to the [Google Sheets node (version 2)](https://github.com/n8n-io/n8n/tree/master/packages/nodes-base/nodes/Google/Sheet/v2) for a live example using a schema-less service."
}