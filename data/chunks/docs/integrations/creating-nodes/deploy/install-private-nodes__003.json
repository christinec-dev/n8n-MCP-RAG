{
  "source": "docs/integrations/creating-nodes/deploy/install-private-nodes.md",
  "index": 3,
  "content": "## Install your node in a Docker n8n instance\n\nIf you're running n8n using Docker, you need to create a Docker image with the node installed in n8n. \n\n1. Create a Dockerfile and paste the code from [this Dockerfile](https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/Dockerfile).\n\n\tYour Dockerfile should look like this:\n\n\t```Dockerfile\n\tFROM node:16-alpine\n\n\tARG N8N_VERSION\n\n\tRUN if [ -z \"$N8N_VERSION\" ] ; then echo \"The N8N_VERSION argument is missing!\" ; exit 1; fi\n\n\t# Update everything and install needed dependencies\n\tRUN apk add --update graphicsmagick tzdata git tini su-exec\n\n\t# Set a custom user to not have n8n run as root\n\tUSER root\n\n\t# Install n8n and the packages it needs to build it correctly.\n\tRUN apk --update add --virtual build-dependencies python3 build-base ca-certificates && \\\n\t\tnpm config set python \"$(which python3)\" && \\\n\t\tnpm_config_user=root npm install -g full-icu n8n@${N8N_VERSION} && \\\n\t\tapk del build-dependencies \\\n\t\t&& rm -rf /root /tmp/* /var/cache/apk/* && mkdir /root;\n\n\n\t# Install fonts\n\tRUN apk --no-cache add --virtual fonts msttcorefonts-installer fontconfig && \\\n\t\tupdate-ms-fonts && \\\n\t\tfc-cache -f && \\\n\t\tapk del fonts && \\\n\t\tfind  /usr/share/fonts/truetype/msttcorefonts/ -type l -exec unlink {} \\; \\\n\t\t&& rm -rf /root /tmp/* /var/cache/apk/* && mkdir /root\n\n\tENV NODE_ICU_DATA /usr/local/lib/node_modules/full-icu\n\n\tWORKDIR /data\n\n\tCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\tENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\n\tEXPOSE 5678/tcp\n\t```\n\n2. Compile your custom node code (`npm run build` if you are using nodes starter). Copy the **node** and **credential** folders from within the **dist** folder into your container's `~/.n8n/custom/` directory. This makes them available to Docker.\n\n3. Download the [docker-entrypoint.sh](https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/docker-entrypoint.sh) file, and place it in the same directory as your Dockerfile.\n\n4. Build your Docker image:\n\n\t```Dockerfile\n\t# Replace <n8n-version-number> with the n8n release version number. \n\t# For example, N8N_VERSION=0.177.0\n\tdocker build --build-arg N8N_VERSION=<n8n-version-number> --tag=customizedn8n .\n\t```\n\nYou can now use your node in Docker."
}