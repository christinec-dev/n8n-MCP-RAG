{
  "source": "docs/integrations/creating-nodes/plan/node-ui-design.md",
  "index": 11,
  "content": "### Common patterns and exceptions\n\nThis section provides guidance on handling common design patterns, including some edge cases and exceptions to the main standards.\n\n#### Simplify responses\n\nAPIs can return a lot of data that isn't useful. Consider adding a toggle that allows users to choose to simplify the response data:\n\n  * Name: **Simplify Response**\n  * Description: **Whether to return a simplified version of the response instead of the raw data**\n\n#### Upsert operations\n\nThis should always be a separate operation with:\n\n  * Name: **Create or Update**\n  * Description: **Create a new record, or update the current one if it already exists (upsert)**\n\n#### Boolean operators\n<!-- vale off -->\nn8n doesn't have good support for combining boolean operators, such as AND and OR, in the GUI. Whenever possible, provide options for all ANDs or all ORs.\n<!-- vale on -->\n\nFor example, you have a field called **Must match** to test if values match. Include options to test for **Any** and **All**, as separate options.\n\n#### Source keys or binary properties\n\nBinary data is file data, such as spreadsheets or images. In n8n, you need a named key to reference the data. Don't use the terms \"binary data\" or \"binary property\" for this field. Instead, use a more descriptive name: **Input data field name** / **Output data field name**."
}