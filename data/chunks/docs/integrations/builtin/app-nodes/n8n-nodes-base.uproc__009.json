{
  "source": "docs/integrations/builtin/app-nodes/n8n-nodes-base.uproc.md",
  "index": 9,
  "content": "### Geographical\n\n- Check if a country's ISO code exists\n- Discover if the distance between two coordinates is equal to another\n- Discover if the distance (kilometers) between two coordinates is greater than the given input\n- Discover if the distance (kilometers) between two coordinates is greater or equal to the given input\n- Discover if the distance(kilometers) between two coordinates is lower than the given input\n- Check if an address exists by a partial address search\n- Check if a house number exists by a partial address search\n- Check if coordinates have a valid format\n- Discover if a zip code number prefix exists (only for Spain)\n- Discover if a zip code number has a valid format (only for Spain)\n- Get cartesian coordinates(X, Y, Z/WGS84) by Latitude and Longitude\n- Get location by parameters\n- Get multiple cities by phone prefix (only for Spain)\n- Get multiple cities by partial initial text (only for Spain)\n- Get multiple cities by zip code prefix (only for Spain)\n- Get a city from IP\n- City search by partial name (only for Spain)\n- Discover the city name by a local phone number (only for Spain)\n- Discover the city name by the zip code (only for Spain)\n- Discover the community name from a zip code (only for Spain)\n- Discover latitude and longitude coordinates of an IP address\n- Discover latitude and longitude coordinates of a postal address\n- Get multiple country names by currency ISO code\n- Get multiple countries by ISO code\n- Get multiple country names by initial name\n- Get country name by currency ISO code\n- Get country name by IP address\n- Get country name by its ISO code\n- Get country by a prefix\n- Get country name by phone number, with worldwide coverage\n- Get Aplha2 code by a country prefix or a name\n- Get decimal coordinates (degrees, minutes, and seconds) by latitude and longitude\n- Returns straight-line distance (kilometers) between two addresses\n- Returns straight-line distance (kilometers) between two GPS coordinates (latitude and longitude)\n- Returns straight-line distance (kilometers) between two IP addresses\n- Returns straight-line distance (kilometers) between two landline phones, using city and province of every phone\n- Returns straight-line distance (kilometers) between two zip codes, using city and province of every zip code\n- Get an exact address by a partial address search\n- Discover geographical, company, timezone, and reputation data by IPv4 address\n- Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address and geocodes it\n- Parse postal address into separated fields, getting an improved resolution\n- Discover locale data (currency, language) by IPv4 or IPv6 address\n- Discover the city name, zip code, province, or country by latitude and longitude\n- Discover the city name, zip code, province, country, latitude, and longitude from an IPv4 or IPv6 address\n- Discover the city and the province from a landline phone number (only Spain)\n- Discover location data by name\n- Discover the city and the province from a zip code number (only Spain)\n- Get the most relevant locations by name\n- Get the most relevant locations by name, category, location, and radius\n- Get multiple personal names by a prefix\n- Discover network data by IPv4 or IPv6 address\n- Allow normalizing an address by removing non allowed characters\n- Allow normalizing a city by removing non allowed characters\n- Allow normalizing a country by removing non allowed characters\n- Allow normalizing a province by removing non allowed characters\n- Allow normalizing a zip code by removing non allowed characters\n- Get normalized country\n- Parse postal address into separated fields, getting a basic resolution\n- Discover the province name from an IP address\n- Get the"
}