{
  "source": "docs/code/ai-code.md",
  "index": 7,
  "content": "### Example prompts\n\nThese examples show a range of possible prompts and tasks.\n\n#### Example 1: Find a piece of data inside a second dataset\n\nTo try the example yourself, [download the example workflow](/_workflows/ai-code/find-a-piece-of-data.json) and import it into n8n.\n\nIn the third Code node, enter this prompt:\n\n> The slack data contains only one item. The input data represents all Notion users. Sometimes the person property that holds the email can be null. I want to find the notionId of the Slack user and return it.\n\nTake a look at the code the AI generates.\n\nThis is the JavaScript you need:\n\n```js\nconst slackUser = $(\"Mock Slack\").all()[0];\nconst notionUsers = $input.all();\nconst slackUserEmail = slackUser.json.email;\n\nconst notionUser = notionUsers.find(\n  (user) => user.json.person && user.json.person.email === slackUserEmail\n);\n\nreturn notionUser ? [{ json: { notionId: notionUser.json.id } }] : [];\n```\n\n#### Example 2: Data transformation\n\nTo try the example yourself, [download the example workflow](/_workflows/ai-code/data-transformation.json) and import it into n8n.\n\nIn the **Join items** Code node, enter this prompt:\n\n> Return a single line of text that has all usernames listed with a comma. Each username should be enquoted with a double quotation mark.\n\nTake a look at the code the AI generates.\n\nThis is the JavaScript you need:\n\n```js\nconst items = $input.all();\nconst usernames = items.map((item) => `\"${item.json.username}\"`);\nconst result = usernames.join(\", \");\nreturn [{ json: { usernames: result } }];\n```\n\n#### Example 3: Summarize data and create a Slack message\n\nTo try the example yourself, [download the example workflow](/_workflows/ai-code/summarize-data.json) and import it into n8n.\n\nIn the **Summarize** Code node, enter this prompt:\n\n> Create a markdown text for Slack that counts how many ideas, features and bugs have been submitted. The type of submission is saved in the property_type field. A feature has the property \"Feature\", a bug has the property \"Bug\" and an idea has the property \"Bug\". Also, list the five top submissions by vote in that message. Use \"<url|text>\" as markdown for links.\n\nTake a look at the code the AI generates.\n\nThis is the JavaScript you need:\n\n```js\nconst submissions = $input.all();\n\n// Count the number of ideas, features, and bugs\nlet ideaCount = 0;\nlet featureCount = 0;\nlet bugCount = 0;\n\nsubmissions.forEach((submission) => {\n  switch (submission.json.property_type[0]) {\n    case \"Idea\":\n      ideaCount++;\n      break;\n    case \"Feature\":\n      featureCount++;\n      break;\n    case \"Bug\":\n      bugCount++;\n      break;\n  }\n});\n\n// Sort submissions by votes and take the top 5\nconst topSubmissions = submissions\n  .sort((a, b) => b.json.property_votes - a.json.property_votes)\n  .slice(0, 5);\n\nlet topSubmissionText = \"\";\ntopSubmissions.forEach((submission) => {\n  topSubmissionText += `<${submission.json.url}|${submission.json.name}> with ${submission.json.property_votes} votes\\n`;\n});\n\n// Construct the Slack message\nconst slackMessage = `*Summary of Submissions*\\n\nIdeas: ${ideaCount}\\n\nFeatures: ${featureCount}\\n\nBugs: ${bugCount}\\n\nTop 5 Submissions:\\n\n${topSubmissionText}`;\n\nreturn [{ json: { slackMessage } }];\n```\n\n<!-- vale on -->"
}