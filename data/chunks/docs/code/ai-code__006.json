{
  "source": "docs/code/ai-code.md",
  "index": 6,
  "content": "## Writing good prompts\n\n<!-- vale off -->\n\nWriting good prompts increases the chance of getting useful code back.\n\nSome general tips:\n\n* Provide examples: if possible, give a sample expected output. This helps the AI to better understand the transformation or logic youâ€™re aiming for.\n* Describe the processing steps: if there are specific processing steps or logic that should apply to the data, list them in sequence. For example: \"First, filter out all users under 18. Then, sort the remaining users by their last name.\"\n* Avoid ambiguities: while the AI understands various instructions, being clear and direct ensures you get the most accurate code. Instead of saying \"Get the older users,\" you might say \"Filter users who are 60 years and above.\"\n* Be clear about what you expect as the output. Do you want the data transformed, filtered, aggregated, or sorted? Provide as much detail as possible.\n\nAnd some n8n-specific guidance:\n\n* Think about the input data: make sure ChatGPT knows which pieces of the data you want to access, and what the incoming data represents. You may need to tell ChatGPT about the availability of n8n's built-in methods and variables.\n* Declare interactions between nodes: if your logic involves data from multiple nodes, specify how they should interact. \"Merge the output of 'Node A' with 'Node B' based on the 'userID' property\". if you prefer data to come from certain nodes or to ignore others, be clear: \"Only consider data from the 'Purchases' node and ignore the 'Refunds' node.\"\n* Ensure the output is compatible with n8n. Refer to [Data structure](/data/data-structure.md) for more information on the data structure n8n requires."
}