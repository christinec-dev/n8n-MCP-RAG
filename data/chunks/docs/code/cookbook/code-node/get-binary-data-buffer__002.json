{
  "source": "docs/code/cookbook/code-node/get-binary-data-buffer.md",
  "index": 2,
  "content": "# Get the binary data buffer\n\nThe binary data buffer contains all the binary file data processed by a workflow. You need to access it if you want to perform operations on the binary data, such as:\n\n* Manipulating the data: for example, adding column headers to a CSV file.\n* Using the data in calculations: for example, calculating a hash value based on it.\n* Complex HTTP requests: for example, combining file upload with sending other data formats.\n\n/// note | Not available in Python\n`getBinaryDataBuffer()` isn't supported when using Python.\n///\nYou can access the buffer using n8n's `getBinaryDataBuffer()` function:\n\n\n```js\n/* \n* itemIndex: number. The index of the item in the input data.\n* binaryPropertyName: string. The name of the binary property. \n* The default in the Read/Write File From Disk node is 'data'. \n*/\nlet binaryDataBufferItem = await this.helpers.getBinaryDataBuffer(itemIndex, binaryPropertyName);\n```\n\nFor example:\n\n```js\nlet binaryDataBufferItem = await this.helpers.getBinaryDataBuffer(0, 'data');\n// Returns the data in the binary buffer for the first input item\n```\n\n\nYou should always use the `getBinaryDataBuffer()` function, and avoid using older methods of directly accessing the buffer, such as targeting it with expressions like `items[0].binary.data.data`."
}