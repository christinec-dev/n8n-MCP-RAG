{
  "source": "docs/code/cookbook/jmespath.md",
  "index": 5,
  "content": "### Apply a JMESPath expression to a collection of elements with projections\n\nFrom the [JMESPath projections documentation](https://jmespath.org/tutorial.html#projections):\n\n> Projections are one of the key features of JMESPath. Use it to apply an expression to a collection of elements. JMESPath supports five kinds of projections:\n> \n> * List Projections\n> * Slice Projections\n> * Object Projections\n> * Flatten Projections\n> * Filter Projections\n\nThe following example shows basic usage of list, slice, and object projections. Refer to the [JMESPath projections documentation](https://jmespath.org/tutorial.html#projections) for detailed explanations of each projection type, and more examples.\n\nGiven this JSON from a webhook node:\n\n\n```js\n[\n  {\n    \"headers\": {\n      \"host\": \"n8n.instance.address\",\n      ...\n    },\n    \"params\": {},\n    \"query\": {},\n    \"body\": {\n      \"people\": [\n        {\n          \"first\": \"James\",\n          \"last\": \"Green\"\n        },\n        {\n          \"first\": \"Jacob\",\n          \"last\": \"Jones\"\n        },\n        {\n          \"first\": \"Jayden\",\n          \"last\": \"Smith\"\n        }\n      ],\n      \"dogs\": {\n        \"Fido\": {\n          \"color\": \"brown\",\n          \"age\": 7\n        },\n        \"Spot\": {\n          \"color\": \"black and white\",\n          \"age\": 5\n        }\n      }\n    }\n  }\n]\n\n```\n\n\nRetrieve a [list](https://jmespath.org/tutorial.html#list-and-slice-projections) of all the people's first names:\n\n=== \"Expressions (JavaScript)\"\n\n\t```js\n\t{{$jmespath($json.body.people, \"[*].first\" )}}\n\t// Returns [\"James\", \"Jacob\", \"Jayden\"]\n\t```\n\n=== \"Code node (JavaScript)\"\n\n\t```js\n\tlet firstNames = $jmespath($json.body.people, \"[*].first\" )\n\treturn {firstNames};\n\t/* Returns:\n\t[\n\t\t{\n\t\t\t\"firstNames\": [\n\t\t\t\t\"James\",\n\t\t\t\t\"Jacob\",\n\t\t\t\t\"Jayden\"\n\t\t\t]\n\t\t}\n\t]\n\t*/\n\t```\n=== \"Code node (Python)\"\n\t```python\n\tfirstNames = _jmespath(_json.body.people, \"[*].first\" )\n\treturn {\"firstNames\":firstNames}\n\t\"\"\"\n\tReturns:\n\t[\n\t \t{\n\t\t\t\"firstNames\": [\n\t\t\t\t\"James\",\n\t\t\t\t\"Jacob\",\n\t\t\t\t\"Jayden\"\n\t\t\t]\n\t\t}\n\t]\n\t\"\"\"\n\t```\n\nGet a [slice](https://jmespath.org/tutorial.html#list-and-slice-projections) of the first names:\n\n=== \"Expressions (JavaScript)\"\n\n\t```js\n\t{{$jmespath($json.body.people, \"[:2].first\")}}\n\t// Returns [\"James\", \"Jacob\"]\n\t```\n\n=== \"Code node (JavaScript)\"\n\t```js\n\tlet firstTwoNames = $jmespath($json.body.people, \"[:2].first\");\n\treturn {firstTwoNames};\n\t/* Returns:\n\t[\n\t\t{\n\t\t\t\"firstNames\": [\n\t\t\t\t\"James\",\n\t\t\t\t\"Jacob\",\n\t\t\t\t\"Jayden\"\n\t\t\t]\n\t\t}\n\t]\n\t*/\n\t```\n=== \"Code node (Python)\"\n\t```python\n\tfirstTwoNames = _jmespath(_json.body.people, \"[:2].first\" )\n\treturn {\"firstTwoNames\":firstTwoNames}\n\t\"\"\"\n\tReturns:\n\t[\n  \t\t{\n\t\t\t\"firstTwoNames\": [\n\t\t\t\"James\",\n\t\t\t\"Jacob\"\n\t\t\t]\n\t\t}\n\t]\n\t\"\"\"\n\t```\n\nGet a list of the dogs' ages using [object projections](https://j"
}