{
  "source": "0608_Splitout_Code_Import_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"6b6a2db47bdf8371d21090c511052883cc9a3f6af5d0d9d567c702d74a18820e\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f4570aad-db25-4dcd-8589-b1c8335935de\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        200,\n        2800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"92aae60e-5fcd-4588-9a41-92e7c1b7f2ff\",\n      \"name\": \"SERP results\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1286,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b3e662aa-7ace-45ca-815a-0ad1d65ef7a0\",\n              \"name\": \"organicResults\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.result.organicResults }}\"\n            },\n            {\n              \"id\": \"ac655bf2-181f-4117-a7d6-aa4ec2738bd9\",\n              \"name\": \"peopleAlsoAsk\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.result.peopleAlsoAsk }}\"\n            },\n            {\n              \"id\": \"9e045f00-006e-4b8b-863d-cb25d682b69d\",\n              \"name\": \"searchQuery\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.result.searchQuery.term }}\"\n            },\n            {\n              \"id\": \"08c1f92b-deac-4951-863f-721e0714739b\",\n              \"name\": \"paidAds\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.result.paidResults }}\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e8a7a918-7afd-4c2b-8b79-1c5652362a53\",\n      \"name\": \"Separate\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"notes\": \"Split SERP into rows\",\n      \"position\": [\n        1457,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"organicResults\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e2683fec-1a04-47ff-82b9-11749921a34c\",\n      \"name\": \"Title <> Empty\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"notes\": \"Title is not empty\",\n      \"position\": [\n        1637,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6dd422fc-0b66-4d7e-9b40-ee4a6d713e83\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.title }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e2a21776-86f4-4c99-973c-19e5ede4eab3\",\n      \"name\": \"Assign SERP #pos\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"Assign SERP position\",\n      \"position\": [\n        2020,\n        2800\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all(); // Get all input items\\n\\n// Group items by searchQuery\\nconst groupedItems = items.reduce((acc, item) => {\\n  const searchQuery = item.json.searchQuery || 'default';\\n  if (!acc[searchQuery]) {\\n    acc[searchQuery] = [];\\n  }\\n  acc[searchQuery].push(item);\\n  return acc;\\n}, {});\\n\\n// Assign positions within each group\\nconst result = Object.values(groupedItems).flatMap(group => \\n  group.map((item, index) => ({\\n    json: {\\n      ...item.json,\\n      position: index + 1, // Add the position based on the index within the group\\n    },\\n  }))\\n);\\n\\nreturn result; // Return the modified items\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"34a38c07-6439-4177-a12a-a2f6295cd914\",\n      \"name\": \"GET SERP\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"SERP results - scrapingRobot\\n\\nhttps://dashboard.scrapingrobot.com/dashboard\",\n      \"position\": [\n        1106,\n        2800\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.scrapingrobot.com\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 20\n            }\n          }\n        },\n        \"jsonBody\": \"={\\n  \\\"url\\\": \\\"https://www.google.com\\\",\\n  \\\"module\\\": \\\"GoogleScraper\\\",\\n  \\\"params\\\": {\\n    \\\"query\\\": \\\"{{ $json[\\\"Keyword\\\"] }}\\\"\\n  }\\n}  \",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"6DyKxvSsLAZLluDL\",\n          \"name\": \"Query Auth - Scraping Robot\"\n        },\n        \"httpHeaderAuth\": {\n          \"id\": \"QWp7emU1xKIVm5GD\",\n          \"name\": \"Header Auth - Scraping Robot\"\n        }\n      },\n      \"notesInFlow\": false,\n      \"retryOnFail\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"6bf86303-6aa1-4afd-834b-35bc84b1fd82\",\n      \"name\": \"Sticky Note29\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        356,\n        2760\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 669.4820758928554,\n        \"height\": 205.68165856370325,\n        \"content\": \"**Get data from airtable and check if already done** \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0ff2885f-f372-40c5-94e4-f1d90a66b6b7\",\n      \"name\": \"Sticky Note30\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1046,\n        2760\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 208.81803918109597,\n        \"height\": 205.68165856370314,\n        \"content\": \"**POST to Scraping Robot API** \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee9e47b4-5137-4909-8c3d-3cb023517e03\",\n      \"name\": \"Sticky Note22\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        2980\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 284.87764467541297,\n        \"height\": 119.14378614369562,\n        \"content\": \"**REQUIRED**\\nConnect to your database of keywords. Name the column 'Keyword' or alternatively enter keywords in the `Set Keywords to get SERPs for` array\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fee9236d-4c04-4d05-90a3-fbff8e15c4f8\",\n      \"name\": \"Connect to your own database - \",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        420,\n        2800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d506d14f-1871-4176-97a2-09da6062729b\",\n      \"name\": \"Set Keywords to get SERPs for\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"notes\": \"Array of keywords\",\n      \"position\": [\n        660,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"859ba768-9ae1-4d11-bab9-6b5f085adc59\",\n              \"name\": \"Keyword\",\n              \"type\": \"array\",\n              \"value\": \"[\\\"constant contact email automation\\\", \\\"business worfklow software\\\", \\\"n8n automation\\\"]\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d65f61f6-5c6b-4145-915b-af4cb56da1cb\",\n      \"name\": \"Sticky Note24\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1040,\n        2980\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 284.87764467541297,\n        \"height\": 150.1322172211123,\n        \"content\": \"**REQUIRED**\\nUpdate the Auth parameter to your own [Scraping Robot](https://billing.scrapingrobot.com/aff.php?aff=2) token\\n\\n**Query Auth parameter**\\nname - token\\nvalue - your-own-api-key\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bea785be-b146-4bd8-92f5-f7e14127d969\",\n      \"name\": \"Sticky Note31\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1420,\n        2760\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 749.5454794091054,\n        \"height\": 205.68165856370314,\n        \"content\": \"**Splits out queries for organic search and assigns them a ranking 1-10** \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e7e3ce78-a8ec-45e2-9fb9-c4f615085985\",\n      \"name\": \"Sticky Note27\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2200,\n        2740\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 231.51775697271012,\n        \"height\": 223.71949738241096,\n        \"content\": \"**Update record in own Database**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"02ccb470-a6a6-49f3-9bda-7429c5dd3150\",\n      \"name\": \"Connect to your own database2\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2263,\n        2800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"92922d26-3e68-47dd-94eb-b6be13161efe\",\n      \"name\": \"Assign SearchQuery\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1820,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e69839b4-9ab5-4792-b6c0-a4d0e1172fa8\",\n              \"name\": \"searchQuery\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('SERP results').item.json.searchQuery }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"53d835d0-d656-4255-abe2-b4bfb23f455e\",\n      \"name\": \"Split out Keywords\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        860,\n        2800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"Keyword\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5dc6f9b0-4f75-4e71-bd3d-86fa41d862b9\",\n      \"name\": \"Sticky Note40\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2200,\n        2980\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 284.87764467541297,\n        \"height\": 91.91340067739628,\n        \"content\": \"**REQUIRED** \\nOutput the data to your own data source e.g. Airtable\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6b2bf27e-de9b-41da-9f27-17a6541fd2f9\",\n      \"name\": \"Sticky Note18\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -540,\n        2400\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 697.67602815855,\n        \"height\": 735.4043641289052,\n        \"content\": \"## Get Google Search Results (SERPs) for SEO Research\\n\\n## Use Case\\nResearch search engine rankings for SEO analysis:\\n- You need to track keyword rankings for your website\\n- You want to analyze competitor positions in search results\\n- You need data for SEO competition analysis\\n- You want to monitor SERP changes over time\\n\\n## What this Workflow Does\\nThe workflow uses ScrapingRobot API to fetch Google search results:\\n- Retrieves SERP data for your target keywords\\n- Captures URL rankings and page titles\\n- Processes up to 5000 searches with free account\\n- Organizes results for SEO analysis\\n\\n## Setup\\n1. Create a [ScrapingRobot account](https://billing.scrapingrobot.com/aff.php?aff=2) and get your API key\\n2. Add your ScrapingRobot API key to the HTTP Request node's `GET SERP` token parameter\\n3. Either connect your keyword database (column name \\\"Keyword\\\") or use the \\\"Set Keywords\\\" node\\n4. Configure your preferred output database connection\\n\\n## How to Adjust it to Your Needs\\n- Modify keyword source to pull from different databases\\n- Adjust the number of SERP results to capture\\n- Customize output format for your reporting needs\\n\\n\\nMade by Simon @ [automake.io](https://automake.io)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"GET SERP\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SERP results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Separate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Title <> Empty\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SERP results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Separate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Title <> Empty\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assign SearchQuery\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assign SERP #pos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Connect to your own database2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assign SearchQuery\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assign SERP #pos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split out Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GET SERP\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Keywords to get SERPs for\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split out Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Connect to your own database - \": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Keywords to get SERPs for\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Connect to your own database - \",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.set",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.set",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}