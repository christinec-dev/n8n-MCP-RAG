{
  "source": "1439_Telegram_Code_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"79849bb5-00a4-42e6-92c4-b06c7a20eb3e\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1580,\n        340\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4-turbo-preview\",\n        \"options\": {\n          \"temperature\": 0,\n          \"responseFormat\": \"json_object\"\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"jazew1WAaSRrjcHp\",\n          \"name\": \"OpenAI (workfloows@gmail.com)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85df0106-1f78-4412-8751-b84d417c8bf9\",\n      \"name\": \"Convert education to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2420,\n        180\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function convertToHTML(list) {\\n let html = '';\\n\\n list.forEach((education, index) => {\\n if (index > 0) {\\n html += '<br /><br />'; // Add a new line if it's not the first item\\n }\\n html += `<b>Institution:</b> ${education.institution}<br />\\n<b>Start year:</b> ${education.start_year}<br />\\n<b>Degree:</b> ${education.degree}`;\\n });\\n\\n return html;\\n}\\n\\n// Assuming payload is already defined\\nconst payload = $input.item.json.education;\\n\\nconst htmlOutput = convertToHTML(payload);\\nreturn {\\n htmlOutput\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"da4fc45d-712f-4171-b72a-66b74b4d8e05\",\n      \"name\": \"Auto-fixing Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserAutofixing\",\n      \"position\": [\n        1820,\n        340\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"225a7513-6fd4-4672-9b40-b10b00f121a7\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1740,\n        520\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"temperature\": 0\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"jazew1WAaSRrjcHp\",\n          \"name\": \"OpenAI (workfloows@gmail.com)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0606c99d-a080-4277-b071-1bc0c93bb2e3\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1960,\n        520\n      ],\n      \"parameters\": {\n        \"jsonSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"personal_info\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"address\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"email\\\": { \\\"type\\\": \\\"string\\\", \\\"format\\\": \\\"email\\\" },\\n \\\"github\\\": { \\\"type\\\": \\\"string\\\"},\\n \\\"linkedin\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n },\\n \\\"employment_history\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"position\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"company\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"duration\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"responsibilities\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n }\\n },\\n \\\"education\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"institution\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"start_year\\\": { \\\"type\\\": \\\"integer\\\" },\\n \\\"degree\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n },\\n \\\"projects\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"year\\\": { \\\"type\\\": \\\"integer\\\" },\\n \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"technologies\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n }\\n },\\n \\\"volunteering\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"activity\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"location\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"date\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"description\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n },\\n \\\"programming_languages\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"languages\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n },\\n \\\"tools\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n },\\n \\\"methodologies\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n },\\n \\\"foreign_languages\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"language\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"level\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n }\\n }\\n }\\n}\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"027975cd-768a-4048-858d-9060f48ab622\",\n      \"name\": \"Convert employment history to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2420,\n        -20\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function convertToHTML(list) {\\n let html = '';\\n\\n list.forEach((item, index) => {\\n if (index > 0) {\\n html += '<br />'; // Add a new line if it's not the first item\\n }\\n html += `<b>Position:</b> ${item.position}\\n<b>Company:</b> ${item.company}\\n<br />\\n<b>Duration:</b> ${item.duration}\\n<br />\\n<b>Responsibilities:</b>\\n`;\\n\\n item.responsibilities.forEach((responsibility, i) => {\\n html += `- ${responsibility}`;\\n if (i < item.responsibilities.length - 1 || index < list.length - 1) {\\n html += '<br />'; // Add new line if it's not the last responsibility in the last item\\n }\\n });\\n });\\n\\n return html;\\n}\\n\\n// Assuming payload is already defined\\nconst payload = $input.item.json.employment_history;\\n\\nconst htmlOutput = convertToHTML(payload);\\nreturn {\\n htmlOutput\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"823a241d-1c68-40a9-8f2c-f1bdfaab7603\",\n      \"name\": \"Convert projects to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2420,\n        380\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function convertToHTML(list) {\\n let html = '';\\n\\n list.forEach((project, index) => {\\n if (index > 0) {\\n html += '<br />'; // Add a new line if it's not the first project\\n }\\n html += `<b>Name:</b> ${project.name}<br />\\n<b>Year:</b> ${project.year}<br />\\n<b>Description:</b> ${project.description}<br /><br />\\n<b>Technologies:</b>\\n<br />`;\\n\\n project.technologies.forEach((technology, i) => {\\n html += `- ${technology}`;\\n if (i < project.technologies.length - 1 || index < list.length - 1) {\\n html += '<br />'; // Add new line if it's not the last technology in the last project\\n }\\n });\\n });\\n\\n return html;\\n}\\n\\n// Assuming payload is already defined\\nconst payload = $input.item.json.projects;\\n\\nconst htmlOutput = convertToHTML(payload);\\nreturn {\\n htmlOutput\\n};\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a12eb0e1-1cb9-4b83-a1ec-42dd8214f6bc\",\n      \"name\": \"Convert volunteering to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2420,\n        580\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function convertToHTML(list) {\\n let html = '';\\n\\n list.forEach((event, index) => {\\n if (index > 0) {\\n html += '<br />'; // Add a new line if it's not the first volunteering event\\n }\\n html += `<b>Activity:</b> ${event.activity}<br />\\n<b>Location:</b> ${event.location}<br />\\n<b>Date:</b> ${event.date}<br />\\n<b>Description:</b> ${event.description}<br />`;\\n });\\n\\n return html;\\n}\\n\\n// Assuming payload is already defined\\nconst payload = $input.item.json.volunteering;\\n\\nconst htmlOutput = convertToHTML(payload);\\nreturn {\\n htmlOutput\\n};\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"70b67b80-d22d-4eea-8c97-3d2cb2b9bbfc\",\n      \"name\": \"Telegram trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        360,\n        340\n      ],\n      \"webhookId\": \"d6829a55-a01b-44ac-bad3-2349324c8515\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"lStLV4zzcrQO9eAM\",\n          \"name\": \"Telegram (Resume Extractor)\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"21bead1d-0665-44d5-b623-b0403c9abd6c\",\n      \"name\": \"Auth\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        600,\n        340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"7ca4b4c3-e23b-4896-a823-efc85c419467\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.message.chat.id }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"de76d6ec-3b0e-44e0-943d-55547aac2e46\",\n      \"name\": \"No operation (unauthorized)\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        860,\n        520\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"439f5e2c-be7d-486b-a1f1-13b09f77c2c8\",\n      \"name\": \"Check if start message\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        860,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"1031f14f-9793-488d-bb6b-a021f943a399\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $json.message.text }}\",\n              \"rightValue\": \"/start\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"af5f5622-c338-40c0-af72-90e124ed7ce1\",\n      \"name\": \"No operation (start message)\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1120,\n        360\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2efae11a-376b-44aa-ab91-9b3dea82ede0\",\n      \"name\": \"Get file\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1120,\n        120\n      ],\n      \"parameters\": {\n        \"fileId\": \"={{ $json.message.document.file_id }}\",\n        \"resource\": \"file\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"lStLV4zzcrQO9eAM\",\n          \"name\": \"Telegram (Resume Extractor)\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"88fd1002-ad2c-445f-92d4-11b571db3788\",\n      \"name\": \"Extract text from PDF\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1380,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9dfc204b-c567-418a-93a3-9b72cf534a8c\",\n      \"name\": \"Set parsed fileds\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2040,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"314c771a-5ff2-484f-823b-0eab88f43ea3\",\n      \"name\": \"Personal info\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2420,\n        -380\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"personal_info\",\n              \"stringValue\": \"=<b><u>Personal info</u></b>\\n<br /><br />\\n<b>Name:</b> {{ $json.personal_info.name }}\\n<br />\\n<b>Address:</b> {{ $json.personal_info.address }}\\n<br />\\n<b>Email:</b> {{ $json.personal_info.email }}\\n<br />\\n<b>GitHub:</b> {{ $json.personal_info.github }}\\n<br />\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"be6b32e8-6000-4235-a723-0e22828ead45\",\n      \"name\": \"Technologies\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2420,\n        -200\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"technologies\",\n              \"stringValue\": \"=<b><u>Technologies</u></b>\\n<br /><br />\\n<b>Programming languages:</b> {{ $json.programming_languages.languages.join(', ') }}\\n<br />\\n<b>Tools:</b> {{ $json.programming_languages.tools.join(', ') }}\\n<br />\\n<b>Methodologies:</b> {{ $json.programming_languages.methodologies.join(', ') }}\\n<br />\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"ab726d61-84b8-4af7-a195-33e1add89153\",\n      \"name\": \"Employment history\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2640,\n        -20\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"employment_history\",\n              \"stringValue\": \"=<b><u>Employment history</u></b>\\n<br /><br />\\n{{ $json[\\\"htmlOutput\\\"] }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"692f9555-6102-4d3c-b0a1-868e27e3c343\",\n      \"name\": \"Education\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2640,\n        180\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"education\",\n              \"stringValue\": \"=<b><u>Education</u></b>\\n<br /><br />\\n{{ $json[\\\"htmlOutput\\\"] }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"258728f2-1f03-4786-8197-feb9f1bc4dfe\",\n      \"name\": \"Projects\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2640,\n        380\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"projects\",\n              \"stringValue\": \"=<b><u>Projects</u></b>\\n<br /><br />\\n{{ $json[\\\"htmlOutput\\\"] }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"3c819ce4-235a-4b12-a396-d33dca9f80da\",\n      \"name\": \"Volunteering\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2640,\n        580\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"volunteering\",\n              \"stringValue\": \"=<b><u>Volunteering</u></b>\\n<br /><br />\\n{{ $json[\\\"htmlOutput\\\"] }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"41bd7506-7330-4c25-8b43-aa3c836736fc\",\n      \"name\": \"Merge education and employment history\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2880,\n        100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d788da36-360b-4009-82ad-2f206fad8e53\",\n      \"name\": \"Merge projects and volunteering\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2880,\n        500\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"57c20e19-3d84-41c0-a415-1d55cb031da1\",\n      \"name\": \"Merge personal info and technologies\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3140,\n        -160\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"f12be010-8375-4ff7-ba8e-9c2c870f648b\",\n      \"name\": \"Merge all\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3400,\n        200\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d6428167-2c75-42a5-a905-7590ff1d6a25\",\n      \"name\": \"Set final data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3620,\n        200\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"output\",\n              \"stringValue\": \"={{ $json.personal_info }}\\n<br /><br />\\n{{ $json.employment_history }}\\n<br /><br />\\n{{ $json.education }}\\n<br /><br />\\n{{ $json.projects }}\\n<br /><br />\\n{{ $json.volunteering }}\\n<br /><br />\\n{{ $json.technologies }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"9ea13c62-2e09-4b37-b889-66edaef1fcf1\",\n      \"name\": \"Convert raw to base64\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3840,\n        200\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const encoded = Buffer.from($json.output).toString('base64');\\n\\nreturn { encoded };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c4474fa1-b1b5-432f-b30e-100201c9ec7c\",\n      \"name\": \"Convert to HTML\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        4060,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"index.html\",\n          \"mimeType\": \"text/html\"\n        },\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"encoded\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3c4d2010-1bdc-4f01-bb1a-bd0128017787\",\n      \"name\": \"Generate plain PDF doc\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        4340,\n        200\n      ],\n      \"parameters\": {\n        \"url\": \"http://gotenberg:3000/forms/chromium/convert/html\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\"\n            }\n          }\n        },\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"files\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"data\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"2b3cd55f-21a3-4c14-905f-82b158aa3fd0\",\n      \"name\": \"Send PDF to the user\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        4640,\n        200\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram trigger').item.json[\\\"message\\\"][\\\"chat\\\"][\\\"id\\\"] }}\",\n        \"operation\": \"sendDocument\",\n        \"binaryData\": true,\n        \"additionalFields\": {\n          \"fileName\": \"={{ $('Set parsed fileds').item.json[\\\"personal_info\\\"][\\\"name\\\"].toLowerCase().replace(' ', '-') }}.pdf\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"lStLV4zzcrQO9eAM\",\n          \"name\": \"Telegram (Resume Extractor)\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"54fe1d2d-eb9d-4fe1-883f-1826e27ac873\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        540,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 226.21234567901217,\n        \"height\": 312.917333333334,\n        \"content\": \"### Add chat ID\\nRemember to set your actual ID to trigger automation from Telegram.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b193a904-260b-4d45-8a66-e3cb46fc7ce4\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        800,\n        83.43940740740783\n      ],\n      \"parameters\": {\n        \"width\": 229.64938271604922,\n        \"height\": 293.54824691358016,\n        \"content\": \"### Ignore start message\\nWorkflow ignores initial`/start` message sent to the bot.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d5c95d8f-b699-4a8e-9460-a4f5856b5e6f\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1066,\n        -20\n      ],\n      \"parameters\": {\n        \"width\": 211.00246913580224,\n        \"height\": 302.41975308642,\n        \"content\": \"### Download resume file\\nBased on file ID, node performs downloading of the file uploaded by user.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2de0751d-8e11-457e-8c38-a6dcca59190c\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1320,\n        -20\n      ],\n      \"parameters\": {\n        \"width\": 217.87654320987633,\n        \"height\": 302.41975308642,\n        \"content\": \"### Extract text from PDF\\nNode extracts readable text form PDF.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4b9ccab8-ff6c-408f-93fe-f148034860a0\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1580,\n        -20\n      ],\n      \"parameters\": {\n        \"width\": 410.9479506172837,\n        \"height\": 302.41975308642,\n        \"content\": \"### Parse resume data\\nCreate structured data from text extracted from resume. Chain uses OpenAI `gpt-4-turbo-preview` model and JSON response mode. **Adjust JSON schema in output parser to your needs.**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bfb1d382-90fa-4bff-8c38-04e53bcf5f58\",\n      \"name\": \"Parse resume data\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1660,\n        120\n      ],\n      \"parameters\": {\n        \"prompt\": \"={{ $json.text }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"Your task is to extract all necessary data such as first name, last name, experience, known technologies etc. from the provided resume text and return in well-unified JSON format. Do not make things up.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"7e8eb10a-f21c-4a9c-90b1-b71537b78356\",\n      \"name\": \"Merge other data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3140,\n        340\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"7c4398de-7b4d-4095-b38f-eaf099d2991b\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2340,\n        -491.4074074074074\n      ],\n      \"parameters\": {\n        \"width\": 1196.8442469135782,\n        \"height\": 1260.345679012346,\n        \"content\": \"### Format HTML\\nFormat HTML for each resume section (employment history, projects etc.).\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9de2f504-6ff0-4b00-8e0d-436c789b4e23\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3580,\n        40\n      ],\n      \"parameters\": {\n        \"width\": 638.6516543209876,\n        \"height\": 322.5837037037037,\n        \"content\": \"### Create HTML file\\nFrom formatted output create `index.html` file in order to run PDF conversion.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"11abdff5-377e-490d-9136-15c24ff6a05e\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4260,\n        39.83604938271645\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 262.0096790123454,\n        \"height\": 322.5837037037035,\n        \"content\": \"### Convert file to PDF\\nForm `index.html` create PDF using [Gotenberg](https://gotenberg.dev/). If you're not familiar with this software, feel free to check out [my tutorial on YouTube](https://youtu.be/bo15xdjXf1Y?si=hFZMTfjzfSOLOLPK).\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"73fb81d0-5218-4311-aaec-7fa259d8cbd3\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4560,\n        40\n      ],\n      \"parameters\": {\n        \"width\": 262.0096790123454,\n        \"height\": 322.5837037037035,\n        \"content\": \"### Send PDF file to user\\nDeliver converted PDF to Telegram user (based on chat ID).\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bb5fa375-4cc9-4559-a014-7b618d6c5f32\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -280,\n        128\n      ],\n      \"parameters\": {\n        \"width\": 432.69769500990674,\n        \"height\": 364.2150828344463,\n        \"content\": \"## \\u26a0\\ufe0f Note\\n\\nThis is *resume extractor* workflow that I had a pleasure to present during [n8n community hangout](https://youtu.be/eZacuxrhCuo?si=KkJQrgQuvLxj-6FM&t=1701\\n) on March 7, 2024.\\n\\n1. Remember to add your credentials and configure nodes.\\n2. This node requires installed [Gotenberg](https://gotenberg.dev/) for PDF generation. If you're not familiar with this software, feel free to check out [my tutorial on YouTube](https://youtu.be/bo15xdjXf1Y?si=hFZMTfjzfSOLOLPK). If you don't want to self-host Gotenberg, you use other PDF generation provider (PDFMonkey, ApiTemplate or similar).\\n3. If you like this workflow, please subscribe to [my YouTube channel](https://www.youtube.com/@workfloows) and/or [my newsletter](https://workfloows.com/).\\n\\n**Thank you for your support!**\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Auth\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if start message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"No operation (unauthorized)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract text from PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Projects\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge projects and volunteering\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Education\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge education and employment history\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Merge all\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set final data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Technologies\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge personal info and technologies\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Volunteering\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge projects and volunteering\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Personal info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge personal info and technologies\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set final data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert raw to base64\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate plain PDF doc\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge other data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge all\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Telegram trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Auth\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Parse resume data\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse resume data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set parsed fileds\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set parsed fileds\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert employment history to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Convert education to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Convert projects to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Personal info\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Convert volunteering to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Technologies\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Employment history\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge education and employment history\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Auto-fixing Output Parser\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert raw to base64\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract text from PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse resume data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if start message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"No operation (start message)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate plain PDF doc\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send PDF to the user\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert projects to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Projects\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Auto-fixing Output Parser\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auto-fixing Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Parse resume data\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert education to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Education\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert volunteering to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Volunteering\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge projects and volunteering\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge other data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Convert employment history to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Employment history\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge personal info and technologies\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge all\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge education and employment history\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge other data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.code",
      "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegramTrigger",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.convertToFile",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.chainLlm",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "telegram trigger"
  }
}