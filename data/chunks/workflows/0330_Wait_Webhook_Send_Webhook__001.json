{
  "source": "0330_Wait_Webhook_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"8c8c5237b8e37b006a7adce87f4369350c58e41f3ca9de16196d3197f69eabcd\",\n    \"templateId\": \"1971\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"dbb98f7d-6737-4eaa-9a66-9779c042c575\",\n      \"name\": \"VirusTotal result\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2430,\n        1648\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.data.links.self }}\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"virusTotalApi\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"fb71337b-ebd3-4331-9f18-ff953c6b068b\",\n      \"name\": \"DNS Lookup\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1330,\n        1028\n      ],\n      \"parameters\": {\n        \"url\": \"=https://dns.google/resolve\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"value\": \"={{ $json.url.includes('://') ? $json.url.split('://')[1].split('/')[0] : $json.url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"290c6e9c-31d1-4476-9beb-b72a795ecfbb\",\n      \"name\": \"Set IP From Lookup\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1530,\n        1028\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// Get the resolved IP address (last item in the Answer array)\\nconst ip = $json.Answer.pop().data;\\nconst item = {...$('Is IP?').item.json}\\nitem.ip = ip\\n\\nreturn {json: item};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2e25aa5e-479c-4e3b-b866-89f2bdbabbba\",\n      \"name\": \"Set IP\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1390,\n        828\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"ip\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"69b89cd7-1456-4067-a9da-d81ef3f86097\",\n      \"name\": \"Merge VirusTotal & Greynoise results\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3610,\n        948\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"ip\",\n              \"field2\": \"ip\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"1011bb3b-3f75-40b8-a473-e07b70079b60\",\n      \"name\": \"Is IP?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1110,\n        848\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.url }}\",\n              \"value2\": \"/^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$/\",\n              \"operation\": \"regex\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"770b4056-1497-48ed-bcd7-ad6e7106cc7d\",\n      \"name\": \"Start VirusTotal Scan\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1990,\n        1648\n      ],\n      \"parameters\": {\n        \"url\": \"https://www.virustotal.com/api/v3/urls\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"virusTotalApi\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"d5d31e4a-2f95-4151-af35-bb8129f2e5a3\",\n      \"name\": \"VirusTotal Summary\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3230,\n        1628\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"virusTotalStats\",\n              \"value\": \"={{ $json.data.attributes.stats }}\"\n            },\n            {\n              \"name\": \"blockList\",\n              \"value\": \"={{ $json.data.attributes.results.BlockList.result }}\"\n            },\n            {\n              \"name\": \"openPhish\",\n              \"value\": \"={{ $json.data.attributes.results.OpenPhish.result }}\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $('Merge').all()[$itemIndex].json.url }}\"\n            },\n            {\n              \"name\": \"ip\",\n              \"value\": \"={{ $('Merge').all()[$itemIndex].json.ip }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"dotNotation\": false\n        },\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"467c795f-6f13-4d6d-a8cf-5cf9be2e7a77\",\n      \"name\": \"VirusTotal ready?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2790,\n        1648\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.data.attributes.status }}\",\n              \"value2\": \"queued\",\n              \"operation\": \"notEqual\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"284728e4-dc74-4c37-890b-5305970960c0\",\n      \"name\": \"Wait 5s\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        2230,\n        1648\n      ],\n      \"webhookId\": \"18348e84-831d-4ea8-bb39-6ec847c72275\",\n      \"parameters\": {\n        \"unit\": \"seconds\",\n        \"amount\": 5\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"76e1414a-d690-44df-a3b8-8dbb4a192720\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"notes\": \"Example:\\n\\ncurl -X POST \\\"https://n8n.yourdomain.com/webhook-test/d5124bd8-aada-44da-8050-3070f303ad24\\\" \\\\\\n                 -H \\\"Content-Type: application/json\\\" \\\\\\n                 -d '{\\\"data\\\": [{\\\"url\\\": \\\"1.1.1.1\\\"}, {\\\"url\\\": \\\"88.204.59.2\\\"}, {\\\"url\\\": \\\"54.36.148.188\\\"}, {\\\"url\\\": \\\"facebook.com\\\"}], \\\"email\\\": \\\"user@domain.com\\\"}'\",\n      \"position\": [\n        450,\n        1448\n      ],\n      \"webhookId\": \"d5124bd8-aada-44da-8050-3070f303ad24\",\n      \"parameters\": {\n        \"path\": \"d5124bd8-aada-44da-8050-3070f303ad24\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b3e188f3-0a39-4451-ab70-632282243f03\",\n      \"name\": \"Get List of URLs\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        650,\n        1448\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"body.data\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"360628b7-afc0-4444-a8c0-a85fae54b0e3\",\n      \"name\": \"Set Email\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        850,\n        1448\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Email\",\n              \"value\": \"={{ $('Webhook').item.json.body.email }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6df9593b-5f9f-4b50-bddb-97dcb2017d6e\",\n      \"name\": \"Merge Greynoise results\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2370,\n        728\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"1957a675-7a5a-4ccd-b334-f2c4f9749f58\",\n      \"name\": \"Send Report Slack\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        3850,\n        1168\n      ],\n      \"parameters\": {\n        \"text\": \"=Successfully scanned {{ $json.url }} {{$json.ip !== $json.url ? `(${$json.ip})`: '' }}\\n\\n\\nVirusTotal Report ({{ $json.virusTotalStats.harmless + $json.virusTotalStats.malicious + $json.virusTotalStats.suspicious + $json.virusTotalStats.undetected}} scans)\\n\\n{{$json.virusTotalStats.harmless}} Harmless\\n{{$json.virusTotalStats.malicious}} Malicious\\n{{$json.virusTotalStats.suspicious}} Suspicious\\n{{$json.virusTotalStats.undetected}} Undetected\\n{{$json.virusTotalStats.timeout}} Timed out\\n\\nBlockList: {{ $json.blockList }}\\nOpenPhish: {{ $json.openPhish }}\\n\\nSummary: {{ $json.virusTotalStats.suspicious + $json.virusTotalStats.malicious === 0 ? \\\"âœ… Harmless\\\": \\\"ðŸš¨ Malicous\\\" }}\\n\\n\\n\\nGreynoise Report\\n\\nTrust Level: {{ $json.trust_level ?? \\\"Not trusted\\\"}}\\nClassification: {{ $json.classification }}\\n\\nLocation: {{ $json.location || 'n/a' }}\\nCategory: {{ $json.category }}\\nTags: {{$json.tags.join(', ') || 'None'}}\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"#notifications\"\n        },\n        \"otherOptions\": {}\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"4d64351f-0233-4859-afd2-fc31e3fc37cd\",\n      \"name\": \"Send Report Email\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        3850,\n        948\n      ],\n      \"parameters\": {\n        \"sendTo\": \"={{ $('Merge').first().json.Email }}\",\n        \"message\": \"=Successfully scanned {{ $json.url }} {{$json.ip !== $json.url ? `(${$json.ip})`: '' }}<br /><br /><br />\\n\\n\\n<h3>VirusTotal Report ({{ $json.virusTotalStats.harmless + $json.virusTotalStats.malicious + $json.virusTotalStats.suspicious + $json.virusTotalStats.undetected}} scans)</h3><br /><br />\\n\\n{{$json.virusTotalStats.harmless}} Harmless<br />\\n{{$json.virusTotalStats.malicious}} Malicious<br />\\n{{$json.virusTotalStats.suspicious}} Suspicious<br />\\n{{$json.virusTotalStats.undetected}} Undetected<br />\\n{{$json.virusTotalStats.timeout}} Timed out<br /><br />\\n\\nBlockList: {{ $json.blockList }}<br />\\nOpenPhish: {{ $json.openPhish }}<br /><br />\\n\\n<b>Summary: {{ $json.virusTotalStats.suspicious + $json.virusTotalStats.malicious === 0 ? \\\"âœ… Harmless\\\": \\\"ðŸš¨ Malicous\\\" }}</b><br /><br /><br />\\n\\n\\n\\n<h3>Greynoise Report</h3><br /><br />\\n\\nTrust Level: {{ $json.trust_level ?? \\\"Not trusted\\\"}}<br />\\nClassification: {{ $json.classification }}<br /><br />\\n\\nLocation: {{ $json.location || 'n/a' }}<br />\\nCategory: {{ $json.category }}<br />\\nTags: {{$json.tags.join(', ') || 'None'}}<br /><br /><br /><br />\",\n        \"options\": {},\n        \"subject\": \"={{ $json.url }} Scan Report\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e4305eb1-8e57-49d0-97b7-391200bd0042\",\n      \"name\": \"Greynoise Summary\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2650,\n        728\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"ip\",\n              \"value\": \"={{ $json.ip }}\"\n            },\n            {\n              \"name\": \"classification\",\n              \"value\": \"={{ $json.classification || 'safe' }}\"\n            },\n            {\n              \"name\": \"location\",\n              \"value\": \"={{ $json.metadata?.region ? `${$json.metadata?.region} ${$json.metadata?.country}` : '' }}\"\n            },\n            {\n              \"name\": \"tags\",\n              \"value\": \"={{ $json.tags ?? [] }}\"\n            },\n            {\n              \"name\": \"category\",\n              \"value\": \"={{ $json.category || 'n/a' }}\"\n            },\n            {\n              \"name\": \"trustLevel\",\n              \"value\": \"={{ $json.trust_level }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"dotNotation\": false\n        },\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c149b1f3-e447-4194-a94e-7d8e0bf38241\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1750,\n        848\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"88c30a1d-c232-4da5-87c3-4d67234b6a29\",\n      \"name\": \"Combine looped items\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3010,\n        1628\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let results = [],\\n  i = 0;\\n\\ndo {\\n  try {\\n    results = results.concat($(\\\"VirusTotal result\\\").all(0, i)\\n                     .filter(node => node.json.data.attributes.status === 'completed')\\n  );\\n  } catch (error) {\\n    return results;\\n  }\\n  i++;\\n} while (true);\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"839170f5-7c97-40fd-aeaa-ad57262a586e\",\n      \"name\": \"Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        2610,\n        1648\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.data.attributes.status }}\",\n              \"value2\": \"completed\",\n              \"operation\": \"notEqual\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"d68db329-4628-44a8-8f97-b06cbf18e238\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"width\": 651.1325602067182,\n        \"height\": 703.911103299255,\n        \"content\": \"## Form Input Overview\\n\\n- **Purpose**: \\n  - Instead of forcing other departments to use a full threat platform, simplify the interaction with our Threat Intel workflow which allows other departments to submit items via URL-accessible forms.\\n\\n- **Form Access URLs**:\\n  - **Execute Mode**: `https://n8n.domain.com/webhook/test/url-scan-form` - Use this to execute the workflow interactively within the n8n canvas. Hit the 'Execute Workflow' button to see real-time execution results.\\n  - **Silent Mode**: `https://n8n.domain.com/webhook/url-scan-form` - Use this for background execution without canvas updates. Results will be logged silently and can be reviewed in the 'Executions' tab.\\n\\n## Details and Best Practices\\nWhen using the form, ensure that all inputs match the required format, like valid URLs for scans, to prevent any workflow interruptions. Keep in mind these forms are not performing input sanitation so incorrectly entered values will trigger an error workflow. Should there be any issues upon form submission, such as an absence of a confirmation message, or if the workflow fails, you can find detailed error information in the 'Executions' tab. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f9081f7d-35ab-489c-87bb-c2deba7515f9\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        370,\n        968\n      ],\n      \"parameters\": {\n        \"width\": 653.8285114211884,\n        \"height\": 663.9676956356055,\n        \"content\": \"## API Integration\\nWant to submit URLs and IPs automatically? Utilize the JSON structure below to upload multiple indicators simultaneously. The workflow leverages 'Item list' to parse the 'data' field, while 'Set Email' node appends the provided email to each URL.\\n\\n```json\\n{\\n    \\\"email\\\": \\\"johndoe@example.com\\\",\\n    \\\"data\\\": [\\n        {\\n            \\\"url\\\": \\\"aztechsol.com\\\"\\n        },\\n        {\\n            \\\"ip\\\": \\\"8.8.8.8\\\"\\n        }\\n    ]\\n}\\n```\\n\\n## Details and Best Practices\\n- Webhook Usage: Send data with a POST request, e.g., using curl.\\n- Validation & Errors: Ensure URLs are correctly formatted. Check the 'Executions' tab for any submission errors. Keep in mind that there is only basic error handling in this workflow.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aaaac5aa-f0a0-4452-99b4-d78d55a80564\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1070,\n        266.9400418986032\n      ],\n      \"parameters\": {\n        \"width\": 827.7173647545219,\n        \"height\": 936.2889303743061,\n        \"content\": \"![VirusTotal](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/320px-Google_2015_logo.svg.png)\\n## Data Standardization & Google DNS Integration\\n-   Purpose:\\n\\n    -   Standardize the diverse input sources---either from form submissions or API calls---by streamlining the input through a uniform processing pipeline. This ensures that whether the data entered is an IP address or a domain name, it can be consistently managed and transformed for threat intelligence tasks.\\n    -   Extract IP from URL by passing it to Google DNS and attaching it to the URL.\\n\\n## Details and Best Practices\\nTo guarantee the efficacy of the workflow, adhere to the prescribed input formats. For IP addresses, ensure they conform to IPv4 or IPv6 standards; for domains, verify that they are properly structured URLs. The system assumes clean inputs, as there are no built-in sanitation mechanisms---erroneous inputs may result in processing errors.\\n\\nIn case of an unsuccessful DNS lookup or other discrepancies, consult the 'Executions' tab for comprehensive error logs and apply the necessary corrections. To mitigate workflow disruptions, establish a set of error-handling protocols to manage and rectify such incidents.\\n\\nBe mindful that while the workflow is designed to automatically discern between IP addresses and domain names, it is imperative that the data entered is accurate to prevent any fallbacks or unnecessary processing overhead.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"32e80421-b608-4d89-b6fe-a95ab5b9e3bd\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1950,\n        68.30371042491026\n      ],\n      \"parameters\": {\n        \"width\": 1485.5734904392764,\n        \"height\": 987.7653566551932,\n        \"content\": \"![VirusTotal](https://i.imgur.com/fd6Ng5R.png)\\n## Greynoise Integration\\n\\n-   Purpose:\\n    -   The aim is to tap into Greynoise's robust API to enrich and contextualize IP-related information within the workflow. By querying Greynoise's specialized noise and RIOT databases, the workflow can quickly ascertain the nature of the IP activity and determine its relevance and potential threat level to an organization.\\n    -   Classify and assess IP addresses by consulting with Greynoise databases, providing an additional layer of security intelligence.\\n\\n## Details and Best Practices\\nTo ensure reliable results from the Greynoise integration, it's important to use well-formatted IP addresses. Confirm that IPs meet standard internet protocols for either IPv4 or IPv6. The workflow assumes that inputs are pre-sanitized, so any deviation may lead to errors or inaccurate assessments.\\n\\nIf the Greynoise lookup does not yield results or encounters errors, investigate the issue using the 'Executions' tab to view detailed error logs. Proactively develop error-handling strategies to effectively manage and recover from these errors.\\n\\nThe workflow is pre-configured to discern and process IP information accurately; however, it relies heavily on the integrity of the input. Incorrectly entered IPs can cause incorrect lookups and potentially miss significant threat data, thereby undermining the security posture.\\n\\n**Please note that this workflow segment is designed for the enterprise edition of Greynoise's API. Users must have a valid API key with enterprise access which should be configured in the HTTP request nodes that perform the API calls.**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adda919b-f65f-4fe0-9f66-11a5a9b65674\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1952,\n        1088\n      ],\n      \"parameters\": {\n        \"width\": 1483.145187368557,\n        \"height\": 774.1502041707245,\n        \"content\": \"![VirusTotal](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/VirusTotal_logo.svg/320px-VirusTotal_logo.svg.png)\\n## VirusTotal Integration\\n-   Purpose:\\n    -   This workflow component is specifically crafted to harness the VirusTotal API's capabilities, allowing URLs to be submitted for thorough scanning. The goal is to seamlessly integrate the scanning process into the workflow, handling the asynchronous nature of VirusTotal scans by effectively managing state checks and result compilation.\\n    -   Implement URL scanning by submitting requests to the VirusTotal API and accurately aggregating the scan results for analysis.\\n\\n## Details and Best Practices\\nFor successful VirusTotal integration, it's crucial to submit URLs following standard web formats. The workflow is configured to expect correct URL inputs; deviations can disrupt the scanning process.\\n\\nUpon submission, if the VirusTotal scan results are pending or if errors are encountered, these can be tracked and examined under the 'Executions' tab. Develop a proactive strategy for handling such cases, including error logging, maximum retry limitations, or implementing a timeout mechanism.\\n\\nThe configuration of the workflow takes into account the need to prevent rapid, repetitive status checks, which can strain the VirusTotal API. As a result, it employs a looping system for status re-evaluation, which should be managed with precision to avoid unnecessary delays or excessive polling.\\n\\nNote that this integration is tailored for workflows that involve the VirusTotal API. While it works with the free VirusTotal license, too many requests may cause errors due to rate limiting. The Public API is limited to 500 requests per day and a rate of 4 requests per minute. It requires valid credentials set up in the HTTP request nodes to authenticate API calls successfully. Users should configure their API keys for access, and handle any API error responses, like HTTP 4xx or 5xx codes, with a robust error-logging and retry mechanism to ensure reliability and effectiveness of the scan process.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdaec18e-e9f1-4567-89e6-f5474bff42c4\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3470,\n        247\n      ],\n      \"parameters\": {\n        \"width\": 898.9279259630971,\n        \"height\": 1146.6423884335761,\n        \"content\": \"![VirusTotal](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Slack_Logo_Pre_2019.svg/320px-Slack_Logo_Pre_2019.svg.png)\\n![VirusTotal](https://i.imgur.com/f6f6my0.png)\\n## Reporting Integration\\n-   Purpose:\\n    -   This component of the workflow is designed to amalgamate and communicate the insights from threat intelligence analysis to the team effectively. By integrating data from VirusTotal and Greynoise, it generates comprehensive reports that are automatically shared via Slack and email, fostering situational awareness and facilitating prompt action.\\n    -   Compile and disseminate threat intelligence reports that highlight the significance and implications of the analyzed IP or domain data, ensuring that the team remains informed and ready to act.\\n\\n## Details and Best Practices\\nThe heart of this workflow lies in the synthesis of threat intelligence gathered from both Greynoise and VirusTotal. By merging these data points, the logic creates a thorough examination of the URLs/IPs under scrutiny.\\n\\nHere's an expanded view of best practices to adhere to in this critical stage of the workflow:\\n\\nThe merging process must be precise, using the 'ip' fields as the common key to unify data from the two distinct sources. This unified view is crucial for accurate analysis and reporting.\\n\\nItâ€™s advisable to extend the merging capabilities to include additional data fields that may enhance the intelligence report. This could mean incorporating timestamps, geolocation data, or even threat levels.\\n\\nWhen integrating new messaging or reporting nodes, leverage the provided JSON structure to maintain consistency. To replicate the logic in another node, simply copy the JSON snippet from the expression editor and paste it into the configuration of the new node.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"577d4b74-9155-440f-a752-6654f8e54669\",\n      \"name\": \"GreyNoise RIOT lookup\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2070,\n        708\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.greynoise.io/v2/riot/{{ $json.ip }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"9a41df79-3d81-4b2e-b21c-7f31985d8d1e\",\n      \"name\": \"GreyNoise IP Check\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2070,\n        888\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.greynoise.io/v2/noise/context/{{ $json.ip }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"006eb997-5851-41bd-9d5c-9f44d3b7ec08\",\n      \"name\": \"Form Trigger\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        640,\n        800\n      ],\n      \"webhookId\": \"087145f7-3c00-4a1a-8e04-181b536606e7\",\n      \"parameters\": {\n        \"path\": \"url-scan-form\",\n        \"options\": {},\n        \"formTitle\": \"Scan URL or IP and get a report\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldLabel\": \"url\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldLabel\": \"Email\",\n              \"requiredField\": true\n            }\n          ]\n        },\n        \"formDescription\": \"Get a report from Virus Total and Greynoise on an IP address of URL\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Start VirusTotal Scan\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"GreyNoise IP Check\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"GreyNoise RIOT lookup\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"VirusTotal ready?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is IP?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set IP\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"DNS Lookup\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set IP\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait 5s\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"VirusTotal result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get List of URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is IP?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"DNS Lookup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set IP From Lookup\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Form Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is IP?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get List of URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Greynoise Summary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge VirusTotal & Greynoise results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"VirusTotal ready?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine looped items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait 5s\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"VirusTotal result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GreyNoise IP Check\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Greynoise results\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Set IP From Lookup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"VirusTotal Summary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge VirusTotal & Greynoise results\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Combine looped items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"VirusTotal Summary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GreyNoise RIOT lookup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Greynoise results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start VirusTotal Scan\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait 5s\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Greynoise results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Greynoise Summary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge VirusTotal & Greynoise results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Report Slack\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Send Report Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.if",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.if",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.set",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.slack",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.set",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.code",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.formTrigger"
    ],
    "trigger": "form trigger"
  }
}