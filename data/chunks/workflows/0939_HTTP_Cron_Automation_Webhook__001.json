{
  "source": "0939_HTTP_Cron_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": 3,\n  \"name\": \"NameCheap Dynamic DNS (DDNS)\",\n  \"nodes\": [\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        380,\n        300\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 15\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Checks IP if new\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        740,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const staticData = getWorkflowStaticData('global');\\nconst newItem = items.map(item => item.json[\\\"ip\\\"]);\\nconst ildItem = staticData.ildItem; \\n\\nif (!ildItem) {\\n  staticData.ildItem = newItem;\\n  return items;\\n}\\n\\n\\nconst actualnewItem = newItem.filter((id) => !ildItem.includes(id));\\nconst actualItem = items.filter((data) => actualnewItem.includes(data.json['ip']));\\nstaticData.ildItem = [...actualnewItem, ...ildItem];\\n\\nreturn actualItem;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"subdomains\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1100,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"items[0].json = {\\n    value: [\\n        {id: \\\"subdomain1\\\"},\\n        {id: \\\"subdomain2\\\"},\\n        {id: \\\"subdomain3\\\"}\\n    ]\\n};\\nreturn items;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Loops trough Subdomain list\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1280,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const newItems = [];\\n\\nfor (const item of items[0].json.value) {\\n  newItems.push({json: item});\\n}\\n\\nreturn newItems;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Send data to Namecheap\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1460,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"=https://dynamicdns.park-your-domain.com/update?host={{$node[\\\"Loops trough Subdomain list\\\"].parameter[\\\"functionCode\\\"]}}test&domain={{$node[\\\"yourdomain.com\\\"].parameter[\\\"values\\\"][\\\"string\\\"][0][\\\"value\\\"]}}&password={{$node[\\\"yourdomain.com\\\"].parameter[\\\"values\\\"][\\\"string\\\"][1][\\\"value\\\"]}}&ip={{$node[\\\"Get Public IP address\\\"].json[\\\"ip\\\"]}}\",\n        \"options\": {},\n        \"responseFormat\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get Public IP address\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        560,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.ipify.org?format=json\",\n        \"options\": {},\n        \"jsonParameters\": true,\n        \"allowUnauthorizedCerts\": true\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 1,\n      \"continueOnFail\": true\n    },\n    {\n      \"name\": \"yourdomain.com\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        300\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"domain\",\n              \"value\": \"yourdomain.com\"\n            },\n            {\n              \"name\": \"password\",\n              \"value\": \"your-namecheap-ddns-password\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Public IP address\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"subdomains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loops trough Subdomain list\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"yourdomain.com\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"subdomains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Checks IP if new\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"yourdomain.com\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Public IP address\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Checks IP if new\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loops trough Subdomain list\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send data to Namecheap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.cron",
      "n8n-nodes-base.function",
      "n8n-nodes-base.function",
      "n8n-nodes-base.function",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}