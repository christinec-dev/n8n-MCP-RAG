{
  "source": "0715_Wait_Schedule_Create_Scheduled.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"173bb893d2008dedab0ccfa3d7dba2c858a9076afa8f7dce6ebaa9c817262edf\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"c9e46f43-b159-42ca-945d-7aa8546e5fa2\",\n      \"name\": \"Get playlist snapshot\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        380,\n        1580\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $json.spotify_playlist_id }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"get\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"73c2303e-24c2-4026-95f6-825e5d08baa4\",\n      \"name\": \"Get playlist snapshot1\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        720,\n        1580\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $('variables').item.json.spotify_playlist_id }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"get\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bb71003b-0945-4333-91d3-662290dfb42d\",\n      \"name\": \"If different snapshot\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        900,\n        1580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"2606c811-7c92-4c61-b99e-be2aaced10dd\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $('Get playlist snapshot').item.json.snapshot_id }}\",\n              \"rightValue\": \"={{ $json.snapshot_id }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4894d2a7-dda9-430f-849a-d2368daa0aab\",\n      \"name\": \"Get all musics\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1220,\n        1600\n      ],\n      \"parameters\": {\n        \"tableId\": \"={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e854147b-a5fa-400d-8440-bda25a0226b2\",\n      \"name\": \"Update to_delete to true\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1700,\n        1620\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"id\",\n              \"keyValue\": \"={{ $json.id }}\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"to_delete\",\n              \"fieldValue\": \"TRUE\"\n            }\n          ]\n        },\n        \"operation\": \"update\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2425db39-487b-4b61-9b61-9ae00067bbca\",\n      \"name\": \"Add music\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1700,\n        1400\n      ],\n      \"parameters\": {\n        \"tableId\": \"={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\\n\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"id\",\n              \"fieldValue\": \"={{ $json.track.id }}\"\n            },\n            {\n              \"fieldId\": \"title\",\n              \"fieldValue\": \"={{ $json.track.name }}\"\n            },\n            {\n              \"fieldId\": \"artist\",\n              \"fieldValue\": \"={{ $json.track.artists[0].name }}\"\n            },\n            {\n              \"fieldId\": \"duration\",\n              \"fieldValue\": \"={{ $json.track.duration_ms }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"1c28ae15-9049-4ac7-9a7f-dcd094a60ace\",\n      \"name\": \"Compare Datasets\",\n      \"type\": \"n8n-nodes-base.compareDatasets\",\n      \"position\": [\n        1460,\n        1540\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"skipFields\": \"title, artists, duration, youtube_video_id, added_at, added_by, is_local, primary_color, video_thumbnail,\"\n        },\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"track.id\",\n              \"field2\": \"id\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"af89d454-1071-42c1-9455-d64e02ae14b7\",\n      \"name\": \"Spotify\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1220,\n        1440\n      ],\n      \"parameters\": {\n        \"id\": \"={{ (() => { try { return $('variables').item.json.spotify_playlist_id } catch(e) {} try { return $('variables2').item.json.spotify_playlist_id } catch(e) {} return undefined; })() }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"getTracks\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b924ad92-b1f2-41d5-b662-1e64ad0cc6dc\",\n      \"name\": \"No Operation, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1220,\n        1800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2665982e-68ac-4a83-988d-78d07a0d6c75\",\n      \"name\": \"Get all musics not in youtube playlist\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        400,\n        960\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"null\",\n              \"condition\": \"is\"\n            },\n            {\n              \"keyName\": \"to_delete\",\n              \"keyValue\": \"FALSE\",\n              \"condition\": \"is\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $json.supabase_table_name }}\",\n        \"matchType\": \"allFilters\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6ea4ae11-9889-4ae2-904f-614ca4118b8a\",\n      \"name\": \"Every day at noon\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        20,\n        1220\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 12\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8e4b14f4-a7ec-45dd-9b24-8c86889fd135\",\n      \"name\": \"Every day at noon + 1mn\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        20,\n        960\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 12,\n              \"triggerAtMinute\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"16242250-5f3f-49f9-b6cb-7302bc11765a\",\n      \"name\": \"Every hour\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        20,\n        1580\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6b6784ce-e236-40ca-b85c-1b0f0abdd7a5\",\n      \"name\": \"Wait 1 hour\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        560,\n        1580\n      ],\n      \"webhookId\": \"7d71bd21-a70a-47d5-bde5-299299fdb84e\",\n      \"parameters\": {\n        \"unit\": \"hours\",\n        \"amount\": 1\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"746e7e33-00ba-4e92-a877-3619e14fa718\",\n      \"name\": \"variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        200,\n        1580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"89615f0d-1f93-4416-bab4-1c69479e135e\",\n              \"name\": \"spotify_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"4fjIxvQt8aQrQZs4XqvsmR\"\n            },\n            {\n              \"id\": \"be22a9a9-58be-4275-aac5-c0d95ba91cfd\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n            },\n            {\n              \"id\": \"3536712c-8881-4089-98aa-e25516fea624\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"musics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0006e12a-fea6-408d-bcf5-6d0a726322b1\",\n      \"name\": \"Search video\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        2500,\n        1420\n      ],\n      \"parameters\": {\n        \"limit\": 5,\n        \"filters\": {\n          \"q\": \"={{ $json.title }} {{ '-' }} {{ $json.artist }}\"\n        },\n        \"options\": {},\n        \"resource\": \"video\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"24f5a360-fa93-4942-baea-baf134dd40a3\",\n      \"name\": \"Get video duration\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        3020,\n        1420\n      ],\n      \"parameters\": {\n        \"part\": [\n          \"contentDetails\",\n          \"snippet\"\n        ],\n        \"options\": {},\n        \"videoId\": \"={{ $json.id.videoId }}\",\n        \"resource\": \"video\",\n        \"operation\": \"get\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2027d659-01d6-4dd0-bfdc-c92f65b021bc\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        2840,\n        1420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"3e843f70-bc17-4749-86ba-11f5a0e98e7d\",\n      \"name\": \"If video duration ~= music duration\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3240,\n        1420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"e8ed16f1-f0c6-4ef4-bf09-8ecb6fbf44cb\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ $json.contentDetails.duration.match(/(\\\\d+)(?=[MHS])/g).reduce((acc, time, i) => acc + time * [60000, 1000, 1][i], 0) }}\",\n              \"rightValue\": \"={{ $('data1').first().json.duration - 5000}}\"\n            },\n            {\n              \"id\": \"c4317b05-69bb-4244-ac8a-4cc51113a63b\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"lt\"\n              },\n              \"leftValue\": \"={{ $json.contentDetails.duration.match(/(\\\\d+)(?=[MHS])/g).reduce((acc, time, i) => acc + time * [60000, 1000, 1][i], 0) }}\",\n              \"rightValue\": \"={{ $('data1').first().json.duration + 20000}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a21e462c-72c9-4e77-99dc-1046acbaa998\",\n      \"name\": \"Add music to playlist\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        3460,\n        1400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"videoId\": \"={{ $('Get video duration').item.json.id }}\",\n        \"resource\": \"playlistItem\",\n        \"playlistId\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"68fc1180-ce51-496a-909f-a652bb43febc\",\n      \"name\": \"Add youtube id to row\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        3640,\n        1400\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"id\",\n              \"keyValue\": \"={{ $('data1').first().json.id }}\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $('data1').first().json.supabase_table_name }}\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"youtube_video_id\",\n              \"fieldValue\": \"={{ $json.snippet.resourceId.videoId }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3611f50e-3000-46e9-b145-109251c3a12d\",\n      \"name\": \"Discord\",\n      \"type\": \"n8n-nodes-base.discord\",\n      \"position\": [\n        4040,\n        1400\n      ],\n      \"parameters\": {\n        \"content\": \"=Added : {{ $json.title }} (https://www.youtube.com/watch?v={{ $json.youtube_video_id }})\",\n        \"options\": {},\n        \"authentication\": \"webhook\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bd6438b2-8628-4bb9-be34-03785458f194\",\n      \"name\": \"Discord1\",\n      \"type\": \"n8n-nodes-base.discord\",\n      \"position\": [\n        4040,\n        1020\n      ],\n      \"parameters\": {\n        \"content\": \"=No match for : {{ $('data1').first().json.title }}\",\n        \"options\": {},\n        \"authentication\": \"webhook\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"97ea9e76-96a5-48de-afe3-f81dbe7e431b\",\n      \"name\": \"Set youtube id to NOTFOUND if no matching\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        3320,\n        1020\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"id\",\n              \"keyValue\": \"={{ $('data1').first().json.id }}\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $('data1').first().json.supabase_table_name }}\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"youtube_video_id\",\n              \"fieldValue\": \"NOTFOUND\"\n            }\n          ]\n        },\n        \"matchType\": \"allFilters\",\n        \"operation\": \"update\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"acb1e31e-5f17-4092-b357-b0b255a4d15f\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        3060,\n        1220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2db8c163-bf26-445f-9339-9e387cf22286\",\n      \"name\": \"If no result\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2660,\n        1420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"49a188bb-3cc8-4a8d-babf-f591c2e72094\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5eea12d7-c313-4176-b85a-54f631e3a98f\",\n      \"name\": \"data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1900,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3622fecd-9a77-4cd4-ab02-6997cd83362d\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title }}\"\n            },\n            {\n              \"id\": \"76232c1e-f4de-41c4-837f-d20bd2bcfca2\",\n              \"name\": \"artist\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.artist }}\"\n            },\n            {\n              \"id\": \"01c3e160-f1ce-42e9-9010-a8ac806bb029\",\n              \"name\": \"duration\",\n              \"type\": \"number\",\n              \"value\": \"={{ $json.duration }}\"\n            },\n            {\n              \"id\": \"65f29ba5-28b4-4b50-8d38-540236229312\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"d6b26130-454c-4625-bdf2-688498d61321\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables1').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\\n\"\n            },\n            {\n              \"id\": \"9d82b3d1-b9f9-4dc1-9e7f-ec2a3c97bfe1\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ (() => { try { return $('variables').item.json.youtube_playlist_id } catch(e) {} try { return $('variables1').item.json.youtube_playlist_id } catch(e) {} try { return $('variables2').item.json.youtube_playlist_id } catch(e) {} return undefined; })() }}\\n\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"73055f49-c804-4b54-a16f-c795f1295069\",\n      \"name\": \"variables2\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        560,\n        1220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"89615f0d-1f93-4416-bab4-1c69479e135e\",\n              \"name\": \"spotify_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"4fjIxvQt8aQrQZs4XqvsmR\"\n            },\n            {\n              \"id\": \"be22a9a9-58be-4275-aac5-c0d95ba91cfd\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n            },\n            {\n              \"id\": \"3536712c-8881-4089-98aa-e25516fea624\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"musics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4f7da7fb-5b18-4b44-9aad-d24c2e1409cc\",\n      \"name\": \"variables1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        200,\n        960\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"89615f0d-1f93-4416-bab4-1c69479e135e\",\n              \"name\": \"spotify_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"4fjIxvQt8aQrQZs4XqvsmR\"\n            },\n            {\n              \"id\": \"be22a9a9-58be-4275-aac5-c0d95ba91cfd\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n            },\n            {\n              \"id\": \"3536712c-8881-4089-98aa-e25516fea624\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"musics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a814763e-d073-4984-986f-7c627bbe2269\",\n      \"name\": \"Loop Over Items1\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        2120,\n        1400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"5329c838-56bd-4d85-a789-7ded3a128d87\",\n      \"name\": \"data1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2320,\n        1420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3622fecd-9a77-4cd4-ab02-6997cd83362d\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title }}\"\n            },\n            {\n              \"id\": \"76232c1e-f4de-41c4-837f-d20bd2bcfca2\",\n              \"name\": \"artist\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.artist }}\"\n            },\n            {\n              \"id\": \"01c3e160-f1ce-42e9-9010-a8ac806bb029\",\n              \"name\": \"duration\",\n              \"type\": \"number\",\n              \"value\": \"={{ $json.duration }}\"\n            },\n            {\n              \"id\": \"65f29ba5-28b4-4b50-8d38-540236229312\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"d6b26130-454c-4625-bdf2-688498d61321\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.supabase_table_name }}\"\n            },\n            {\n              \"id\": \"9d82b3d1-b9f9-4dc1-9e7f-ec2a3c97bfe1\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.youtube_playlist_id }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"01039cab-f822-4cfc-996f-0e88923f9c14\",\n      \"name\": \"Get playlist items\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        540,\n        2600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"playlistItem\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"playlistId\": \"={{ $json.youtube_playlist_id }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c12fb59f-ad15-4456-b827-f749a22f2f0c\",\n      \"name\": \"Playlist items to be deleted\",\n      \"type\": \"n8n-nodes-base.compareDatasets\",\n      \"position\": [\n        840,\n        2700\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"skipFields\": \"kind, etag, snippet, thumbnails, channelTitle, position, resourceId, contentDetails, status\"\n        },\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"snippet.resourceId.videoId\",\n              \"field2\": \"youtube_video_id\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"57172162-a766-4c51-8249-e6e0632d1312\",\n      \"name\": \"Get all musics that should be in playlist\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        540,\n        2400\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"={{ null }}\",\n              \"condition\": \"neq\"\n            },\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"NOTFOUND\",\n              \"condition\": \"neq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $json.supabase_table_name }}\",\n        \"matchType\": \"allFilters\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88f01cff-33a2-4184-af92-80cf7dd6d28b\",\n      \"name\": \"Remove Duplicates\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"position\": [\n        1080,\n        2700\n      ],\n      \"parameters\": {\n        \"compare\": \"selectedFields\",\n        \"options\": {},\n        \"fieldsToCompare\": \"different.youtube_video_id.inputB\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"e25d78cd-d3a9-4b24-8663-84344b6f0b68\",\n      \"name\": \"Remove video from playlist\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        1240,\n        2700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"playlistItem\",\n        \"operation\": \"delete\",\n        \"playlistItemId\": \"={{ $json.different.id.inputA }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1420795b-fac4-47ac-8449-96ae39541c22\",\n      \"name\": \"Check for deleted videos\",\n      \"type\": \"n8n-nodes-base.compareDatasets\",\n      \"position\": [\n        820,\n        2480\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"skipFields\": \"kind, etag, snippet, thumbnails, channelTitle, position, resourceId, contentDetails, status\"\n        },\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"youtube_video_id\",\n              \"field2\": \"contentDetails.videoId\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"fc2e2908-c491-4d45-87e4-a572a2f3e72a\",\n      \"name\": \"Set youtube_video_id to null\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        1080,\n        2440\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"id\",\n              \"keyValue\": \"={{ $json.id }}\",\n              \"condition\": \"eq\"\n            },\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"NOTFOUND\",\n              \"condition\": \"neq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $('variables3').item.json.supabase_table_name }}\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"youtube_video_id\",\n              \"fieldValue\": \"={{ null }}\"\n            }\n          ]\n        },\n        \"matchType\": \"allFilters\",\n        \"operation\": \"update\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"52523569-4347-477f-abe3-718b0177324a\",\n      \"name\": \"Get all musics to be deleted\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        540,\n        2820\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"to_delete\",\n              \"keyValue\": \"TRUE\",\n              \"condition\": \"is\"\n            },\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"NOTFOUND\",\n              \"condition\": \"neq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $json.supabase_table_name }}\",\n        \"matchType\": \"allFilters\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c1306c1e-07aa-46f9-970c-3e9ecb01638a\",\n      \"name\": \"Delete music\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1400,\n        2700\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"={{ $('Get all musics to be deleted').item.json.youtube_video_id }}\",\n              \"condition\": \"eq\"\n            },\n            {\n              \"keyName\": \"to_delete\",\n              \"keyValue\": \"true\",\n              \"condition\": \"is\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $('variables3').item.json.supabase_table_name }}\",\n        \"matchType\": \"allFilters\",\n        \"operation\": \"delete\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"770083fa-6ac1-4dd9-929e-e30e933bbd95\",\n      \"name\": \"Every day at midnight\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        40,\n        2620\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {}\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"92e5e851-0c66-476e-bec8-a46fc96915ab\",\n      \"name\": \"variables3\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        240,\n        2620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"89615f0d-1f93-4416-bab4-1c69479e135e\",\n              \"name\": \"spotify_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"4fjIxvQt8aQrQZs4XqvsmR\"\n            },\n            {\n              \"id\": \"be22a9a9-58be-4275-aac5-c0d95ba91cfd\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n            },\n            {\n              \"id\": \"3536712c-8881-4089-98aa-e25516fea624\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"musics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"acde16fc-3fe3-453b-bffe-ead681e97046\",\n      \"name\": \"Reset NOTFOUND id to NULL\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        420,\n        3280\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"youtube_video_id\",\n              \"keyValue\": \"NOTFOUND\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"={{ $json.supabase_table_name }}\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"youtube_video_id\",\n              \"fieldValue\": \"={{ null }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"62053829-3253-4a7c-b70f-ba6075df034b\",\n      \"name\": \"variables4\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        220,\n        3280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"89615f0d-1f93-4416-bab4-1c69479e135e\",\n              \"name\": \"spotify_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"4fjIxvQt8aQrQZs4XqvsmR\"\n            },\n            {\n              \"id\": \"be22a9a9-58be-4275-aac5-c0d95ba91cfd\",\n              \"name\": \"youtube_playlist_id\",\n              \"type\": \"string\",\n              \"value\": \"PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom\"\n            },\n            {\n              \"id\": \"3536712c-8881-4089-98aa-e25516fea624\",\n              \"name\": \"supabase_table_name\",\n              \"type\": \"string\",\n              \"value\": \"musics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"9a205a87-f32a-49c1-8282-469777c83c9c\",\n      \"name\": \"Every month\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        40,\n        3280\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"months\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a40fa87c-71ae-4045-8285-91235f0cf1f0\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2040,\n        780\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 1780,\n        \"height\": 980,\n        \"content\": \"# Match Spotify Tracks to YouTube Videos  \\n\\n## This part finds the best YouTube video for a Spotify track using the YouTube Data API v3. It searches with the track title and artist, retrieves the top 5 videos, and selects the first one with a duration within ±10% of the Spotify track length. The matched video is added to a YouTube playlist, and its ID is saved in the database.  \\n\\n## Operation:\\n- ## Uses Spotify data (title + artist) for search.\\n- ## Ensures duration accuracy (±10% tolerance).  \\n- ## Automates playlist updates and database storage.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b850a168-7fa4-417c-980c-da8fcf558cfb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -20,\n        1440\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1100,\n        \"height\": 420,\n        \"content\": \"## Check for any modification in the spotify playlist with snapshot_id\\n### If you want to change the checking interval, make sure to change the trigger AND the wait node\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe2aaa9f-e4de-4000-b535-3e351a643d01\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1360,\n        1120\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 960,\n        \"height\": 1340,\n        \"content\": \"# Spotify to YouTube Playlist Synchronization\\n## A workflow that maintains a YouTube playlist in sync with a Spotify playlist, featuring smart video matching and persistent synchronization.\\n\\n## Key Features\\n- **One-way Sync**: Spotify playlist → YouTube playlist (additions and deletions\\n- **Continuous Monitoring**: Automatic synchronization (every hour by default, but you can put any time you want)\\n- **Smart Video Matching**: Considers video length and content relevance\\n- **Auto-Recovery**: Automatically handles deleted YouTube videos\\n- **Database Backup**: Persistent storage using Supabase\\n\\n## Prerequisites\\n\\n1. Supabase project with the following table structure:\\n```sql\\nCREATE TABLE IF NOT EXISTS musics (\\n    id TEXT PRIMARY KEY,\\n    title TEXT NOT NULL,\\n    artist TEXT NOT NULL,\\n    duration INT8 NOT NULL,\\n    youtube_video_id TEXT,\\n    to_delete BOOLEAN DEFAULT FALSE\\n);\\n```\\n2. Empty YouTube playlist (recommended as duplicates are not handled)\\n3. Configured credentials for YouTube, Spotify, and Supabase APIs\\n4. Properly set variables in all \\\"variables\\\" nodes (variables, variables1, variables2, variables3, variables4 (all the same))\\n5. Activate the workflow !\\n\\n## Workflow Components\\n\\n### Workflow 1: Main Sync Process\\n1. **Change Detection**\\n   - Monitors Spotify playlist for changes\\n   - Compares database state with current playlist\\n\\n2. **Video Matching**\\n   - Searches YouTube based on title, artist, and duration\\n   - Evaluates top 5 results for best match\\n   - Marks unmatched tracks with \\\"NOTFOUND\\\"\\n   - Notifies user of successful matches and failures\\n\\n### Workflow 2: YouTube Maintenance\\n- Monitors YouTube playlist for removed videos\\n- Flags removed videos for re-search\\n- Handles deletion of marked videos\\n\\n### Workflow 3: Recovery Process\\n- Clears \\\"NOTFOUND\\\" flags periodically to re-search previously unmatched tracks\\n\\n## Implementation Notes\\n- Workflows can be separated into different files for better monitoring\\n- Recovery process ensures long-term playlist maintenance\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a86748bf-e52a-4d14-b940-d66a62de802e\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        700\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 920,\n        \"height\": 1260,\n        \"content\": \"# Spotify-Database Synchronization\\n\\n## Operation:\\n- ## Compares Spotify playlist tracks against database entries\\n- ## Adds missing tracks to database\\n- ## Marks database entries for deletion when removed from Spotify playlist\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c58d3233-7059-4095-bae7-c0b451748c2f\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -20,\n        620\n      ],\n      \"parameters\": {\n        \"width\": 800,\n        \"height\": 800,\n        \"content\": \"# Daily Force Check\\n\\n## Forces daily comparison between Spotify playlist and database state, bypassing playlist modification checks. Essential for:\\n- ## Initial setup of large playlists (manages YouTube API limits)\\n- ## Processing pending tracks when playlist hasn't changed\\n- ## Continuing sync attempts for unmatched tracks\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cfea38bb-d8b2-48aa-9718-e5d2d36f52c7\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3840,\n        780\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 460,\n        \"height\": 980,\n        \"content\": \"## Optional notifications (you can use the chat of your choice)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fb6fa7af-a434-463a-a2d7-e78d0328033c\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        120\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 4400,\n        \"height\": 1880,\n        \"content\": \"# Workflow 1: Main Sync Process\\n# 1. **Change Detection**\\n   - ## Monitors Spotify playlist for changes\\n   - ## Compares database state with current playlist\\n\\n# 2. **Video Matching**\\n   - ## Searches YouTube based on title, artist, and duration\\n   - ## Evaluates top 5 results for best match\\n   - ## Marks unmatched tracks with \\\"NOTFOUND\\\"\\n   - ## Notifies user of successful matches and failures\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"03e20125-37c8-4e40-98fd-9b4617eaab70\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        2200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1740,\n        \"height\": 800,\n        \"content\": \"# Workflow 2: YouTube Maintenance\\n- ## Monitors YouTube playlist for removed videos\\n- ## Flags removed videos for re-search\\n- ## Handles deletion of marked videos\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"031c2984-96b1-4c60-9e24-a125619b204a\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        3080\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 760,\n        \"height\": 360,\n        \"content\": \"# Workflow 3: Recovery Process\\n- ## Clears \\\"NOTFOUND\\\" flags periodically to re-search previously unmatched tracks\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Spotify\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Compare Datasets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add music\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set youtube id to NOTFOUND if no matching\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get playlist snapshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every hour\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"variables1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get all musics not in youtube playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"variables2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Spotify\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get all musics\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"variables3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get all musics that should be in playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get playlist items\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get all musics to be deleted\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"variables4\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reset NOTFOUND id to NULL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every month\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"variables4\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait 1 hour\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get playlist snapshot1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If no result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search video\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If no result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all musics\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Compare Datasets\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get video duration\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Compare Datasets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add music\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [],\n        [],\n        [\n          {\n            \"node\": \"Update to_delete to true\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items1\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every day at noon\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"variables2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Duplicates\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove video from playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get playlist items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Playlist items to be deleted\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Check for deleted videos\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get video duration\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If video duration ~= music duration\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add music to playlist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add youtube id to row\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add youtube id to row\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Discord\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every day at midnight\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"variables3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get playlist snapshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait 1 hour\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If different snapshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Spotify\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get all musics\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"No Operation, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get playlist snapshot1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If different snapshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every day at noon + 1mn\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"variables1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for deleted videos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set youtube_video_id to null\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove video from playlist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Delete music\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all musics to be deleted\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Playlist items to be deleted\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Playlist items to be deleted\": {\n      \"main\": [\n        [],\n        [],\n        [\n          {\n            \"node\": \"Remove Duplicates\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If video duration ~= music duration\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add music to playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all musics not in youtube playlist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all musics that should be in playlist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check for deleted videos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set youtube id to NOTFOUND if no matching\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Discord1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.if",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.compareDatasets",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.set",
      "n8n-nodes-base.youTube",
      "n8n-nodes-base.youTube",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.if",
      "n8n-nodes-base.youTube",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.discord",
      "n8n-nodes-base.discord",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.set",
      "n8n-nodes-base.youTube",
      "n8n-nodes-base.compareDatasets",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.removeDuplicates",
      "n8n-nodes-base.youTube",
      "n8n-nodes-base.compareDatasets",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.set",
      "n8n-nodes-base.supabase",
      "n8n-nodes-base.set",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}