{
  "source": "1169_Splitout_Code_Import_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"87FUCRVFV07sNlbM\",\n  \"meta\": {\n    \"instanceId\": \"505c2bdb4483cbbca32871c0acd4b60c83809f177e47e2864f71c1c1760a9b2a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Workflow Importer\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"eb3d4912-09c3-4c17-8e2b-94dd15e145f4\",\n      \"name\": \"Extract from File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        2960,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"fromJson\",\n        \"destinationKey\": \"workflowData\",\n        \"binaryPropertyName\": \"Workflow_File\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"56b7a01f-47a0-4884-9200-5f5f695ab355\",\n      \"name\": \"Export Credentials\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        3180,\n        620\n      ],\n      \"parameters\": {\n        \"command\": \"n8n export:credentials --all --pretty --decrypted --output=/tmp/cred\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85de1146-4d61-45bf-b225-956d3d16e84b\",\n      \"name\": \"Get Credentials Data\",\n      \"type\": \"n8n-nodes-base.readWriteFile\",\n      \"position\": [\n        3400,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fileSelector\": \"/tmp/cred\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"187f1f50-472f-41ac-96e8-9c2f17fa3c00\",\n      \"name\": \"Binary to JSON\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        3620,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"fromJson\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85d79317-786a-49eb-ade4-f9d0949c5bf4\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        4060,\n        500\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"includeUnpaired\": true\n        },\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"6976901c-a052-47fa-a754-217fd5d0f58e\",\n      \"name\": \"Collect Credentials to Replace\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3040,\n        1120\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"c5b7ab56-c833-4405-913a-1a484094a6ff\",\n      \"name\": \"Settings\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        980,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8a5d50fc-95dc-40b3-a3f2-293521bab29a\",\n              \"name\": \"remoteInstances\",\n              \"type\": \"array\",\n              \"value\": \"=\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a9287c9a-ddf4-4023-b997-bb7b12e2d0ee\",\n      \"name\": \"Prepare Request Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1640,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"output = {};\\n\\nfor (const instance of $('Settings').first().json.remoteInstances) {\\n  if (instance.name == $('Choose Instance').first().json.Source) {\\n    output.instance = instance;\\n  }\\n}\\n\\nreturn output;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"85ccc4bf-a465-49bf-ac17-9933f1b9d46d\",\n      \"name\": \"Get Workflows\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1860,\n        620\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.instance.baseUrl }}/workflows\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"value\": \"250\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-N8N-API-KEY\",\n              \"value\": \"={{ $json.instance.apiKey }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"2d86c12d-f308-4cdc-96a4-ab4cbecd39ad\",\n      \"name\": \"No Operation\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        3180,\n        440\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8ef0f34d-2468-450e-8a3c-e3d9ad9e371b\",\n      \"name\": \"Determine Workflow Source\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        760,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"f1d93a30-01c9-4141-85b2-8ceb762b9e86\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.Source }}\",\n              \"rightValue\": \"File Upload\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"3ff270a7-5837-40b5-85b4-da3b28ae6147\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        920,\n        520\n      ],\n      \"parameters\": {\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"## Setup instances\\nEach instnce requires a name, apiKey and baseURL\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4d0d4684-5ffc-4e12-8d05-55245339fd96\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        680\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 535.6419634856759,\n        \"height\": 223.19907940161124,\n        \"content\": \"## Instances config example\\n```\\n[\\n  {\\n    \\\"name\\\": \\\"n8n-test\\\",\\n    \\\"apiKey\\\": \\\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\\",\\n    \\\"baseUrl\\\": \\\"https://n8n-test.example.com/api/v1\\\"\\n  },\\n  {\\n    ...\\n  }\\n]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e76e291e-511b-4612-836f-ae6f7af1d3de\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"A form which collects the source option.\\n*Consider securing the form using Basic Auth.*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"38ecbde8-9081-4509-9fa3-c5b2d568ebad\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        700,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Switch between the available options\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"efa893aa-fce5-45ff-a234-6e73235a33ea\",\n      \"name\": \"Error1\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        3700,\n        1220\n      ],\n      \"webhookId\": \"5c7933f0-f09a-4bc6-9e68-cf73e8fb5813\",\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"completion\",\n        \"completionTitle\": \"⚠️ Import failed\",\n        \"completionMessage\": \"=Please check the workflow settings\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e5edd30e-6396-407a-bd3b-a5e0f66c7e3a\",\n      \"name\": \"Error\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        2080,\n        700\n      ],\n      \"webhookId\": \"5c7933f0-f09a-4bc6-9e68-cf73e8fb5813\",\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"completion\",\n        \"completionTitle\": \"⚠️ Failed retrieving workflows\",\n        \"completionMessage\": \"=Please check the workflow settings\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c410045e-4adf-4304-910a-7cd5868892d3\",\n      \"name\": \"Split Out Workflows\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        2080,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5fafa399-0c6b-4db0-9b01-319a02368eee\",\n      \"name\": \"Get Workflow Names\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2520,\n        540\n      ],\n      \"parameters\": {\n        \"jsCode\": \"dropDownValues = [];\\n\\nfor (const workflow of $input.all()) {\\n  dropDownValues.push({\\\"option\\\": workflow.json.name});\\n}\\n\\nreturn { \\\"options\\\": JSON.stringify(dropDownValues) };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b7408a47-97ff-45da-b8e7-bb2380f61155\",\n      \"name\": \"Sort by updatedAt DESC\",\n      \"type\": \"n8n-nodes-base.sort\",\n      \"position\": [\n        2300,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sortFieldsUi\": {\n          \"sortField\": [\n            {\n              \"order\": \"descending\",\n              \"fieldName\": \"updatedAt\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"74741a71-79b8-4479-9dac-826db7984620\",\n      \"name\": \"No Operation1\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        4280,\n        680\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"89657c6f-a703-4145-b690-7234583bbe7a\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1500,\n        1240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 294.9905826938254,\n        \"content\": \"## Map Credentials\\nBeing mapped by name since one workflow can have multiple credentials of the same type.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a2d21bb5-5118-4ea2-920b-1c05570da610\",\n      \"name\": \"Rename Keys\",\n      \"type\": \"n8n-nodes-base.renameKeys\",\n      \"position\": [\n        3840,\n        620\n      ],\n      \"parameters\": {\n        \"keys\": {\n          \"key\": [\n            {\n              \"newKey\": \"allCredentials\",\n              \"currentKey\": \"data\"\n            }\n          ]\n        },\n        \"additionalOptions\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d756edc6-cf0d-4a35-b29c-99e5ec41c4db\",\n      \"name\": \"Create Workflow\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3480,\n        1120\n      ],\n      \"parameters\": {\n        \"operation\": \"create\",\n        \"requestOptions\": {},\n        \"workflowObject\": \"={{ $json.toJsonString() }}\"\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"taiQiy4KxXUI20Af\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4d75a5b1-5227-41a4-87cc-67a5a8074f37\",\n      \"name\": \"Upload File\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        1420,\n        440\n      ],\n      \"webhookId\": \"b9850dfc-ecf9-45c8-ae68-39327c6a0143\",\n      \"parameters\": {\n        \"options\": {\n          \"formTitle\": \"Upload File\",\n          \"formDescription\": \"Choose an n8n workflow file\"\n        },\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldType\": \"file\",\n              \"fieldLabel\": \"Workflow File\",\n              \"requiredField\": true,\n              \"acceptFileTypes\": \".json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5e5e3ece-00b3-4790-89e0-35d3c8d03b7d\",\n      \"name\": \"Choose Workflow\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        2740,\n        540\n      ],\n      \"webhookId\": \"100af69b-5203-48d3-8e90-1e846d0752d4\",\n      \"parameters\": {\n        \"options\": {\n          \"formTitle\": \"Choose Workflow\",\n          \"formDescription\": \"Choose the remote workflow which should be imported\"\n        },\n        \"defineForm\": \"json\",\n        \"jsonOutput\": \"=[\\n   {\\n      \\\"fieldLabel\\\": \\\"Workflow\\\",\\n      \\\"fieldType\\\": \\\"dropdown\\\",\\n      \\\"requiredField\\\": true,\\n      \\\"fieldOptions\\\": {\\n        \\\"values\\\": {{ $json.options }}\\n      }\\n   }\\n]\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7fcc236c-dd97-4a1e-bf3d-d85aba520938\",\n      \"name\": \"Success\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        3700,\n        1020\n      ],\n      \"webhookId\": \"5c7933f0-f09a-4bc6-9e68-cf73e8fb5813\",\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"completion\",\n        \"completionTitle\": \"✅ Import completed\",\n        \"completionMessage\": \"=The workflow has been created successfully. {{ $if($('Get Missing Credentials').all().length > 0, \\\"Please head over to your credentials and update all new entries with a trailing ⚠️ symbol.\\\", \\\"\\\") }} \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"27736a52-af15-47f8-8186-d486b2968256\",\n      \"name\": \"Choose Instance\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        1420,\n        620\n      ],\n      \"webhookId\": \"2a40fe8d-7b6b-4695-845c-2d278f5bf93e\",\n      \"parameters\": {\n        \"options\": {\n          \"formTitle\": \"Select Source Instance\",\n          \"formDescription\": \"Choose the n8n instance where to retrieve workflows from\"\n        },\n        \"defineForm\": \"json\",\n        \"jsonOutput\": \"=[\\n   {\\n      \\\"fieldLabel\\\": \\\"Source\\\",\\n      \\\"fieldType\\\": \\\"dropdown\\\",\\n      \\\"requiredField\\\": true,\\n      \\\"fieldOptions\\\": {\\n        \\\"values\\\": {{ $json.options }}\\n      }\\n   }\\n]\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9b83c34d-0b0b-47bc-b4a7-27eed0e796fb\",\n      \"name\": \"On form submission\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        540,\n        500\n      ],\n      \"webhookId\": \"2c9b2fa1-3235-4b73-a6e0-73392dcb9ed0\",\n      \"parameters\": {\n        \"options\": {\n          \"buttonLabel\": \"Continue\",\n          \"appendAttribution\": false\n        },\n        \"formTitle\": \"Workflow Import\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldType\": \"dropdown\",\n              \"fieldLabel\": \"Source\",\n              \"fieldOptions\": {\n                \"values\": [\n                  {\n                    \"option\": \"File Upload\"\n                  },\n                  {\n                    \"option\": \"Remote Instance\"\n                  }\n                ]\n              },\n              \"requiredField\": true\n            }\n          ]\n        },\n        \"formDescription\": \"This tool allows importing an n8n workflow from a file or another n8n instance\\n\\nKeep in mind that your destination n8n instance (this environment) should always run on an equal or newer version then compared to the source.\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"f6d45cd9-a091-4c8b-8ef0-6815a1adb0f1\",\n      \"name\": \"Generate Instance Options\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1200,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"dropDownValues = [];\\n\\nfor (const instance of $input.first().json.remoteInstances) {\\n  dropDownValues.push({\\\"option\\\": instance.name});\\n}\\n\\nreturn { \\\"options\\\": JSON.stringify(dropDownValues) };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"73717c97-4579-4e49-ac33-4aada3bcaf55\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1140,\n        520\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Prepare a list of options for the next form\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0537d195-3885-4903-8a41-56915f7b64de\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1360,\n        360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 416.4415465717213,\n        \"content\": \"Request more input from the user\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"43ee5820-e236-49f9-b89b-e4c5d4dd4188\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1580,\n        520\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 435.59135570107514,\n        \"height\": 255.86856541619233,\n        \"content\": \"Map Settings to selected instance and retrieve all workflows from it\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"53a42c23-af05-4e21-a936-14d2419b4530\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2020,\n        440\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 656.1389569291234,\n        \"height\": 255.86856541619233,\n        \"content\": \"Prepare a list of options for the next form\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd103846-04a6-4fb0-aba4-6230a85a7555\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2680,\n        440\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Let the user choose a workflow from a list\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e58bdf1e-fcda-4b68-9798-24de0c7c6bd9\",\n      \"name\": \"Sticky Note14\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3120,\n        560\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 875.9451799951569,\n        \"height\": 216.1478580797073,\n        \"content\": \"Retrieve all credentials from this instance and convert the data to the final JSON format\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"08855416-ca33-4344-b96b-4564d9841dfd\",\n      \"name\": \"Get Selected Workflow\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2960,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"for (const workflow of $('Get Workflows').first().json.data) {\\n  if (workflow.name == $input.first().json.Workflow) {\\n    \\n    return { \\\"workflowData\\\": workflow };\\n  }\\n}\\n\\nreturn false;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9a09a6b5-2b8d-461e-b63f-91100c3e7974\",\n      \"name\": \"Sticky Note15\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2900,\n        360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 416.4415465717213,\n        \"content\": \"Convert the retrieved workflow into the final JSON format\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"269c32c3-224b-42df-bd27-7718374cb343\",\n      \"name\": \"Sticky Note16\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4000,\n        420\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Combine the workflow and credential data to one item\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c9bbc713-3ac7-42d7-85c3-0c8aa22201d4\",\n      \"name\": \"Split Out Nodes\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1060,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"workflowData.nodes\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4c37af5-64de-4d40-9ff1-3a622ea40b86\",\n      \"name\": \"Filter Out Nodes Having Credentials\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1280,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"b14ec02c-c52c-4907-8f55-ebb168a8b10e\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.credentials }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"bdb20dfd-1b47-4b50-a938-19f7790d180b\",\n      \"name\": \"Extract Credentials\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1500,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b37508a3-188e-4e6e-b251-b6a34ac193be\",\n              \"name\": \"type\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.credentials.keys()[0] }}\"\n            },\n            {\n              \"id\": \"fc308784-91ec-4b6b-8bca-2c01472574a7\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.credentials[$json.credentials.keys()[0]].name }}\"\n            },\n            {\n              \"id\": \"a3142dc0-021d-4191-815b-d5cf6d9fe6a8\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.credentials[$json.credentials.keys()[0]].id }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"554e0ee3-e722-4dcf-b82b-ea1ea59a037e\",\n      \"name\": \"Remove Duplicate Credentials by Name\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"position\": [\n        1720,\n        1020\n      ],\n      \"parameters\": {\n        \"compare\": \"selectedFields\",\n        \"options\": {},\n        \"fieldsToCompare\": \"name\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0da2c486-ea7a-465b-b3cd-88e09e63c06b\",\n      \"name\": \"Map Credentials\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        2160,\n        1020\n      ],\n      \"webhookId\": \"5aca5fbe-cbff-4824-8586-cd59967dd154\",\n      \"parameters\": {\n        \"options\": {\n          \"formTitle\": \"Map Credentials\",\n          \"buttonLabel\": \"Import Workflow\",\n          \"formDescription\": \"Each option is labeled with the name of the original credential. Select the according credential for each item.\\n\\nYou can also choose to create a new credential. It will then create an empty credential, using the name of the original one, which you can configure afterwards.\"\n        },\n        \"defineForm\": \"json\",\n        \"jsonOutput\": \"={{ $json.options }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8b92114e-6aa6-4404-a7f1-6224a45acdae\",\n      \"name\": \"Get Selected Credentials\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2380,\n        1220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function capitalizeFirstLetter(val) {\\n    return String(val).charAt(0).toUpperCase() + String(val).slice(1);\\n}\\n\\nlet missingCredentials = [];\\nfor (const credential of $('Remove Duplicate Credentials by Name').all()) {\\n  let type = credential.json.type;\\n  let oldName = credential.json.name;\\n  let name = $('Map Credentials').first().json[credential.json.name];\\n  if (name != \\\"[create new]\\\") {\\n    for (const credentialData of $('Merge').first().json.allCredentials) {\\n      if (credentialData.name == name) {\\n        id = credentialData.id;\\n        continue;\\n      }\\n    }\\n    missingCredentials.push({\\n      \\\"oldName\\\": oldName,\\n      \\\"name\\\": name,\\n      \\\"type\\\": type,\\n      \\\"id\\\": id\\n    });\\n  }\\n}\\n\\nreturn missingCredentials;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bafcb91c-f441-40de-a1fd-7435206d991e\",\n      \"name\": \"Add Old Names\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2820,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"19847be5-420a-4dd7-8a45-fed1a1cbc0b8\",\n              \"name\": \"oldName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.name.replace(\\\" ⚠️\\\", \\\"\\\") }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"8da7f198-5e85-4d88-907e-1e35a55bdb96\",\n      \"name\": \"Replace Credentials in Workflow\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3260,\n        1120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nlet workflowData = $('Merge').first().json.workflowData;\\nfor (const credential of $input.all()) {  \\n  for (const nodes of workflowData.nodes) {\\n    if (nodes.credentials \\n        && nodes.credentials[credential.json.type] !== undefined \\n        && nodes.credentials[credential.json.type].name == credential.json.oldName) {\\n      nodes.credentials[credential.json.type].id = credential.json.id;\\n      nodes.credentials[credential.json.type].name = credential.json.name;\\n    }\\n  }\\n}\\n\\nreturn workflowData;\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f370d4fb-229e-4604-a1b1-c7c0cab8a32d\",\n      \"name\": \"Sticky Note17\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1000,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 875.6296366281999,\n        \"height\": 257.0479807900252,\n        \"content\": \"Extract a list of all credentials from the workflow. The reference will be the old/existing name of the credential, since one workflow can contain multiple credentials of the same type.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"31c0d4b7-4682-4db1-a453-0f1d69c58665\",\n      \"name\": \"Sticky Note18\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2100,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Let the user map every credential or create new ones\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d3c5edb1-74dc-4168-a987-84cdd54714cd\",\n      \"name\": \"Generate Credential Options\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1940,\n        1020\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function capitalizeFirstLetter(val) {\\n    return String(val).charAt(0).toUpperCase() + String(val).slice(1);\\n}\\n\\nformOptions = [];\\nfor (const item of $input.all()) {\\n  dropDownValues = [];\\n  for (const credential of $('Merge').first().json.allCredentials) {\\n    if (credential.type == item.json.type) {\\n      dropDownValues.push({\\\"option\\\": credential.name});\\n    }\\n  }\\n  dropDownValues.push({\\\"option\\\": \\\"[create new]\\\"});\\n  formOptions.push({\\n      \\\"fieldLabel\\\": item.json.name,\\n      \\\"fieldType\\\": \\\"dropdown\\\",\\n      \\\"requiredField\\\": true,\\n      \\\"fieldOptions\\\": {\\n        \\\"values\\\": dropDownValues\\n      }\\n  });\\n}\\n\\nreturn { \\\"options\\\": JSON.stringify(formOptions) };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"255ff6ab-d360-49dd-b63f-9f0d99278ae4\",\n      \"name\": \"Sticky Note19\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1880,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 255.86856541619233,\n        \"content\": \"Prepare a list of options for the next form\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ae074b5a-d76a-4529-ba59-0d201dbd4e9e\",\n      \"name\": \"Sticky Note20\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2320,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 456.12289999575364,\n        \"content\": \"Split mapped credentials into two streams, depending on wether they exist or not\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1b6d26af-9d6b-4865-bd81-8a5de49bc741\",\n      \"name\": \"Sticky Note21\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2540,\n        919.7999999999997\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 435.95830414662703,\n        \"height\": 276.068565416192,\n        \"content\": \"Create empty credentials if the option \\\"[create credential]\\\" was selected. and add the name of the originally assigned credential for future reference\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5ba8987a-7558-4fb8-94ef-ac2b81df5536\",\n      \"name\": \"Create Empty Credentials\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        2600,\n        1020\n      ],\n      \"parameters\": {\n        \"data\": \"={{ $json.data.toJsonString() }}\",\n        \"name\": \"={{ $json.name }}\",\n        \"resource\": \"credential\",\n        \"requestOptions\": {},\n        \"credentialTypeName\": \"={{ $json.type }}\"\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"taiQiy4KxXUI20Af\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7efa8f88-f5a0-47c8-8d12-2cb8c9b0e0c7\",\n      \"name\": \"Get Missing Credentials\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2380,\n        1020\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function capitalizeFirstLetter(val) {\\n    return String(val).charAt(0).toUpperCase() + String(val).slice(1);\\n}\\n\\nlet missingCredentials = [];\\nfor (const credential of $('Remove Duplicate Credentials by Name').all()) {\\n  let type = credential.json.type;\\n  let name = $('Map Credentials').first().json[credential.json.name];\\n  if (name == \\\"[create new]\\\") {\\n    data = {};\\n    if (type.includes(\\\"OAuth\\\")) {\\n      data = { \\\"clientId\\\": \\\"\\\", \\\"clientSecret\\\": \\\"\\\" };\\n    }\\n    missingCredentials.push({\\n      \\\"name\\\": credential.json.name + \\\" ⚠️\\\",\\n      \\\"type\\\": type,\\n      \\\"data\\\": data\\n    });\\n  }\\n}\\n\\nreturn missingCredentials;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2394952f-c6db-4c6e-8f62-080c952734c9\",\n      \"name\": \"Sticky Note22\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2980,\n        1020\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 435.95830414662703,\n        \"height\": 276.068565416192,\n        \"content\": \"Gather all new credential data and update the workflow accordingly. The oldName is being used as a reference during the search. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ee2a621-29c9-4d23-b222-0b31ff1cc903\",\n      \"name\": \"Sticky Note23\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3420,\n        1020\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 275.841854198618,\n        \"content\": \"Create the updated workflow on this instance\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e041c560-e847-472e-888e-0b6b3edb8998\",\n      \"name\": \"Sticky Note24\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3640,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 216.47293010628914,\n        \"height\": 456.12289999575364,\n        \"content\": \"Provide feedback to the user wether the process was successful or not\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"5ee2c284-b417-4ab6-b0bf-effa25225dbf\",\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No Operation1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Settings\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Instance Options\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Rename Keys\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Upload File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract from File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"No Operation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Old Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Collect Credentials to Replace\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"No Operation1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Nodes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Binary to JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Rename Keys\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Choose Instance\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare Request Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Choose Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Selected Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Map Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Missing Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get Selected Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Nodes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Out Nodes Having Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Export Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"No Operation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Export Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Credentials Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Workflow Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Choose Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On form submission\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Determine Workflow Source\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Duplicate Credentials by Name\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Sort by updatedAt DESC\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Credentials Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Binary to JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare Request Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Selected Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Export Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"No Operation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Sort by updatedAt DESC\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Workflow Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Missing Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Empty Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Empty Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Old Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Selected Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Collect Credentials to Replace\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Determine Workflow Source\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Settings\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Instance Options\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Choose Instance\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Credential Options\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Map Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Collect Credentials to Replace\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Replace Credentials in Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Replace Credentials in Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Out Nodes Having Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Duplicate Credentials by Name\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Credential Options\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.executeCommand",
      "n8n-nodes-base.readWriteFile",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.form",
      "n8n-nodes-base.form",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.code",
      "n8n-nodes-base.sort",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.renameKeys",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.form",
      "n8n-nodes-base.form",
      "n8n-nodes-base.form",
      "n8n-nodes-base.form",
      "n8n-nodes-base.formTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.set",
      "n8n-nodes-base.removeDuplicates",
      "n8n-nodes-base.form",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}