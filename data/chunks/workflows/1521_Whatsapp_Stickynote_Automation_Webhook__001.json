{
  "source": "1521_Whatsapp_Stickynote_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"J2D0BssoDmn4BC6D\",\n  \"meta\": {\n    \"instanceId\": \"143d2ab55c8bffb06f8b9c7ad30335764fdc48bbbacecbe2218dadb998a32213\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"AI Customer-Support Assistant · WhatsApp Ready · Works for Any Business\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"fe395033-e36e-42d4-a0ce-8362b172be31\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"maxTries\": 5,\n      \"position\": [\n        120,\n        140\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.messages[0].text.body }}\",\n        \"options\": {\n          \"maxIterations\": 10,\n          \"systemMessage\": \"=You are [Company Name]’s real-time website assistant for https://www.your-company-url.com.\\n\\nAVAILABLE TOOLS\\n• list_links(url) → { urls:[ … ] }  — returns up to 100 internal links from that page  \\n• get_page(url)   → { text:\\\"…\\\" }    — returns the visible, tag-free text of the page (JavaScript rendered if needed)\\n\\nSEARCH STRATEGY\\n1. Start with list_links on the root page.  \\n2. Pick ≤ 5 links whose URL or anchor text best match the user’s question (producto, pago, envío, servicio, política, etc.).  \\n3. For each chosen link call get_page once.  \\n4. Read the returned text and look for the answer.  \\n5. If the answer is still unknown, you may repeat steps 1-4 one level deeper.  \\n6. Stop after two list_links rounds **or** eight get_page calls (whichever comes first).\\n\\nANSWER RULES\\n• Reply in clear and friendly toon **as part of [Company Name]** (use “we”, “our”).  \\n• Keep answers concise but complete.  \\n• **No Markdown ni símbolos de formato. Nunca uses \\\\*, **, \\\\_, \\\\~, ni [texto](url).**  \\n  Write urls like: Descriptive Text ␣URL   Ej.: Combos https://…  \\n• Quote the exact wording for facts such as stock status, prices, envíos, métodos de pago, garantías o políticas.  \\n• If the information is not on the site, reply exactly:  \\n  “I can't find that information on our site right now. Do you want me to put you through to a human agent?”  \\n• Stay on-domain; ignore mailto:, tel:, javascript:, or off-site links.\\n• Finally, if any of the tools returns a status code 404, then reply:\\n\\\"Non-subscribed user.\\\"\",\n          \"returnIntermediateSteps\": true\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 1.7,\n      \"alwaysOutputData\": true,\n      \"waitBetweenTries\": null\n    },\n    {\n      \"id\": \"3953a213-6140-4603-a069-93718e4d8982\",\n      \"name\": \"list_links\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\",\n      \"position\": [\n        260,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"https://lemolex.app.n8n.cloud/webhook/list-links\",\n        \"method\": \"POST\",\n        \"sendBody\": true,\n        \"parametersBody\": {\n          \"values\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"https://www.your-company-url.com\",\n              \"valueProvider\": \"fieldValue\"\n            },\n            {\n              \"name\": \"auth-token\",\n              \"value\": \"your-auth-token (read setup guide)\",\n              \"valueProvider\": \"fieldValue\"\n            }\n          ]\n        },\n        \"toolDescription\": \"Returns up to 100 unique, fully-qualified INTERNAL links for a given page.\\n\\nInput  (JSON body the model must supply)\\n  {\\n    \\\"url\\\": \\\"<absolute https://…>\\\"\\n  }\\n\\nBehaviour\\n  • Crawls only the domain of the input URL.\\n  • Converts relative <a href> values to absolute URLs.\\n  • Drops empty roots (\\\"/\\\"), mailto:, tel:, javascript:, and off-site links.\\n  • De-duplicates the list.\\n  • Responds with a JSON object:\\n\\n      {\\n        \\\"urls\\\": [ \\\"<link-1>\\\", \\\"<link-2>\\\", … ]\\n      }\\n\\nUse this tool when you need a navigation map of the current page.\\nPass one of the returned URLs back into other tools (e.g. get_text) to read its content.\\n\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"21ceaf5e-d2d4-47c3-98cb-ee7c0ab0fcab\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        40,\n        340\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"jh4eAOIykIxQWUI9\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"7e0e84c8-ad96-44d1-9de9-c639230418fd\",\n      \"name\": \"WhatsApp Trigger\",\n      \"type\": \"n8n-nodes-base.whatsAppTrigger\",\n      \"position\": [\n        -260,\n        140\n      ],\n      \"webhookId\": \"857366e8-7b6f-45a7-bbd1-f876002620d7\",\n      \"parameters\": {\n        \"updates\": [\n          \"messages\"\n        ]\n      },\n      \"credentials\": {\n        \"whatsAppTriggerApi\": {\n          \"id\": \"EB6eAVg9ZBZGYsyX\",\n          \"name\": \"WhatsApp OAuth account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c2a0ba34-4a23-4918-9be8-7b9d50279cde\",\n      \"name\": \"cleanAnswer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1040,\n        120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// cleanAnswer – run once per item\\nlet txt = $('AI Agent').first().json.output || '';\\n\\n// 1. Remove bold / italic / strike markers\\ntxt = txt.replace(/[*_~]+/g, '');\\n\\n// 2. Convert [Texto](https://url) → Texto https://url\\ntxt = txt.replace(/\\\\[([^\\\\]]+)\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s)]+)\\\\)/g, '$1 $2');\\n\\n// 3. Collapse 3+ blank lines\\ntxt = txt.replace(/\\\\n{3,}/g, '\\\\n\\\\n').trim();\\n\\nreturn [{ json: { answer: txt } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ef403af2-4543-4edb-80ae-afda1e98a2a9\",\n      \"name\": \"get_page\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\",\n      \"position\": [\n        420,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"https://lemolex.app.n8n.cloud/webhook/get_text\",\n        \"method\": \"POST\",\n        \"sendBody\": true,\n        \"parametersBody\": {\n          \"values\": [\n            {\n              \"name\": \"url\"\n            },\n            {\n              \"name\": \"auth-token\",\n              \"value\": \"your-auth-token (read setup guide)\",\n              \"valueProvider\": \"fieldValue\"\n            }\n          ]\n        },\n        \"toolDescription\": \"Fetches the fully-rendered **plain text** of a single web.  \\n• Input  : { \\\"url\\\": \\\"<absolute https://…>\\\" }  \\n• Auth   : token is sent as HTTP basic-auth.  \\n• Query  : url=<encoded url>  \\n• Output : { \\\"text\\\": \\\"<visible text of the body>\\\", \\\"url\\\": \\\"<same url>\\\" }  \\n• The \\\"text\\\" field already has **all HTML tags removed** .  \\n• Use this tool whenever you need the actual words that appear on the page—product details, prices, stock lines, shipping terms, payment options, company policies, etc.  \\n• Do **not** call it on off-site links or mailto:/tel:/javascript: pseudo-links.  \\n\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"46c1fd08-9b61-4ea9-bee3-9ad8b7e7ce4d\",\n      \"name\": \"24-hour window check\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        520,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// within24h?  – run once per item\\n// Meta (WhatsApp) timestamp arrives as seconds since epoch\\nconst lastTs = Number($('WhatsApp Trigger').first().json.messages[0].timestamp) * 1000;   // → ms\\nconst withinWindow = Date.now() - lastTs < 24 * 60 * 60 * 1000;\\n\\nreturn [{ json: { withinWindow, answer: $json.answer, userId: $json.userId } }];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0309e9fb-745e-46cd-a360-a6a4a96ffa36\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        740,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d33e218e-a49a-49ed-9c6b-55b9ea0b0dbb\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.withinWindow }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"e0f6e0b0-d2f8-4be5-85e4-74b351390369\",\n      \"name\": \"Send Pre-approved Template Message to Reopen the Conversation\",\n      \"type\": \"n8n-nodes-base.whatsApp\",\n      \"position\": [\n        1060,\n        360\n      ],\n      \"parameters\": {\n        \"template\": \"hello_world|en_US\",\n        \"phoneNumberId\": \"679436108574898\",\n        \"requestOptions\": {},\n        \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}\"\n      },\n      \"credentials\": {\n        \"whatsAppApi\": {\n          \"id\": \"zNN8ICsFZI5A7frT\",\n          \"name\": \"WhatsApp account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd41fbf2-f471-4529-bb4d-358ace9cf639\",\n      \"name\": \"Send AI Agent's Answer\",\n      \"type\": \"n8n-nodes-base.whatsApp\",\n      \"position\": [\n        1260,\n        120\n      ],\n      \"parameters\": {\n        \"textBody\": \"={{ $json.answer }}\",\n        \"operation\": \"send\",\n        \"phoneNumberId\": \"679436108574898\",\n        \"requestOptions\": {},\n        \"additionalFields\": {},\n        \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}\"\n      },\n      \"credentials\": {\n        \"whatsAppApi\": {\n          \"id\": \"zNN8ICsFZI5A7frT\",\n          \"name\": \"WhatsApp account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"35e6c77f-56c5-4b93-a69a-e048b593cf40\",\n      \"name\": \"Postgres Users Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        120,\n        500\n      ],\n      \"parameters\": {\n        \"tableName\": \"message_history\",\n        \"sessionKey\": \"={{ $json.contacts[0].wa_id }}\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"Bk7n11D1jU5zJ802\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"67c3296e-8915-4857-a294-03c5bc8257c0\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -920,\n        -320\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 1460,\n        \"content\": \"# Step by Step Setup Guide\\n\\n### **The technology that powers this AI Agent—continuously crawling, extracting, and generating answers—incurs real operating costs to stay online.**\\n### **That’s why the workflow requires an active membership, priced at only **\\\\$29 per month**. Comparable AI-support platforms charge **\\\\$150 – \\\\$500 each month**, so with this template you either save a large chunk of that expense for your own business or earn the same amount by reselling the chatbot to clients—while paying just \\\\$29 yourself. *And because the bot pulls fresh information from the site in real time, you never have to “re-train” a model, saving you even more time and money.***\\n\\n **Activate your membership here:** [https://lemolex.gumroad.com/l/ejsnx](https://lemolex.gumroad.com/l/ejsnx)\\n\\n### Let's start setting this up step by step:\\n*Total hands-on time: ≈ 15 minutes*\\n\\n1. Activate the tools with the membership generated key: \\n- Go to the membership link to get your key.\\n- Copy the key (e.g 6F0E4C97-B72A4E69-A11BF6C4-AF123456) and paste it in the body parameters of list_links and get_page (tools):\\n*Name: auth-token*\\n*Value:  6F0E4C97-B72A4E69-A11BF6C4-AF123456* **(example)**\\n\\n2. Customize for Your Company:\\n- Copy the Root URL of your company's website (Home Page).\\n- Open the AI Agent node and inside the `System Message`, change the following values:\\n[Company Name] with your company name (e.g [Company Name] -> Facebook)\\n[https://www.your-company-url.com] with your company Root URL that you copied before.\\nCheck for these 2 values along the entire text.\\n- Go back to the tools list_links and get_page and paste the Root URL inside the body parameters, specifically:\\n*Name: url*\\n*Value: https://www.your-company-url.com **(e.g https://www.facebook.com)**\\n\\n3. Connect your credentials:\\n- Go to the OpenAI Chat Model node and connect your OpenAI credentials.\\n- Go to the Postgres Users Memory node and connect your Supabase credentials. A tutorial for this: https://youtu.be/6w5f_jsPYSQ?si=MPdXYUjxv3fghQPj&t=105 (Minute 1:45 to 5:00)\\n- Go to the WhatsApp nodes \\\"WhatsApp Trigger\\\", \\\"Send Pre-approved Template Message to Reopen the Conversation\\\" and \\\"Send AI Agent's Answer\\\" to connect your credentials. A tutorial for this: https://youtu.be/ZrhTQle55LQ?si=MO_leooogO9KchCV\\n- Go to the \\\"Send Pre-approved Template Message to Reopen the Conversation\\\" and select the template message under the \\\"Template\\\" parameter.\\n***If you don't want to use this feature (not recommended) delete the nodes \\\"24-hour window check\\\", \\\"If\\\" and \\\"Send Pre-approved Template Message to Reopen the Conversation\\\". Then connect the AI Agent node to the \\\"cleanAnswer\\\" node.***\\n\\n\\n### **You are ready**\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"245c3695-7177-4a1d-a33d-7aedd0eccc44\",\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"cleanAnswer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send Pre-approved Template Message to Reopen the Conversation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"24-hour window check\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_page\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"list_links\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"cleanAnswer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send AI Agent's Answer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"WhatsApp Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"24-hour window check\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Users Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.whatsAppTrigger",
      "n8n-nodes-base.code",
      "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.if",
      "n8n-nodes-base.whatsApp",
      "n8n-nodes-base.whatsApp",
      "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "whatsapp trigger"
  }
}