{
  "source": "0578_Wait_Schedule_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"cb62c9a5-2f43-4328-af94-84c2cb731d9c\",\n      \"name\": \"Base Image\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        260,\n        660\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.base }}\"\n        },\n        \"options\": {\n          \"binaryPropertyName\": \"data_1\"\n        },\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b1c304cc-9949-441a-ac2a-275c8d4c51fc\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1120,\n        900\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-pro-latest\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"dSxo6ns5wn658r8N\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"964d94bf-be2a-424e-ab0e-c1c1fe260ebd\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1320,\n        900\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"type\\\": {\\n    \\t\\t\\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"type of regression. One of text, number, image, color or position.\\\"\\n  \\t\\t},\\n\\t\\t\\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"previous_state\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"current_state\\\": { \\\"type\\\": \\\"string\\\" }\\n\\t}\\n  }\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"67195eb2-1729-42b0-8275-bdd6128b81aa\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2340,\n        20\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 405.95003875719203,\n        \"height\": 180.74812634463558,\n        \"content\": \"### Part A. Generate Base Images\\nBefore we can run our visual regression tests, we must generate a series of base screenshots to compare against. This part of the workflow uses an external website screenshotting service, [Apify.com](https://www.apify.com?fpr=414q6), to achieve this. This part of the workflow should only be run when we want to update our base screenshots.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85f9b371-1710-4c9c-a0ed-210d9c0e5d64\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        162.7495769165307,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 702.1744987652204,\n        \"height\": 548.4621171664835,\n        \"content\": \"## 5. Download Base and Generate new Webpage Screenshot\\n[Learn more about Apify.com](https://www.apify.com?fpr=414q6)\\n\\nLooping for each webpage, we'll do 2 tasks (1) download the base screenshot for the url and (2) and use our [Apify.com](https://www.apify.com?fpr=414q6) webpage screenshot actor again to generate a fresh screenshot.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8bff4efc-d9f9-485c-b51d-a8edc29d1105\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 759.5372282495247,\n        \"height\": 548.702446115556,\n        \"content\": \"## 6. Compare Screenshots using Vision Model\\n[Read more about the basic LLM chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\nTo carry out our visual regression test, we need to send both screenshots simultaneously to our Vision model. This is easily achieved using n8n's built-in basic LLM chain where we can define two user messages of the binary type. For our vision model, we'll use Google's Gemini but any capable vision model will also do the job. A Structured Output Parser is used here to return the AI's response in JSON format, this is for easier formatting purposes which we'll get to in the next step.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a92d11e5-0985-4a8f-bc43-8bc0ca48e744\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        397.518987341772,\n        93.8157360237642\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 885.2402868841493,\n        \"height\": 388.92815062755926,\n        \"content\": \"## 7. Create Report In Linear\\n[Learn more about integrating with Linear.app](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\nFor the final step, we'll generate a simple report which will capture any changes detected in our webpages list. Let's do this by first combining our webpages with their test results and filter out any in the page where no changes were detected. Next, we'll aggregate all changes into the Linear.app node which will be formatted into a markdown snippet and used to create a new issue in Linear. If you don't use Linear, feel free to swap this out for JIRA or even Slack.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3f52c006-6c0a-456d-ab3c-ee5a16726299\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1680,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"478ee25d-3f0f-4f6c-bf34-add1dc14c3cb\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -1240,\n        820\n      ],\n      \"webhookId\": \"f06eab66-30a7-48ad-90ee-cb3394eb2edb\",\n      \"parameters\": {\n        \"amount\": 2\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"64b5f755-a85e-4ae5-ad81-113c1ef9b64c\",\n      \"name\": \"Download Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1260,\n        360\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.screenshotUrl }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8f99ef1f-1cdc-4d80-b858-e9960a805dd4\",\n      \"name\": \"Upload to Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -1080,\n        360\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $('Merge').item.json.url.urlEncode() }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {\n          \"simplifyOutput\": true\n        },\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\n          \"cachedResultName\": \"base_images\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"5e253123-89ba-42d5-b743-60bfd1ebae5b\",\n      \"name\": \"Update Base Image\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -900,\n        360\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"url\": \"={{ $('Merge').item.json.url }}\",\n            \"base\": \"={{ $json.id }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"service\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"service\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"base\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"base\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"url\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"fa7339b7-b7dd-4ecd-8dc2-f42f6549adb6\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        -1440,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"47845df9-a50e-429e-b81e-5eefd996d5c7\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -560,\n        380\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\",\n              \"triggerAtDay\": [\n                1\n              ],\n              \"triggerAtHour\": 6\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"63492aa4-3535-4832-a9d0-0a949e46ec81\",\n      \"name\": \"Get URLs with Missing Base Images\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -1980,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"8907f3b9-0613-4057-8adb-fd5c4e25cf72\",\n      \"name\": \"Run Webpage Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1420,\n        820\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\"\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"cO2w8RDNOZg8DRa8\",\n          \"name\": \"Apify API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3dc45b2d-4c4a-44d5-9b45-3e2144479603\",\n      \"name\": \"Run Webpage Screenshot1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        273,\n        833\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\"\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"cO2w8RDNOZg8DRa8\",\n          \"name\": \"Apify API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"672d64fb-7782-427e-8779-953e51118fbc\",\n      \"name\": \"Has Changes\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        680,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"20b18a7e-bf98-4f39-baa9-4d965097526a\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"lengthGt\",\n                \"rightType\": \"number\"\n              },\n              \"leftValue\": \"={{ $json.output }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"efa168ec-ff05-471b-869f-cee5a222594a\",\n      \"name\": \"Combine Row and Result\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        500,\n        300\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{\\n{\\n  ...$('Get Webpages List').item.json,\\n  output: $json.output\\n}\\n}}\\n\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"1fe901dc-f460-41b8-8042-0fcb0474092f\",\n      \"name\": \"Wait1\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        1580,\n        900\n      ],\n      \"webhookId\": \"6bbf2e65-bed1-4efc-bb31-09d12c644dc5\",\n      \"parameters\": {\n        \"amount\": 1\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"7891f052-4073-4746-a04b-27c7c4fa1e63\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        860,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ef2b2ddb-51f9-4576-bd99-9efa39be5163\",\n      \"name\": \"Create Report\",\n      \"type\": \"n8n-nodes-base.linear\",\n      \"position\": [\n        1040,\n        300\n      ],\n      \"parameters\": {\n        \"title\": \"=Visual Regression Report {{ $now.format('yyyy-MM-dd') }}\",\n        \"teamId\": \"1c721608-321d-4132-ac32-6e92d04bb487\",\n        \"additionalFields\": {\n          \"description\": \"=Visual Regression Workflow picked up the following changes:\\n\\n{{\\n$json.data.map(row =>\\n`### ${row.url}\\n${row.output.map(issue =>\\n`* **${issue.description}** - expected \\\"${issue.previous_state}\\\" but got \\\"${issue.current_state}\\\"`\\n).join('\\\\n')}`\\n).join('\\\\n');\\n}}\"\n        }\n      },\n      \"credentials\": {\n        \"linearApi\": {\n          \"id\": \"Nn0F7T9FtvRUtEbe\",\n          \"name\": \"Linear account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"477b89f7-00ca-4001-a246-0887bcb553eb\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -2180,\n        480\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eb7f6310-5465-4638-b702-5ecbd98a0199\",\n      \"name\": \"Get Webpages List\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -360,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupValue\": \"2\",\n              \"lookupColumn\": \"=row_number\"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"6c0f7341-14c9-48c2-9447-edab0ad18df7\",\n      \"name\": \"For Each Webpage...\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -40,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"62e13166-458d-4c63-8911-740f9ceaeb54\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 561.2038065501644,\n        \"height\": 408.0284015307624,\n        \"content\": \"## 4. Trigger Visual Regression Test Run\\n[Read more about the Schedule Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/)\\n\\nOnce we've generated our base images to compare with in Part A, we can now run our Visual Regression Tests. These tests are intended to check for unexpected changes to a webpage by using some form of image detection. To trigger Part B, we'll start with a schedule trigger and pull a list of webpages to test from Google Sheets.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d958f44-fd2c-49b4-adbd-d8a99b2614c8\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2340,\n        218.0216140230686\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 626.9985071319608,\n        \"height\": 487.40071048786325,\n        \"content\": \"## 1. Get List of Webpages to Generate Base Images\\n[Learn more about using Google Sheets](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/)\\n\\nThis workflow is split into 2 parts: Part A will generate the \\\"base\\\" screenshots to compare new screenshots against. To capture these base screenshots, we'll use Google Sheets to hold our list of webpages and their screenshot references (we'll come on to that later).\\n\\nExample Sheet: https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee776b4d-4532-4c08-ac38-35d40afbd8ad\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1480,\n        580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 653.369086691465,\n        \"height\": 443.1120543367141,\n        \"content\": \"## 2. Generate Webpage Screenshot via Apify\\n[Learn more about Apify.com](https://www.apify.com?fpr=414q6)\\n\\nTo generate a screenshot of the webpage, we'll need a third party service since this functionality is outside the scope of n8n. Feel free to pick whichever internal or external service works for you but I've had great experience using [Apify.com](https://www.apify.com?fpr=414q6) - a popular webscraping SaaS who offer a generous free plan and require very little configuration to get started.\\n\\nThe Apify \\\"actor\\\" (ie. a type of scraper) we'll be using is specifically designed to take webpage screenshots.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d90e103-2829-4075-b3d4-5ba848af4843\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1520,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 808.188722669735,\n        \"height\": 397.73072497123115,\n        \"content\": \"## 3. Upload Screenshot to Google Drive\\n[Read more about using the Google Drive node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/)\\n\\nOnce we have our screenshots, we'll download them from Apify and upload them to our Google Drive for safe keeping. After uploading, we'll capture the new Google Drive IDs for the images into our Google Sheet, this will allow us to reference them again when we perform the visual regression testing.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e47d14ec-ad78-42c8-a294-301dcd581a67\",\n      \"name\": \"Download New Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        453,\n        833\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.screenshotUrl }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\",\n              \"outputPropertyName\": \"data_2\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8ca118bc-3d19-48ac-9d9c-0892993da736\",\n      \"name\": \"Combine Screenshots\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        660,\n        660\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"03359cbb-d7af-4118-a32a-3fe24062dc9f\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        20\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 394.03359370567625,\n        \"height\": 111.52173490405977,\n        \"content\": \"### Part B. Run Visual Regression Test\\nIn this part of the workflow, we'll retrieve our list of webpages to test with our AI vision model. This part can be run as many times as required.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a78c0f92-aa61-483b-95bf-dd60958f182d\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2920,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 553.2963720930223,\n        \"height\": 473.4987906976746,\n        \"content\": \"## Try It Out!\\n\\n### This workflow implements an approach to Visual Regression Testing - a means to test websites for defects - using AI Vision Models.\\n\\nThis workflow uses a Google Sheet to track a list of webpages to test and is split into 2 parts; Part A generates the base screenshots of the list and Part B runs the visual regression testing.\\n\\nThe example spreadsheet can be found here: https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\\n\\n**[Apify.com](https://www.apify.com?fpr=414q6)** is the screenshot generator of choice and a free account with $5 in credit is available via this [link](https://www.apify.com?fpr=414q6).\\n\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a0b257e5-99f8-409a-bc67-2468db377d6c\",\n      \"name\": \"Visual Regression Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1120,\n        740\n      ],\n      \"parameters\": {\n        \"text\": \"Identify changes between the base image and test image.\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You help with visual regression testing for websites. Identify changes to text content, images, colors, position and layouts of the elements in the screenshots. Ignore text styling or casing changes.\\nThe first image will be the base image and the second image will be the test. Note all changes to the test image which differ from the base. If there are no changes, it is okay to return an empty array.\"\n            },\n            {\n              \"type\": \"HumanMessagePromptTemplate\",\n              \"messageType\": \"imageBinary\",\n              \"binaryImageDataKey\": \"data_1\"\n            },\n            {\n              \"type\": \"HumanMessagePromptTemplate\",\n              \"messageType\": \"imageBinary\",\n              \"binaryImageDataKey\": \"data_2\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.4\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"For Each Webpage...\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Report\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Base Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Screenshots\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has Changes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ],\n        [\n          {\n            \"node\": \"Run Webpage Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload to Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Base Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Webpages List\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Webpages List\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"For Each Webpage...\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Screenshots\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload to Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"For Each Webpage...\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Row and Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Base Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Run Webpage Screenshot1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Row and Result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has Changes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run Webpage Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download New Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Screenshots\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Run Webpage Screenshot1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download New Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Visual Regression Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get URLs with Missing Base Images\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get URLs with Missing Base Images\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.googleDrive",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.set",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.linear",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.chainLlm"
    ],
    "trigger": "schedule trigger"
  }
}