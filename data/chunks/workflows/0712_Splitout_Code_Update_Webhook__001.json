{
  "source": "0712_Splitout_Code_Update_Webhook.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"6b1865a7-f150-4d2b-b1f7-37c68b2173d6\",\n      \"name\": \"Fetch Manifest Digest\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        920,\n        -300\n      ],\n      \"parameters\": {\n        \"url\": \"={{\\\"https://<<your-registry-url>>/v2/\\\" + $json.name + \\\"/manifests/\\\" + $json.tag}}\",\n        \"options\": {\n          \"fullResponse\": true\n        },\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/vnd.docker.distribution.manifest.v2+json, application/vnd.oci.image.manifest.v1+json, application/vnd.oci.image.index.v1+json, application/vnd.docker.distribution.manifest.list.v2+json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3c1daca9-3897-4596-b62d-db561f8cb047\",\n      \"name\": \"Remove Old Tags\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        840,\n        -40\n      ],\n      \"parameters\": {\n        \"url\": \"={{\\\"https://<<your-registry-url>>/v2/\\\" + $json.image + \\\"/manifests/\\\" + $json.tag.digest}}\",\n        \"options\": {},\n        \"requestMethod\": \"DELETE\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/vnd.docker.distribution.manifest.v2+json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6974749e-8c85-4334-a7e7-e964f057ed6f\",\n      \"name\": \"Retrieve Image Tags\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        400,\n        -300\n      ],\n      \"parameters\": {\n        \"url\": \"={{\\\"https://<<your-registry-url>>/v2/\\\" + $json[\\\"image\\\"] + \\\"/tags/list\\\"}}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/vnd.docker.distribution.manifest.v2+json, application/vnd.oci.image.manifest.v1+json, application/vnd.oci.image.index.v1+json, application/vnd.docker.distribution.manifest.list.v2+json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"30857c32-508e-4f95-8e26-c9f2fc84e074\",\n      \"name\": \"List Images\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        40,\n        -300\n      ],\n      \"parameters\": {\n        \"url\": \"https://<<your-registry-url>>/v2/_catalog\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c5965a6a-28e6-4217-a846-a849de153430\",\n      \"name\": \"Extract Image Names\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        220,\n        -300\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const images = items[0].json.repositories;\\nreturn images.map(image => ({ json: { image } }));\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b13eb6e5-1a16-4992-b0bd-9b228559fecf\",\n      \"name\": \"Identify Tags to Remove\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        600,\n        -40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const result = [];\\n\\nfor (const item of items) {\\n  const tags = item.json.tags;\\n  if (tags) {\\n    const latestTag = tags.includes('latest') ? 'latest' : null;\\n    const sortedTags = tags.filter(tag => tag !== 'latest')\\n                            .sort((a, b) => new Date(b.created) - new Date(a.created));\\n    const keepTags = sortedTags.slice(0, 10);\\n    if (latestTag) keepTags.push('latest');\\n    const deleteTags = sortedTags.slice(10);\\n    result.push(...deleteTags.map(tag => ({ json: { image: item.json.name, tag } })));\\n  }\\n}\\n\\nreturn result;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"da15ae49-09ee-4658-86a5-9b0a2180c637\",\n      \"name\": \"Scheduled Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -140,\n        -300\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bcc347be-5520-46c0-aac9-0b14ddd8b184\",\n      \"name\": \"Send Notification Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        840,\n        180\n      ],\n      \"webhookId\": \"47f852c3-7136-4e6d-92f6-47322dbba5da\",\n      \"parameters\": {\n        \"text\": \"=Image : {{ $json.image }}\\nTag : {{ $json.tag.tag }}\\n\\nRemoved\",\n        \"options\": {},\n        \"subject\": \"Docker Registry Cleaner Notification\",\n        \"toEmail\": \"to@example.com\",\n        \"fromEmail\": \"from@example.com\",\n        \"emailFormat\": \"text\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"2c3770ef-cb4c-4007-8897-f4eb7ad3b7cf\",\n      \"name\": \"Split Tags\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        580,\n        -300\n      ],\n      \"parameters\": {\n        \"include\": \"selectedOtherFields\",\n        \"options\": {\n          \"destinationFieldName\": \"tag\"\n        },\n        \"fieldToSplitOut\": \"tags\",\n        \"fieldsToInclude\": \"name\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4fffa947-02cf-4608-acab-8284250cf622\",\n      \"name\": \"Filter Valid Tags\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        740,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"bb56b84e-e7cb-4867-93f8-ac40c71bde4f\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.tag }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"acd8e00c-5fa0-4c62-ba96-9e6f456f7703\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"c023ba14-d12d-497c-9b30-97db04a34c1b\",\n      \"name\": \"Fetch Manifest Digest for Blob\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -120,\n        -40\n      ],\n      \"parameters\": {\n        \"url\": \"={{\\\"https://<<your-registry-url>>/v2/\\\" + $('Filter Valid Tags').item.json.name + \\\"/blobs/\\\" + $json.body.config.digest}}\",\n        \"options\": {\n          \"fullResponse\": false\n        },\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/vnd.docker.distribution.manifest.v2+json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f054b91e-abd4-4854-9bfa-e4a2b70f7e2c\",\n      \"name\": \"Update Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        60,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c970bdb8-ddbf-486b-a716-c66274a248a7\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Filter Valid Tags').item.json.name }}\"\n            },\n            {\n              \"id\": \"7ce79761-6557-413c-a9a6-5d1ca564a3df\",\n              \"name\": \"tag\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Filter Valid Tags').item.json.tag }}\"\n            },\n            {\n              \"id\": \"45948a25-d35c-4e3f-9556-3d52a1a89f80\",\n              \"name\": \"created\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.created }}\"\n            },\n            {\n              \"id\": \"c73a14ad-91f6-477f-b4c3-037db319b9ee\",\n              \"name\": \"digest\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Fetch Manifest Digest').item.json.headers['docker-content-digest'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"54405505-8445-491a-8f5d-232da8c842d2\",\n      \"name\": \"Group Tags by Image\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        420,\n        -40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const groupedData = items.reduce((acc, item) => {\\n  const name = item.json.name;\\n  if (!acc[name]) {\\n    acc[name] = [];\\n  }\\n  acc[name].push({\\n    tag: item.json.tag,\\n    created: item.json.created,\\n    digest: item.json.digest\\n  });\\n  return acc;\\n}, {});\\n\\nreturn Object.keys(groupedData).map(name => ({\\n  json: { name, tags: groupedData[name] }\\n}));\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"980aab86-44cd-47d5-b3b7-42cbae26eb09\",\n      \"name\": \"Sort by Creation Date\",\n      \"type\": \"n8n-nodes-base.sort\",\n      \"position\": [\n        240,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sortFieldsUi\": {\n          \"sortField\": [\n            {\n              \"order\": \"descending\",\n              \"fieldName\": \"created\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0561efb9-4903-4bec-bc1a-8131e5f5de67\",\n      \"name\": \"Send Failure Notification Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        1120,\n        80\n      ],\n      \"webhookId\": \"47f852c3-7136-4e6d-92f6-47322dbba5da\",\n      \"parameters\": {\n        \"text\": \"=Image : {{ $json.image }}\\nTag : {{ $json.tag.tag }}\\n\\nFailed\",\n        \"options\": {},\n        \"subject\": \"[FAIL] Docker Registry Cleaner Notification\",\n        \"toEmail\": \"to@example.com\",\n        \"fromEmail\": \"from@example.com\",\n        \"emailFormat\": \"text\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"eaa28914-351c-4934-ba1c-0d39faf67ef3\",\n      \"name\": \"Execute Garbage Collection\",\n      \"type\": \"n8n-nodes-base.ssh\",\n      \"position\": [\n        1120,\n        -100\n      ],\n      \"parameters\": {\n        \"cwd\": \"/opt/services/\",\n        \"command\": \"docker compose exec -it -u root registry bin/registry garbage-collect --delete-untagged /etc/docker/registry/config.yml\",\n        \"authentication\": \"privateKey\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Split Tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Valid Tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List Images\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Image Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Sort by Creation Date\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Old Tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute Garbage Collection\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send Failure Notification Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Valid Tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fetch Manifest Digest\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scheduled Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List Images\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Image Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Retrieve Image Tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Group Tags by Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Identify Tags to Remove\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve Image Tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fetch Manifest Digest\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fetch Manifest Digest for Blob\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Sort by Creation Date\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Group Tags by Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Identify Tags to Remove\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Old Tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Send Notification Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fetch Manifest Digest for Blob\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.emailSend",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.sort",
      "n8n-nodes-base.emailSend",
      "n8n-nodes-base.ssh"
    ],
    "trigger": "scheduled trigger"
  }
}