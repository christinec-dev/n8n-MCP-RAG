{
  "source": "1789_Code_Webhook_Automate_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"[CENSORED]\",\n  \"meta\": {\n    \"instanceId\": \"[CENSORED]\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"(G) LineChatBot + Google Sheets (as a memory)\",\n  \"tags\": [\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Guitar\",\n      \"createdAt\": \"2025-04-18T08:59:48.308Z\",\n      \"updatedAt\": \"2025-04-18T08:59:48.308Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        560,\n        -500\n      ],\n      \"webhookId\": \"[CENSORED]\",\n      \"parameters\": {\n        \"path\": \"guitarpa\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        460,\n        -220\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.Prompt }}\",\n        \"options\": {\n          \"systemMessage\": \"=You are a helpful assistant. Your name is \\\"ลลิตา\\\". You will help me in everything I need. You will answer based on user language. You are an AI Agent operating in the Thailand time zone (Asia/Bangkok, UTC+7). Today is {{ $now }}.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        460,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash-001\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"[CENSORED]\",\n          \"name\": \"Guitar's Gemini ([CENSORED_EMAIL])\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        780,\n        -500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"[CENSORED]\",\n              \"name\": \"body.events[0].message.text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Webhook').item.json.body.events[0].message.text }}\"\n            },\n            {\n              \"id\": \"[CENSORED]\",\n              \"name\": \"body.events[0].replyToken\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Webhook').item.json.body.events[0].replyToken }}\"\n            },\n            {\n              \"id\": \"[CENSORED]\",\n              \"name\": \"body.events[0].source.userId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.events[0].source.userId }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1276,\n        -220\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.line.me/v2/bot/message/reply\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"replyToken\\\": \\\"{{ $('Edit Fields').item.json.body.events[0].replyToken }}\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"text\\\": \\\"{{ $('AI Agent').item.json.output.replaceAll('\\\\t', ' ').replaceAll('\\\\\\\"', '\\\\\\\\\\\\\\\"').replaceAll('\\\\n', '\\\\\\\\n').trim() || 'No response available.' }}\\\"\\n        }\\n    ]\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"Bearer [CENSORED]\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Get History\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1000,\n        -500\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"outputFormatting\": {\n            \"values\": {\n              \"date\": \"FORMATTED_STRING\",\n              \"general\": \"UNFORMATTED_VALUE\"\n            }\n          },\n          \"returnFirstMatch\": true,\n          \"dataLocationOnSheet\": {\n            \"values\": {\n              \"rangeDefinition\": \"detectAutomatically\"\n            }\n          }\n        },\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupValue\": \"={{ $('Webhook').item.json.body.events[0].source.userId }}\",\n              \"lookupColumn\": \"UserID \"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"[CENSORED]\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"[CENSORED]\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"[CENSORED]\",\n          \"name\": \"[Guitar] Google Sheets ([CENSORED_EMAIL])\"\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 4.5,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Prepare Prompt\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1220,\n        -500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"[CENSORED]\",\n              \"name\": \"Prompt\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n  \\\"คุณคือลลิตา แชทบอทภาษาไทยที่สุภาพและเป็นมิตร ตอบตามบริบทของการสนทนา:\\\\n\\\" +\\n\\n  ($('Get History').item.json.History_Archive_1 || \\\"\\\") +\\n  (($('Get History').item.json.History_Archive_1) ? \\\"\\\\n\\\" : \\\"\\\") +\\n\\n  ($('Get History').item.json.History_Archive_2 || \\\"\\\") +\\n  (($('Get History').item.json.History_Archive_2) ? \\\"\\\\n\\\" : \\\"\\\") +\\n\\n  ($('Get History').item.json.History_Archive_3 || \\\"\\\") +\\n  (($('Get History').item.json.History_Archive_3) ? \\\"\\\\n\\\" : \\\"\\\") +\\n\\n  ($('Get History').item.json.History_Archive_4 || \\\"\\\") +\\n  (($('Get History').item.json.History_Archive_4) ? \\\"\\\\n\\\" : \\\"\\\") +\\n\\n  ($('Get History').item.json.History || \\\"\\\") +\\n  (($('Get History').item.json.History) ? \\\"\\\\n\\\" : \\\"\\\") +\\n\\n  \\\"ผู้ใช้: \\\" + $('Edit Fields').item.json.body.events[0].message.text + \\\"\\\\nลลิตา: \\\"\\n}}\\n\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Save History\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1056,\n        -220\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"History\": \"={{ $('Split History').item.json.historyToSave }}\",\n            \"UserID \": \"={{ $('Edit Fields').item.json.body.events[0].source.userId }}\",\n            \"LastUpdated\": \"={{ new Date().toISOString() }}\",\n            \"History_Archive_1\": \"={{ $('Split History').item.json.historyArchive1 }}\",\n            \"History_Archive_2\": \"={{ $('Split History').item.json.historyArchive2 }}\",\n            \"History_Archive_3\": \"={{ $('Split History').item.json.historyArchive3 }}\",\n            \"History_Archive_4\": \"={{ $('Split History').item.json.historyArchive4 }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"UserID \",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"UserID \",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"History\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"History\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"LastUpdated\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"LastUpdated\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"History_Archive_1\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"History_Archive_1\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"History_Archive_2\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"History_Archive_2\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"History_Archive_3\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"History_Archive_3\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"History_Archive_4\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"History_Archive_4\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"row_number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"row_number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"UserID \"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"[CENSORED]\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"[CENSORED]\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"[CENSORED]\",\n          \"name\": \"[Guitar] Google Sheets ([CENSORED_EMAIL])\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        -560\n      ],\n      \"parameters\": {\n        \"content\": \"### Connect to Line Official Account's API\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        740,\n        -560\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Prepare the data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        960,\n        -560\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Retrieve chat history\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1180,\n        -560\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Give our AI previous chat history\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        -280\n      ],\n      \"parameters\": {\n        \"content\": \"Get input with this command.   \\\"{{ $json.Prompt }}\\\"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        -280\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Split history into small chunks (data cleaning)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Split History\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        840,\n        -220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the current history, new message, and response\\nlet history = $('Get History').item.json.History || '';\\nlet message = $('Edit Fields').item.json.body.events[0].message.text;\\nlet response = $json.output;\\nlet newExchange = `ผู้ใช้: ${message}\\\\nลลิตา: ${response}`;\\nlet updatedHistory = history + (history ? '\\\\n' : '') + newExchange;\\n\\n// Threshold: 70% of Google Sheets cell limit (50,000 characters * 0.7 = 35,000)\\nconst threshold = 35000;\\nlet historyToSave = updatedHistory;\\nlet archive1 = $('Get History').item.json.History_Archive_1 || '';\\nlet archive2 = $('Get History').item.json.History_Archive_2 || '';\\nlet archive3 = $('Get History').item.json.History_Archive_3 || '';\\nlet archive4 = $('Get History').item.json.History_Archive_4 || '';\\n\\n// If history exceeds threshold, split it\\nif (updatedHistory.length > threshold) {\\n  // Keep the last 17,500 characters in History (half of threshold for balance)\\n  const keepLength = 17500;\\n  const archiveChunk = updatedHistory.substring(0, updatedHistory.length - keepLength);\\n  historyToSave = updatedHistory.substring(updatedHistory.length - keepLength);\\n\\n  // Distribute to archive cells, ensuring none exceed 35,000 characters\\n  if (archive1.length < threshold) {\\n    archive1 = (archive1 ? archive1 + '\\\\n' : '') + archiveChunk;\\n    if (archive1.length > threshold) {\\n      const excess = archive1.substring(threshold);\\n      archive1 = archive1.substring(0, threshold);\\n      if (archive2.length < threshold) {\\n        archive2 = (archive2 ? archive2 + '\\\\n' : '') + excess;\\n      }\\n    }\\n  }\\n  if (archive2.length < threshold && archive1.length >= threshold) {\\n    archive2 = (archive2 ? archive2 + '\\\\n' : '') + archiveChunk;\\n    if (archive2.length > threshold) {\\n      const excess = archive2.substring(threshold);\\n      archive2 = archive2.substring(0, threshold);\\n      if (archive3.length < threshold) {\\n        archive3 = (archive3 ? archive3 + '\\\\n' : '') + excess;\\n      }\\n    }\\n  }\\n  if (archive3.length < threshold && archive2.length >= threshold) {\\n    archive3 = (archive3 ? archive3 + '\\\\n' : '') + archiveChunk;\\n    if (archive3.length > threshold) {\\n      const excess = archive3.substring(threshold);\\n      archive3 = archive3.substring(0, threshold);\\n      if (archive4.length < threshold) {\\n        archive4 = (archive4 ? archive4 + '\\\\n' : '') + excess;\\n      }\\n    }\\n  }\\n  if (archive4.length < threshold && archive3.length >= threshold) {\\n    archive4 = (archive4 ? archive4 + '\\\\n' : '') + archiveChunk;\\n    if (archive4.length > threshold) {\\n      archive4 = archive4.substring(0, threshold);\\n    }\\n  }\\n}\\n\\n// Return the values to update\\nreturn [\\n  {\\n    json: {\\n      historyToSave: historyToSave,\\n      historyArchive1: archive1,\\n      historyArchive2: archive2,\\n      historyArchive3: archive3,\\n      historyArchive4: archive4,\\n      lastUpdated: new Date().toISOString()\\n    }\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1000,\n        -280\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Save to Google Sheets\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"[CENSORED]\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        -280\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"content\": \"Send it back to Line\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"[CENSORED]\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split History\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get History\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get History\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare Prompt\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save History\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split History\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save History\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare Prompt\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.webhook",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.set",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}