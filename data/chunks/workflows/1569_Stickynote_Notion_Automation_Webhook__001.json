{
  "source": "1569_Stickynote_Notion_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"205b3bc06c96f2dc835b4f00e1cbf9a937a74eeb3b47c99d0c30b0586dbf85aa\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"d1d4291e-fa37-43d0-81e0-f0a594371426\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        680,\n        620\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4o\",\n        \"options\": {\n          \"timeout\": 25000,\n          \"temperature\": 0.7\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"AzPPV759YPBxJj3o\",\n          \"name\": \"Max's DevRel OpenAI account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"68e6805b-9c19-4c9e-a300-8983f2b7c28a\",\n      \"name\": \"Search notion database\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\",\n      \"position\": [\n        980,\n        620\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.notion.com/v1/databases/{{ $json.notionID }}/query\",\n        \"method\": \"POST\",\n        \"jsonBody\": \"{\\n \\\"filter\\\": {\\n \\\"or\\\": [\\n {\\n \\\"property\\\": \\\"question\\\",\\n \\\"rich_text\\\": {\\n \\\"contains\\\": \\\"{keyword}\\\"\\n }\\n },\\n {\\n \\\"property\\\": \\\"tags\\\",\\n \\\"multi_select\\\": {\\n \\\"contains\\\": \\\"{tag}\\\"\\n }\\n }\\n ]\\n },\\n \\\"sorts\\\": [\\n {\\n \\\"property\\\": \\\"updated_at\\\",\\n \\\"direction\\\": \\\"ascending\\\"\\n }\\n ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"=Use this tool to search the \\\"\\\" Notion app database.\\n\\nIt is structured with question and answer format. \\nYou can filter query result by:\\n- By keyword\\n- filter by tag.\\n\\nKeyword and Tag have an OR relationship not AND.\\n\\n\",\n        \"nodeCredentialType\": \"notionApi\",\n        \"placeholderDefinitions\": {\n          \"values\": [\n            {\n              \"name\": \"keyword\",\n              \"description\": \"Searches question of the record. Use one keyword at a time.\"\n            },\n            {\n              \"name\": \"tag\",\n              \"description\": \"=Options: {{ $json.tagsOptions }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"gfNp6Jup8rsmFLRr\",\n          \"name\": \"max-bot\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"c3164d38-a9fb-4ee3-b6bd-fccb4aa5a1a4\",\n      \"name\": \"Get database details\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        420,\n        380\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"resource\": \"database\",\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"7ea9697d-4875-441e-b262-1105337d232e\",\n          \"cachedResultUrl\": \"https://www.notion.so/7ea9697d4875441eb2621105337d232e\",\n          \"cachedResultName\": \"StarLens Company Knowledge Base\"\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"gfNp6Jup8rsmFLRr\",\n          \"name\": \"max-bot\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"98300243-efcc-4427-88da-c1af8a91ddae\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        820,\n        620\n      ],\n      \"parameters\": {\n        \"contextWindowLength\": 4\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a8473f48-1343-4eb2-8e48-ec89377a2a00\",\n      \"name\": \"Search inside database record\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\",\n      \"notes\": \" \",\n      \"position\": [\n        1140,\n        620\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.notion.com/v1/blocks/{page_id}/children\",\n        \"fields\": \"id, type, paragraph.text, heading_1.text, heading_2.text, heading_3.text, bulleted_list_item.text, numbered_list_item.text, to_do.text, children\",\n        \"dataField\": \"results\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"fieldsToInclude\": \"selected\",\n        \"toolDescription\": \"=Use this tool to retrieve Notion page content using the page ID. \\n\\nIt is structured with question and answer format. \\nYou can filter query result by:\\n- By keyword\\n- filter by tag.\\n\\nKeyword and Tag have an OR relationship not AND.\\n\\n\",\n        \"optimizeResponse\": true,\n        \"nodeCredentialType\": \"notionApi\",\n        \"placeholderDefinitions\": {\n          \"values\": [\n            {\n              \"name\": \"page_id\",\n              \"description\": \"Notion page id from 'Search notion database' tool results\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"gfNp6Jup8rsmFLRr\",\n          \"name\": \"max-bot\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"115c328e-84b0-43d2-8df7-8b3f74cbb2fb\",\n      \"name\": \"Format schema\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        620,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a8e58791-ba51-46a2-8645-386dd1a0ff6e\",\n              \"name\": \"sessionId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('When chat message received').item.json.sessionId }}\"\n            },\n            {\n              \"id\": \"434209de-39d5-43d8-a964-0fcb7396306c\",\n              \"name\": \"action\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('When chat message received').item.json.action }}\"\n            },\n            {\n              \"id\": \"cad4c972-51a9-4e16-a627-b00eea77eb30\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('When chat message received').item.json.chatInput }}\"\n            },\n            {\n              \"id\": \"8e88876c-2714-494d-bd5e-5e80c99f83e3\",\n              \"name\": \"notionID\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Get database details').item.json.id }}\"\n            },\n            {\n              \"id\": \"a88a15f6-317c-4d2e-9d64-26f5ccaf7a97\",\n              \"name\": \"databaseName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title[0].text.content }}\"\n            },\n            {\n              \"id\": \"7c3bf758-8ed3-469a-8695-6777f4af4fb9\",\n              \"name\": \"tagsOptions\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.properties.tags.multi_select.options.map(item => item.name).join(',') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3b82f4fe-6c0c-4e6e-a387-27de31fec758\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -340,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 462.3561535890252,\n        \"height\": 95.12709218477178,\n        \"content\": \"## Notion knowledge base assistant [v1]\\nBuilt as part of the [30 Day AI Sprint](https://30dayaisprint.notion.site/) by [@maxtkacz](https://x.com/maxtkacz)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"31debc55-6608-4e64-be18-1bc0fc0fbf16\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -340,\n        1060\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 462.3561535890252,\n        \"height\": 172.4760209818479,\n        \"content\": \"### FAQ\\n- In `Get database details` if you see a `The resource you are requesting could not be found` error, you need to add your connection to the database (in the Notion app).\\n- The `Get database details` pulls most recent `Tags` and informs AI Agent of them. However this step adds ~250-800ms per run. Watch detailed video to see how to remove this step. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9f48e548-f032-477c-960d-9c99d61443df\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        820,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.chatInput }}\",\n        \"options\": {\n          \"systemMessage\": \"=# Role:\\nYou are a helpful agent. Query the \\\"{{ $json.databaseName }}\\\" Notion database to find relevant records or summarize insights based on multiple records.\\n\\n# Behavior:\\n\\nBe clear, very concise, efficient, and accurate in responses. Do not hallucinate.\\nIf the request is ambiguous, ask for clarification. Do not embellish, only use facts from the Notion records. Do not offer general advice.\\n\\n# Error Handling:\\n\\nIf no matching records are found, try alternative search criteria. Example 1: Laptop, then Computer, then Equipment. Example 2: meetings, then meeting.\\nClearly explain any issues with queries (e.g., missing fields or unsupported filters).\\n\\n# Output:\\n\\nReturn concise, user-friendly results or summaries.\\nFor large sets, show top results by default and offer more if needed. Output URLs in markdown format. \\n\\nWhen a record has the answer to user question, always output the URL to that page. Do not output links twice.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"f1274a12-128c-4549-a19b-6bfc3beccd89\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        220,\n        380\n      ],\n      \"webhookId\": \"b76d02c0-b406-4d21-b6bf-8ad2c623def3\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {\n          \"title\": \"Notion Knowledge Base\",\n          \"subtitle\": \"\"\n        },\n        \"initialMessages\": \"=Happy {{ $today.weekdayLong }}!\\nKnowledge source assistant at your service. How can I help you?\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"2e25e4bc-7970-4d00-a757-ba1e418873aa\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -340,\n        360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 463.90418399676537,\n        \"height\": 318.2958135288425,\n        \"content\": \"### Template set up quickstart video \\ud83d\\udc47\\n[![Video Thumbnail](https://uploads.n8n.io/maxt/notion-db-assistant-embedded-thumb.png#full-width)](https://www.youtube.com/watch?v=ynLZwS2Nhnc)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba6fe953-fd5c-497f-ac2a-7afa04b7e6cc\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -340,\n        700\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 461.5634274842711,\n        \"height\": 332.14098134070576,\n        \"content\": \"### Written set up steps\\n1. Add a Notion credential to your n8n workspace (follow [this Notion guide](https://developers.notion.com/docs/create-a-notion-integration))\\n2. [Duplicate Company knowledge base Notion template](https://www.notion.so/templates/knowledge-base-ai-assistant-with-n8n) to your Notion workspace, then make sure to share the new knowledge base with connection you created in Step 1. \\n3. Add Notion cred to `Get database details`:`Credential to connect with` parameter, then to `Search notion database`:`Notion API` parameter (same for `Search inside database record`)\\n4. Add OpenAI credential to `Open AI Chat Model` node (tested and working with Anthropic Claude 3.5 too)\\n5. In `Get database details`, select the db you created from Step 2 in `Database` dropdown.\\n6. Click `Chat` button to test the workflow. Then Activate it and copy the `Chat URL` from `When chat message received`.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Format schema\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get database details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format schema\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search notion database\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get database details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search inside database record\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "n8n-nodes-base.notion",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}