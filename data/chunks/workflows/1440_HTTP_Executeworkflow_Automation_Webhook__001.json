{
  "source": "1440_HTTP_Executeworkflow_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"6a2a7715680b8313f7cb4676321c5baa46680adfb913072f089f2766f42e43bd\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f4b3833b-cf25-4bbc-927c-080586c5713c\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        700,\n        760\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 330.5152611046425,\n        \"height\": 239.5888196628349,\n        \"content\": \"### ... or watch set up video [13 min]\\n[![Youtube Thumbnail](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/Youtube%20AI%20Agent%20Blur.png)](https://youtu.be/6RmLZS8Yl4E)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"64d96c53-b3e2-4aea-9a29-9b9e5c729f4f\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        400,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 636.2128494576581,\n        \"height\": 497.1532689930921,\n        \"content\": \"![5min Logo](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/banner.png)\\n## AI Agent To Chat With Youtube\\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai)**\\n\\nNavigating the content generation and optimization process can be complex, especially without significant audience insight. This workflow automates insights extraction from YouTube videos and comments, empowering users to create more engaging and relevant content effectively.\\n\\nThe workflow integrates various APIs to gather insights from YouTube videos, enabling automated commentary analysis, video transcription, and thumbnail evaluation. The main functionalities include:\\n- Extracting user preferences from comments.\\n- Transcribing video content for enhanced understanding.\\n- Analyzing thumbnails via AI for maximum viewer engagement insights.\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"57d2ede9-1bf9-4449-9dc9-af1ccee763b6\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        400,\n        760\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 280.2462120317618,\n        \"height\": 545.9087885077763,\n        \"content\": \"### Set up steps\\n\\n1. **API Setup**:\\n - Create a [Google Cloud](https://console.cloud.google.com/apis/dashboard) project and enable the YouTube Data API.\\n - Generate an API key for [Apify](https://www.apify.com?fpr=ujogj).\\n - Generate API key for [OpenAI](https://platform.openai.com)\\n - Create all credentials in N8N - OpenAI, Apify, Google Cloud.\\n\\n2. **YouTube Creator and Video Selection**:\\n - Start by defining a request to identify top creators based on their video views.\\n - Capture the YouTube video IDs for further analysis of comments and other video metrics.\\n\\n3. **Comment Analysis**:\\n - Gather comments associated with the selected videos and analyze them for user insights.\\n - Implement pagination to handle the maximum comment retrieval limits in API requests.\\n\\n4. **Video Transcription**:\\n - Request transcriptions for videos of interest, ensuring to manage potential costs associated with longer video processing.\\n - Utilize the insights from transcriptions to formulate content plans.\\n\\n5. **Thumbnail Analysis**:\\n - Evaluate your video thumbnails by submitting the URL through the OpenAI API to gain insights into their effectiveness.\\n\\n6. **Data Management**:\\n - Incorporate a database agent to organize video data and metrics, allowing efficient record management and future content planning.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ca0fd549-88a7-44fd-ab81-7fd5ca140dae\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1540,\n        820\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zJhr5piyEwVnWtaI\",\n          \"name\": \"OpenAi club\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7f2cf209-2e9d-4d6a-bc9e-d1bfd6df7266\",\n      \"name\": \"get_channel_details\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        1900,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"get_channel_details\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"=get_channel_details\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Get channel_id, title and description by handle/username.\\nChannel_id is required to find videos and details about this channel.\\nIf Youtube link to channel provided - parse handle from there or return channel_id. (e.g. https://www.youtube.com/@example_handle - example_handle)\\n\\n\\nExample Input:\\nexample_handle\\n\\nExample Output:\\nid:UCOgz_YflAsYnGbdvzXuKNCA\\ntitle:Daniel Simmons\\ndescription:Digital Diary \\ud83e\\udd0e\\\\n\\\\n\\\\nWeekly videos around fashion...\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"handle\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"Handle/username of channel\\\"\\n }},\\n \\\"required\\\": [\\\"handle\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c02f5c19-6e50-4a06-95b9-eceb3eec1012\",\n      \"name\": \"get_video_description\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2020,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"get_video_description\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"video_details\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Fetch video details - the full description, title, and publish date of a video using its video_id.\\n\\nExample input:\\nvideo_id:dQw4w9WgXcQ\\n\\nExample Output:\\ntitle:Never Gonna Give You Up\\ndescription: \\\"The official video for \\u201cNever Gonna Give You Up\\u201d by Rick Astley.\\nduration:4 min\\nviewCount:154\\nlikeCount:6\\nthumbnails: urls\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"video_id\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The ID of the video to fetch details for\\\"\\n }\\n },\\n \\\"required\\\": [\\\"video_id\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"2d61160b-3a65-4766-ace6-947a7c5de6e5\",\n      \"name\": \"get_list_of_videos\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2140,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"get_list_of_videos\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"videos\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Retrieve a list of videos from a channel using channel_id. Supports sorting by date, relevance, or view count.\\n\\nExample Input:\\nchannel_id\\\": \\\"UCxxxxxxxxxxxxxxxx\\\"\\nnumber_of_videos\\\": 5\\norder: \\\"date\\\"\\npublishedAfter: \\\"timestamp\\\"\\n\\nExample Output:\\nvideo_id:abc123\\ntitle:Latest Video\\nshort cut description:Latest Video\\npublished_at:2023-12-05T10:00:00Z\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"channel_id\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The ID of the channel to fetch videos from\\\"\\n },\\n \\\"number_of_videos\\\": {\\n \\\"type\\\": \\\"integer\\\",\\n \\\"description\\\": \\\"The maximum number of videos to retrieve (max 50)\\\"\\n },\\n \\\"order\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"enum\\\": [\\\"date\\\", \\\"relevance\\\", \\\"viewCount\\\"],\\n \\\"description\\\": \\\"Order in which to fetch videos\\\"\\n },\\n \\\"publishedAfter\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"Timestamp for filtering like 2023-11-03T15:28:05Z.\\\"\\n }\\n },\\n \\\"required\\\": [\\\"channel_id\\\", \\\"number_of_videos\\\", \\\"order\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c5aa2f7c-7748-4f88-abb6-fd274ad1295a\",\n      \"name\": \"get_list_of_comments\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2260,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"get_list_of_comments\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"comments\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Retrieve a list of comments from a video using video_id.\\n\\nInput:\\n \\\"video_id\\\": \\\"dQw4w9WgXcQ\\\"\\n\\nOutput:\\n \\\"author\\\": \\\"John Doe\\\",\\n \\\"comment\\\": \\\"This is an amazing video!\\\",\\n \\\"published_at\\\": \\\"2023-12-04T12:00:00Z\\\"\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"video_id\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The ID of the video to fetch comments from\\\"\\n }\\n },\\n \\\"required\\\": [\\\"video_id\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c68cad77-1d71-45a3-b94b-8f7c701f56fb\",\n      \"name\": \"search\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2380,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"search\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"search\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Search for videos or channels using a query. Supports filtering by type (video or channel) and sorting (date, viewCount, relevance). Use | for OR and - to exclude terms in the query.\\n\\nInput:\\ntype: video or channel\\nquery: search query\\nsorting: date, viewCount, relevance\\npublishedAfter: timestamp\\n\\nOutput:\\n- id, title, short cut description, and published_at.\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"type\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"enum\\\": [\\\"video\\\", \\\"channel\\\"],\\n \\\"description\\\": \\\"Type of results to retrieve: video or channel\\\"\\n },\\n \\\"query\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"Search query. Supports | for OR and - to exclude terms\\\"\\n },\\n \\\"sorting\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"enum\\\": [\\\"date\\\", \\\"viewCount\\\", \\\"relevance\\\"],\\n \\\"description\\\": \\\"Sorting criteria for search results\\\"\\n },\\n \\\"publishedAfter\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"Timestamp for filtering like 2023-11-03T15:28:05Z\\\"\\n }\\n },\\n \\\"required\\\": [\\\"type\\\", \\\"query\\\", \\\"sorting\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c87d5392-8a5c-4999-9e58-89a5e0700c40\",\n      \"name\": \"analyze_thumbnail\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2500,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"analyze_thumbnail\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"analyze_thumbnail\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Analyze a thumbnail image based on a given prompt. The prompt can be customized for specific analysis needs, such as design critique, color scheme evaluation, or content assessment.\\nUse link of maxRes thumbnail. \\n\\nInput:\\n- url: URL of the thumbnail image.\\n- prompt: Customizable instruction for the analysis.\\n\\nOutput:\\n- Results of the analysis based on the given prompt.\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"url\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"URL of the thumbnail image to analyze\\\"\\n },\\n \\\"prompt\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"Customizable instruction to guide the image analysis\\\"\\n }\\n },\\n \\\"required\\\": [\\\"url\\\", \\\"prompt\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1be2fa35-9091-4db8-a8eb-50f822d618d3\",\n      \"name\": \"video_transcription\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2620,\n        820\n      ],\n      \"parameters\": {\n        \"name\": \"video_transcription\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"command\",\n              \"stringValue\": \"video_transcription\"\n            }\n          ]\n        },\n        \"schemaType\": \"manual\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"FgknOUpOBkpY85NX\",\n          \"cachedResultName\": \"Youtube parser - tools\"\n        },\n        \"description\": \"Transcribe a video and retrieve its text transcription. Useful for analyzing video content or repurposing it for other formats.\\n\\nInput:\\n- video_url: URL of the video to transcribe.\\n\\nOutput:\\n- The text transcription of the video.\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"video_url\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"URL of the video to transcribe\\\"\\n }\\n },\\n \\\"required\\\": [\\\"video_url\\\"]\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"fbfcd82f-e247-4a21-be12-339df7afe681\",\n      \"name\": \"Postgres Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        1700,\n        820\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"={{ $('When chat message received').item.json.sessionId }}\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"6a4bbad9-27ab-448b-9222-2c8843fe241a\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1760,\n        560\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('When chat message received').item.json.chatInput }}\",\n        \"agent\": \"openAiFunctionsAgent\",\n        \"options\": {\n          \"systemMessage\": \"You are Youtube assistant. \\nYou need to process user's requests and run relevant tools for that. \\n\\nPlan and execute in right order runs of tools to get data for user's request.\\n\\nIMPORTANT Search query and list of videos for channel tools returns all videos including shorts - use Get Video description tool to identify shorts (less than minute) and filter them out if needed.\\n\\nFeel free to ask questions before do actions - especially if you noticed some inconcistency in user requests that might be error/misspelling. \"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"739cc12a-27d1-48e9-b124-7f83fb372514\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        1460,\n        600\n      ],\n      \"webhookId\": \"6e95bc27-99a6-417c-8bf7-2831d7f7a4be\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"613af9f2-77fa-42c4-86d3-87e20f2c0c89\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1380,\n        500\n      ],\n      \"parameters\": {\n        \"width\": 1430.34590072234,\n        \"height\": 588.1344471094899,\n        \"content\": \"## Scenario 1: AI agent\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"54116346-bc73-4a6a-8bca-f2a6e6699374\",\n      \"name\": \"Get Comments\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        1598\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.googleapis.com/youtube/v3/commentThreads\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"part\",\n              \"value\": \"id,snippet,replies\"\n            },\n            {\n              \"name\": \"videoId\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.video_id }}\"\n            },\n            {\n              \"name\": \"maxResults\",\n              \"value\": \"100\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"1DXeuNaLSixqGPaU\",\n          \"name\": \"Query Auth account Youtube\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"faabf71a-69f2-4113-802e-124a09fa9a0a\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        1444,\n        1598\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4b3ec3aa-7c69-4a72-a989-02f97acdf612\",\n      \"name\": \"Get Channel Details\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        1278\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.googleapis.com/youtube/v3/channels\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"part\",\n              \"value\": \"snippet\"\n            },\n            {\n              \"name\": \"forHandle\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.handle }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"1DXeuNaLSixqGPaU\",\n          \"name\": \"Query Auth account Youtube\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ed8dec73-8c50-4eb9-8efe-68ee72c4d5e6\",\n      \"name\": \"Get Video Description\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        1438\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.googleapis.com/youtube/v3/videos\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"part\",\n              \"value\": \"snippet,contentDetails,statistics\"\n            },\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.video_id }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"1DXeuNaLSixqGPaU\",\n          \"name\": \"Query Auth account Youtube\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c1ff3837-8d7e-49ad-a333-c177833fcd05\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2224,\n        1598\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"469d89ba-23fc-482a-b4ae-ce5d3bc13579\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ JSON.stringify(` Comments: ${$json.items.map(item => { const topLevelComment = `${item.snippet.topLevelComment.snippet.authorDisplayName}: ${item.snippet.topLevelComment.snippet.textOriginal}`; const replies = item.replies?.comments.map(reply => `${reply.snippet.authorDisplayName}: ${reply.snippet.textOriginal}` ).join('\\\\n') || ''; return [topLevelComment, replies].filter(Boolean).join('\\\\n'); }).join('\\\\n\\\\n')} `) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"5f0c44fe-2523-4170-a27d-0ccd1bef24a7\",\n      \"name\": \"Run Query\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        1758\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.googleapis.com/youtube/v3/search\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"part\",\n              \"value\": \"snippet\"\n            },\n            {\n              \"name\": \"q\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.query }}\"\n            },\n            {\n              \"name\": \"order\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.order }}\"\n            },\n            {\n              \"name\": \"type\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.type }}\"\n            },\n            {\n              \"name\": \"maxResults\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.number_of_videos }}\"\n            },\n            {\n              \"name\": \"publishedAfter\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.publishedAfter }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"1DXeuNaLSixqGPaU\",\n          \"name\": \"Query Auth account Youtube\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3e192718-6710-4143-ac6e-15df79ee5363\",\n      \"name\": \"Get Videos by Channel\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        1918\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.googleapis.com/youtube/v3/search\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"part\",\n              \"value\": \"snippet\"\n            },\n            {\n              \"name\": \"channelId\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.channel_id }}\"\n            },\n            {\n              \"name\": \"order\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.order }}\"\n            },\n            {\n              \"name\": \"maxResults\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.number_of_videos }}\"\n            },\n            {\n              \"name\": \"type\",\n              \"value\": \"video\"\n            },\n            {\n              \"name\": \"publishedAfter\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.query.publishedAfter }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"1DXeuNaLSixqGPaU\",\n          \"name\": \"Query Auth account Youtube\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8bcb50a4-0cd1-4311-ac6a-2ee8653cfb71\",\n      \"name\": \"Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2564,\n        1598\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"cfdbe2f5-921e-496d-87bd-9c57fdc22a7a\",\n              \"name\": \"response\",\n              \"type\": \"object\",\n              \"value\": \"={{$json}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"7f5a36d3-6710-4e69-8459-7c8c748ee7d9\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1624,\n        1578\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"get_channel_details\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"get_channel_details\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"video_details\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"26a3ffe8-c8a6-4564-8d18-5494a8059372\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"video_details\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"comments\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"0f51cc26-2e42-42e1-a5c2-cb1d2e384962\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"comments\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"search\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"51031140-5ceb-48aa-9f33-d314131a9653\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"search\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"videos\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"f160bf0a-423f-448d-ab80-50a0b6a177ca\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"videos\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"analyze_thumbnail\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"29542ac4-7b9d-413f-aabb-a1cdabed2fa7\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"analyze_thumbnail\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"video_transcription\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"35fc39b8-6cf1-4ea6-9609-4a195c5526f8\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Execute Workflow Trigger').item.json.command }}\",\n                    \"rightValue\": \"video_transcription\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"df432d53-33bf-4e91-9ead-7f4b36bd788a\",\n      \"name\": \"Get Video Transcription\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2064,\n        2238\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.apify.com/v2/acts/dB9f4B02ocpTICIEY/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"startUrls\\\": [\\n \\\"{{ $('Execute Workflow Trigger').item.json.query.video_url }}\\\"\\n ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\"\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"XDavOaI9qH5Zi3QC\",\n          \"name\": \"Apify\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8079e5c9-4a52-45ce-ac41-7fc707177a5a\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        2064,\n        2078\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('Execute Workflow Trigger').item.json.query.prompt }}\",\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o\",\n          \"cachedResultName\": \"GPT-4O\"\n        },\n        \"options\": {},\n        \"resource\": \"image\",\n        \"imageUrls\": \"={{ $('Execute Workflow Trigger').item.json.query.url }}\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"SphXAX7rlwRLkiox\",\n          \"name\": \"Test club key\"\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"7847e82a-fe82-498c-8c14-4c1c718d632c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1380,\n        1140\n      ],\n      \"parameters\": {\n        \"width\": 1427.3810326521016,\n        \"height\": 1313.2689194736308,\n        \"content\": \"## Scenario 2: Agent tools\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3a0fbbb0-4c0e-41f1-abb3-c87e955ad1b3\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1540,\n        960\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 266.7375650720483,\n        \"height\": 80,\n        \"content\": \"### Replace credentials\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"363eaca0-aaa5-4551-845f-528f19bba57a\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2004,\n        1178\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 266.7375650720483,\n        \"height\": 80,\n        \"content\": \"### Replace credentials in all nodes - Apify, OpenAI, Google\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {\n    \"Execute Workflow Trigger\": [\n      {\n        \"query\": {\n          \"type\": \"video\",\n          \"query\": \"Web scraping data with n8n and Puppeteer\",\n          \"sorting\": \"relevance\"\n        },\n        \"command\": \"search\"\n      }\n    ]\n  },\n  \"connections\": {\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Channel Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Video Description\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Comments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Run Query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Videos by Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Video Transcription\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"search\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run Query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Comments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"analyze_thumbnail\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_list_of_videos\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Channel Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_channel_details\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"video_transcription\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_list_of_comments\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Video Description\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Videos by Channel\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_video_description\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Video Transcription\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "execute workflow trigger"
  }
}