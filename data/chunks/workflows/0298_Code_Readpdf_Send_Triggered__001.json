{
  "source": "0298_Code_Readpdf_Send_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"a2434c94d549548a685cca39cc4614698e94f527bcea84eefa363f1037ae14cd\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"deafa2e8-af41-4f11-92e0-09992f6c6970\",\n      \"name\": \"Read PDF\",\n      \"type\": \"n8n-nodes-base.readPDF\",\n      \"position\": [\n        860,\n        1420\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8e3ddbb1-83a1-4f79-9464-61d5a20f0427\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -760,\n        1300\n      ],\n      \"parameters\": {\n        \"width\": 444.034812880766,\n        \"height\": 599.5274151436035,\n        \"content\": \"## Send specific PDF attachments from Gmail to Google Drive using OpenAI\\n\\n_**DISCLAIMER**: You may have varying success when using this workflow so be prepared to validate the correctness of OpenAI's results._\\n\\nThis workflow reads PDF textual content and sends the text to OpenAI. Attachments of interest will then be uploaded to a specified Google Drive folder. For example, you may wish to send invoices received from an email to an inbox folder in Google Drive for later processing. This workflow has been designed to easily change the search term to match your needs. See the workflow for more details.\\n\\n### How it works\\n1. Triggers off on the `On email received` node.\\n2. Iterates over the attachments in the email.\\n3. Uses the `OpenAI` node to filter out the attachments that do not match the search term set in the `Configure` node. You could match on various PDF files (i.e. invoice, receipt, or contract).\\n4. If the PDF attachment matches the search term, the workflow uses the `Google Drive` node to upload the PDF attachment to a specific Google Drive folder.\\n\\n\\nWorkflow written by [David Sha](https://davidsha.me).\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fb2c3697-a92f-4be1-b9a6-0326f87de70b\",\n      \"name\": \"Configure\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -20,\n        1520\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"maxTokenSize\",\n              \"value\": 4000\n            },\n            {\n              \"name\": \"replyTokenSize\",\n              \"value\": 50\n            }\n          ],\n          \"string\": [\n            {\n              \"name\": \"Match on\",\n              \"value\": \"payslip\"\n            },\n            {\n              \"name\": \"Google Drive folder to upload matched PDFs\",\n              \"value\": \"https://drive.google.com/drive/u/0/folders/1SKdHTnYoBNlnhF_QJ-Zyepy-3-WZkObo\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"792c49f4-06e3-4d77-a31f-1513f70abf32\",\n      \"name\": \"Is PDF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        640,\n        1520\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $binary.data.fileExtension }}\",\n              \"value2\": \"pdf\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82be9111-665d-41c6-8190-2247acdb749b\",\n      \"name\": \"Not a PDF\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        860,\n        1620\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c2ac155f-38ee-46f2-8a24-5614e3c32ff5\",\n      \"name\": \"Is matched\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1720,\n        1480\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json[\\\"text\\\"] }}\",\n              \"value2\": \"true\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4a8f15b8-c153-493d-9a2a-d63d911d642d\",\n      \"name\": \"This is a matched PDF\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1940,\n        1380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"89601591-5c7b-461c-859b-25c7c1f0c2e6\",\n      \"name\": \"This is not a matched PDF\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1940,\n        1580\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ac517c4a-83b8-441f-b14c-c927c18f8012\",\n      \"name\": \"Iterate over email attachments\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        420,\n        1420\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// https://community.n8n.io/t/iterating-over-email-attachments/13588/3\\nlet results = [];\\n\\nfor (const item of $input.all()) {\\n  for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {},\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"79fdf2de-42fe-4ebb-80fb-cc80dcd284f9\",\n      \"name\": \"OpenAI matches PDF textual content\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"position\": [\n        1300,\n        1340\n      ],\n      \"parameters\": {\n        \"prompt\": \"=Does this PDF file look like a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }}? Return \\\"true\\\" if it is a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }} and \\\"false\\\" if not. Only reply with lowercase letters \\\"true\\\" or \\\"false\\\".\\n\\nThis is the PDF filename:\\n```\\n{{ $binary.data.fileName }}\\n```\\n\\nThis is the PDF text content:\\n```\\n{{ $json.text }}\\n```\",\n        \"options\": {\n          \"maxTokens\": \"={{ $('Configure').first().json.replyTokenSize }}\",\n          \"temperature\": 0.1\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"30\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"8bdb3263-40f2-4277-8cc0-f6edef90a1cd\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1500,\n        1480\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"clashHandling\": {\n            \"values\": {\n              \"resolveClash\": \"preferInput1\"\n            }\n          }\n        },\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8e68e725-b2df-4c0c-8b17-e0cd4610714d\",\n      \"name\": \"Upload file to folder\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        2160,\n        1380\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $binary.data.fileName }}\",\n        \"options\": {},\n        \"parents\": [\n          \"={{ $('Configure').first().json[\\\"Google Drive folder to upload matched PDFs\\\"].split(\\\"/\\\").at(-1) }}\"\n        ],\n        \"binaryData\": true\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"32\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bda00901-5ade-471c-b6f9-a18ef4d71589\",\n      \"name\": \"On email received\",\n      \"type\": \"n8n-nodes-base.gmailTrigger\",\n      \"position\": [\n        -240,\n        1520\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"filters\": {},\n        \"options\": {\n          \"downloadAttachments\": true,\n          \"dataPropertyAttachmentsPrefixName\": \"attachment_\"\n        },\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"31\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b2ff4774-336b-47a3-af3f-ada809ed9b8a\",\n      \"name\": \"Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        1440\n      ],\n      \"parameters\": {\n        \"width\": 259.0890718059702,\n        \"height\": 607.9684549079709,\n        \"content\": \"### Configuration\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n__`Match on`(required)__: What should OpenAI's search term be? Examples: invoice, callsheet, receipt, contract, payslip.\\n__`Google Drive folder to upload matched PDFs`(required)__: Paste the link of the GDrive folder, an example has been provided but will need to change to a folder you own.\\n__`maxTokenSize`(required)__: The maximum token size for the model you choose. See possible models from OpenAI [here](https://platform.openai.com/docs/models/gpt-3).\\n__`replyTokenSize`(required)__: The reply's maximum token size. Default is 300. This determines how much text the AI will reply with.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"beb571fe-e7a3-4f3c-862b-dc01821e5f3f\",\n      \"name\": \"Ignore large PDFs\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1300,\n        1620\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f3c4f249-08a7-4e5e-8f46-e07393ac10b5\",\n      \"name\": \"Is text within token limit?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1080,\n        1520\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ $json.text.length() / 4 <= $('Configure').first().json.maxTokenSize - $('Configure').first().json.replyTokenSize }}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"93b6fb96-3e0e-4953-bd09-cf882d2dc69c\",\n      \"name\": \"Has attachments?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        200,\n        1520\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ $('On email received').item.binary.isNotEmpty() }}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"554d415e-a965-46be-8442-35c4cb6b005c\",\n      \"name\": \"There are no attachments\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        420,\n        1620\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is matched\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Read PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Not a PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Read PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is text within token limit?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Configure\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has attachments?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is matched\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"This is a matched PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"This is not a matched PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has attachments?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Iterate over email attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"There are no attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On email received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Configure\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"This is a matched PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload file to folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is text within token limit?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI matches PDF textual content\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ],\n        [\n          {\n            \"node\": \"Ignore large PDFs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Iterate over email attachments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI matches PDF textual content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.readPDF",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.code",
      "n8n-nodes-base.openAi",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.gmailTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp"
    ],
    "trigger": null
  }
}