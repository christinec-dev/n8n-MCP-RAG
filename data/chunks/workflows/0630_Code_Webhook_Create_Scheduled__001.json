{
  "source": "0630_Code_Webhook_Create_Scheduled.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"517fad39-50ec-4eae-94c4-aca5b111a093\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -120,\n        -100\n      ],\n      \"webhookId\": \"a227afae-e16e-44c2-bb5c-e69fe553b455\",\n      \"parameters\": {\n        \"path\": \"a227afae-e16e-44c2-bb5c-e69fe553b455\",\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"cbd978df-9b95-4148-a054-7772213f5b8f\",\n      \"name\": \"continue with valid token\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1020,\n        -40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"65167cf9-3ec5-4727-a604-a318e86bb54e\",\n      \"name\": \"get new accessToken\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        560,\n        80\n      ],\n      \"parameters\": {\n        \"url\": \"http://your-api.com\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"b17e01d2-c43a-486f-ab08-d81e05f8d110\",\n      \"name\": \"2. set token in static data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        780,\n        80\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const workflowStaticData = $getWorkflowStaticData('global');\\n\\n// get new access token\\nworkflowStaticData.accessToken = $input.first().json.AccessToken;\\n// set timestamp of new access token\\nworkflowStaticData.timestamp = $now.toISO().toString();\\n\\nreturn [\\n  {\\n      // data: $input.all(),\\n      accessToken: workflowStaticData.accessToken,\\n      timestamp: workflowStaticData.timestamp,\\n      // today: $today\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"31fd494a-f323-47cc-8f89-0bb2f2332e0f\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -120,\n        60\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {}\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"77623419-99f9-4369-9546-375eaf6f5732\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -180,\n        240\n      ],\n      \"parameters\": {\n        \"width\": 660,\n        \"height\": 400,\n        \"content\": \"# StaticData Demo\\n\\n\\nThis workflow demonstrates how to use the [`workflowStaticData()` function](https://docs.n8n.io/code/cookbook/builtin/get-workflow-static-data/\\n) to set any type of variable that will persist within workflow executions. \\n\\nThis can be useful for working with access tokens that expire after a certain time period. \\n\\nhttps://docs.n8n.io/code/cookbook/builtin/get-workflow-static-data/\\n\\n## Important\\n\\nStatic Data only persists across **_production_** executions, i.e. triggered by Webhooks or Schedule Triggers (not manual executions!)\\nFor this the workflow will have to be activated. \\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4cbdbf7-7b3d-4c52-9d41-bc427d63df5d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        520,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 180,\n        \"height\": 420,\n        \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### HTTP Request\\n\\nToggle \\n`Include Response Headers and Status` \\noption if access token is not sent in the body\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bed68570-bf35-4fa9-984c-1b67a53b59ba\",\n      \"name\": \"if token is valid\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"notes\": \"(1 minute expiration)\",\n      \"position\": [\n        340,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"loose\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"65f5c979-3e7d-4e50-92c3-3ae39f1bba3d\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"afterOrEquals\"\n              },\n              \"leftValue\": \"={{ $json.timestamp }}\",\n              \"rightValue\": \"={{ $now.minus(1,'minute') }}\"\n            }\n          ]\n        },\n        \"looseTypeValidation\": true\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"57a4f5f9-eb77-4fd4-b6b1-55137f108374\",\n      \"name\": \"1. initiate static data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        120,\n        -20\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// initialize staticData object\\nconst workflowStaticData = $getWorkflowStaticData('global');\\n\\n// initialize accessToken on staticData if it desn't exist yet\\nif (!workflowStaticData.hasOwnProperty('accessToken')) {\\n  workflowStaticData.accessToken = 0\\n}\\n\\n// initializing any other variables on the staticData object\\nif (!workflowStaticData.hasOwnProperty('timestamp')) {\\n  workflowStaticData.timestamp = $now.toISO()\\n}\\n\\nreturn [\\n  {\\n      // data: $input.all(),\\n      accessToken: workflowStaticData.accessToken,\\n      timestamp: workflowStaticData.timestamp,\\n      // today: $today\\n  }\\n];\"\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {\n    \"get new accessToken\": [\n      {\n        \"AccessToken\": \"5763273631\"\n      }\n    ]\n  },\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"1. initiate static data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"1. initiate static data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if token is valid\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"continue with valid token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"get new accessToken\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get new accessToken\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"2. set token in static data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"1. initiate static data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if token is valid\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"2. set token in static data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"continue with valid token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.code"
    ],
    "trigger": "schedule trigger"
  }
}