{
  "source": "1917_Wait_Code_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"mN7jDJoWHtJuyKpS\",\n  \"meta\": {\n    \"instanceId\": \"1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7\"\n  },\n  \"name\": \"Generate Graphic Wallpaper with Midjourney, GPT-4o-mini and Canvas APIs\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"11cef766-dd10-46ea-98cf-11eb8d95e157\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        80\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 200,\n        \"content\": \"## Generate Graphic Wallpaper with Midjourney, GPT-4o-mini and Canvas APIs\\nWe design this workflow with PiAPI APIs and Canvas API with the purpose to  produce a visually compelling image with resonant copy to spark emotional connection. üôå \\nWish you make a fantastic generation with our workflow! \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba7143d7-442d-4153-9cfd-bb36448d4c91\",\n      \"name\": \"Midjourney Generator\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1200,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/api/v1/task\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"midjourney\\\",\\n  \\\"task_type\\\": \\\"imagine\\\",\\n  \\\"input\\\": {\\n    \\\"prompt\\\": \\\"{{ $json.prompt }}\\\",\\n    \\\"aspect_ratio\\\": \\\"1:1\\\",\\n    \\\"process_mode\\\": \\\"turbo\\\",\\n    \\\"skip_prompt_check\\\": false\\n  }\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"={{ $('Basic Params').item.json['x-api-key'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"117b5929-e98c-456a-9bfd-fe1deee77abc\",\n      \"name\": \"When clicking Test workflow\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        300,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dfcf5c57-536c-4fb4-967b-24fd375db57c\",\n      \"name\": \"Get Prompt\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        960,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const image_prompt=$('Basic Params').first().json.image_prompt;\\nconst show_prompt =$input.first().json.choices[0].message.content;\\n\\nconst prompt = image_prompt.replace(/'xxx'/, `'${show_prompt}'`)\\nreturn {show_prompt,prompt};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1c641437-de26-4e55-9b34-0cb13d8d1cd3\",\n      \"name\": \"Get Midjourney Task\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1140,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"={{ $('Basic Params').item.json['x-api-key'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"38fda20c-fef6-484c-ac75-c8f2fbaaca15\",\n      \"name\": \"Wait for Midjourney Generation\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        940,\n        580\n      ],\n      \"webhookId\": \"af79053d-1291-4dd2-889e-4593dbbb2512\",\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1d5eaf9a-caf8-4b08-a35c-281b400c9198\",\n      \"name\": \"Determine Whether the Image URL was Fetched\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1340,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"e97a02cc-8d1d-4500-bce5-0a296c792b76\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.data.status }}\",\n              \"rightValue\": \"completed\"\n            },\n            {\n              \"id\": \"50b63a7a-52b5-4766-a859-96ac1ff949ec\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.data.status }}\",\n              \"rightValue\": \"failed\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"983acf91-c5ba-4335-b43e-d7a8a1a6b918\",\n      \"name\": \"Check Image  Generation Status\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1520,\n        320\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"5f61ee56-4ebe-411f-95e6-b47d9741e7a2\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.data.status }}\",\n                    \"rightValue\": \"completed\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"50455a13-5914-4f96-b977-d1c6461807bc\",\n      \"name\": \"Design in Canvas\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1920,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.canvas.switchboard.ai\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"template\\\": \\\"social-3-1\\\",\\n    \\\"sizes\\\": [\\n        {\\n         \\\"width\\\": 1000,\\n         \\\"height\\\": 1500\\n        }\\n    ],\\n    \\\"elements\\\": {\\n        \\\"text1\\\": {\\n            \\\"text\\\": \\\"{{ $('Get Prompt').item.json.show_prompt.replace(/;/g, \\\";\\\\\\\\n \\\")}}\\\"\\n        },\\n         \\\"rectangle1\\\": {\\n                 \\\"fillColor\\\": \\\"#fff\\\"\\n             },\\n        \\\"image1\\\": {\\n            \\\"url\\\": \\\"{{ $json.data.output.temporary_image_urls[0] }}\\\"\\n        }\\n    }\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-API-Key\",\n              \"value\": \"45ba3916-2f10-497d-815b-7ffc9b69001f\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"0fd5d40c-aebc-4ec3-b9b5-027126b39452\",\n      \"name\": \"Get Image Url\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1720,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"d52d19d1-3a37-47bb-ad23-e809323c0c54\",\n              \"name\": \"data.output.temporary_image_urls\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.data.output.temporary_image_urls }}\"\n            },\n            {\n              \"id\": \"49bed53e-675d-4ea0-947c-ffcbfae0ee97\",\n              \"name\": \"data.output.image_url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.data.output.image_url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e36d4bd6-2d34-447c-984e-515c48f3632e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        500\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 280,\n        \"content\": \"## Basic Params\\nIn **Basic Params** node, you need to fill in your PiAPI key which you could check in [My Account](https://piapi.ai/workspace/my-account) on [PiAPI](https://piapi.ai). Other information you need to provide is listed as followüìù: \\n1. Theme. The theme refers to the topic that you want to talk about when you start your generation.\\n2. Scenario. The scenario text usually describe your status about your feeling.\\n3. Style. The style of the image.\\n4. Example. The text example shown to LLM to describe a style t you want to generate.\\n5. Image prompt. Image prompt is usually about the context of the image that you want to generate.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1e04fe5d-a1f4-4fe9-a3d2-9c6aeaf05d96\",\n      \"name\": \"Gpt-4o-mini API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        740,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-mini\\\",\\n    \\\"messages\\\": [\\n       {\\n          \\\"role\\\": \\\"system\\\",\\n          \\\"content\\\": \\\"You are a helpful assistant.\\\"\\n        },\\n        {\\n          \\\"role\\\": \\\"user\\\",\\n          \\\"content\\\": \\\"Please {{ $json.style }}, based on the theme of {{ $json.theme }} and the scenario of {{ $json.scenario }}, according to the output case and language context. Examples are  {{ $json.example }},Return a sentence directly, nothing else,Don't add a serial number, just a prompt that can be used for input,Do not add any quotation marks.\\\"}\\n      ]\\n  }\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Basic Params').first().json['x-api-key'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4eaf0f57-9458-42cb-b736-c737f134320b\",\n      \"name\": \"Basic Params\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        540,\n        320\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"{\\n  \\\"x-api-key\\\":\\\"\\\",\\n  \\\"theme\\\": \\\"Hope\\\",\\n  \\\"scenario\\\": \\\"Don't know about the future, confused and feel lost about AI agent\\\",\\n  \\\"style\\\":\\\"Cinematic Grandeur,Sci-Tech Aesthetic, 3D style\\\",\\n  \\\"example\\\":\\\"1. March. Because of your faith, it will happen.2. Something in me will save me.3. To everyone carrying a heavy heart in silence. You are going to be okay.4. Tomorrow will be better.\\\",\\n  \\\"image_prompt\\\":\\\"A cinematic sci-fi metropolis where Deep Neural Nets control a hyper-connected society. Holographic interfaces glow in the air as robotic agents move among humans, symbolizing Industry 4.0. The scene contrasts organic human emotion with cold machine precision, rendered in a hyper-realistic 3D style with futuristic lighting. Epic wide shots showcase the grandeur of this civilization‚Äôs industrial evolution.\\\"\\n}\\n\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6750b606-4222-4cda-bcaa-5d4f2b4f9ec8\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1680,\n        560\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 200,\n        \"content\": \"## Design in Canvas API Node\\nWe make a final design with Canvas API. \\nYou could check the node code to make a template design more efficiently in Canvas.\\nAlso you could make various artworks with template library in Canvas. \\nYou could modify node parameters to or add more nodes to make more artworks in one role.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"09b5a8e6-bdc8-47bb-a9e3-95b090ff3f13\",\n  \"connections\": {\n    \"Get Prompt\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Midjourney Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Basic Params\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gpt-4o-mini API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image Url\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Design in Canvas\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gpt-4o-mini API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Prompt\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Midjourney Task\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Determine Whether the Image URL was Fetched\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Midjourney Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait for Midjourney Generation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking Test workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic Params\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Image  Generation Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image Url\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait for Midjourney Generation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Midjourney Task\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Determine Whether the Image URL was Fetched\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Image  Generation Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait for Midjourney Generation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.if",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}