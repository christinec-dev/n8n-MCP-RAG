{
  "source": "0464_Openai_Form_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"96cab4456c8d5d47ff3acba57e93f1f3750005103b819e4580442bcd2bb6cc4d\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"8b6d8462-1fe5-478b-aa15-7d10ff799aae\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        980,\n        900\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"prompt\",\n              \"stringValue\": \"\\\"\\\"\\\"PROMPT: The above is a n8n workflow json, please create workflow documentation for the user:. you are the master of brevity, be as concise and brief as possible, output generated documentation only.      ## Guidelines for the documentation  - **Provide a detailed description**: Provide a concise and informative description outlining the template's functionality and expected outcomes. Include a brief setup guide for user convenience. A detailed description not only clarifies the template's purpose but also enhances its discoverability through SEO. Itâ€™s advised to use these sections in your description:     - Who is this for?     - What problem is this workflow solving? / use case     - What this workflow does     - Setup     - How to customize this workflow to your needs   Here is an example  ``` # Who is this template for?  This workflow template is designed for **Sales** and **Customer Success** professionals seeking alerts when potential high-value users, prospects, or existing customers register for a Discourse community. Leveraging Clearbit, it retrieves enriched data for the new member to assess their value.  ### Example result in Slack  ![Screenshot 20240221 at 13.51.29.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_02_21_at_13_51_29_030961dc1b.png)  # How it works  - Each time a new member is created in Discourse, the workflow runs (powered by Discourse's native Webhooks feature). - After filtering out popular private email accounts, we run the member's email through Clearbit to fetch available information on the member as well as their organization. - If the enriched data meets certain criteria, we send a Slack message to a channel. This message has a few quick actions: `Open LinkedIn profile` and `Email member`  # Set up instructions  Overview is below. Watch this [ðŸŽ¥ quick set up video](https://www.loom.com/share/d379895004374ddc85dc9171ca37c139?sid=bb28df29-bc91-4d32-a657-0bfbaaf50cc7) for detailed instructions on how to get the template running, as well as how to customize it.  1. Complete the `Set up credentials` step when you first open the workflow. You'll need a Discourse (admin user), Clearbit, and Slack account. 2. Set up the Webhook in Discourse, linking the `On new Discourse user` Trigger with your Discourse community. 3. Set the correct channel to send to in the `Post message in channel` step 4. After testing your workflow, swap the Test URL to Production URL in Discourse and activate your workflow  Template was created in n8n `v1.29.1`  ``` \\\"\\\"\\\"\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"9d1e972c-e737-4221-bd8b-dfd8115b9948\",\n      \"name\": \"OpenAI\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"position\": [\n        1400,\n        900\n      ],\n      \"parameters\": {\n        \"prompt\": {\n          \"messages\": [\n            {\n              \"content\": \"={{ $json.input }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"resource\": \"chat\",\n        \"chatModel\": \"gpt-4-1106-preview\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"GrqJccjcTot1xZLv\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3071e7e7-e0d6-4fad-a6ee-fbb5b722f344\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1620,\n        900\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200,\n          \"responseHeaders\": {\n            \"entries\": [\n              {\n                \"name\": \"Content-Type\",\n                \"value\": \"text/html; charset=UTF-8\"\n              }\n            ]\n          }\n        },\n        \"respondWith\": \"text\",\n        \"responseBody\": \"=<!DOCTYPE html>\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <title>Markdown to HTML</title>\\n    <style>\\n      main {\\n        font-family: Arial, sans-serif;\\n        margin: 0;\\n        display: flex;\\n        justify-content: center;\\n        height: 100vh;\\n        background-color: #f5f5f5;\\n        font-size: 24px;\\n      }\\n\\n      .content-container {\\n        text-align: center;\\n        border: 1px solid #ddd;\\n        border-radius: 8px;\\n        padding: 20px;\\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n        background-color: #fff;\\n        max-width: 600px;\\n        width: 100%;\\n        margin: 20px;\\n      }\\n\\n      #markdown-content {\\n        text-align: left;\\n        margin-top: 20px;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <main>\\n      <div class=\\\"content-container\\\">\\n        <div id=\\\"markdown-content\\\"> {{ $json.message.content?.replace(/\\\\n/g,'<br/>') }}</div>\\n      </div>\\n    </main>\\n  </body>\\n</html>\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1740cef8-d25b-46f2-a63d-50b86599dbf2\",\n      \"name\": \"n8n Form Trigger\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        760,\n        900\n      ],\n      \"webhookId\": \"c61492e5-73ce-40d4-b758-d5f09da0fb6c\",\n      \"parameters\": {\n        \"path\": \"c61492e5-73ce-40d4-b758-d5f09da0fb6c\",\n        \"formTitle\": \"Workflow Documenter\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldLabel\": \"Workflow Title\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldLabel\": \"Workflow Json\",\n              \"requiredField\": true\n            }\n          ]\n        },\n        \"responseMode\": \"responseNode\",\n        \"formDescription\": \"Automatically document your n8n workflow\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"fde56941-46a8-4340-b099-f7e75950b336\",\n      \"name\": \"Create input to open ai\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1180,\n        900\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"input\",\n              \"stringValue\": \"=Workflow Title:  {{ $json['Workflow Title'] }}\\n\\nWofklow JSON: ```{{ $json['Workflow Json'] }}```\\n\\n{{ $json.prompt }}  \"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create input to open ai\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"n8n Form Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create input to open ai\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.set",
      "n8n-nodes-base.openAi",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.formTrigger",
      "n8n-nodes-base.set"
    ],
    "trigger": "n8n form trigger"
  }
}