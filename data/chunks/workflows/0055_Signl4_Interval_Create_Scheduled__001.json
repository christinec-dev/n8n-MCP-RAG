{
  "source": "0055_Signl4_Interval_Create_Scheduled.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        230,\n        710\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Trigger\",\n      \"type\": \"n8n-nodes-base.notionTrigger\",\n      \"disabled\": true,\n      \"position\": [\n        230,\n        210\n      ],\n      \"parameters\": {\n        \"event\": \"pageAddedToDatabase\",\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 1\n            }\n          ]\n        },\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        50,\n        710\n      ],\n      \"webhookId\": \"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\n      \"parameters\": {\n        \"path\": \"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        230,\n        710\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        420,\n        710\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"alert\\\"][\\\"externalEventId\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Description|rich_text\",\n              \"peopleValue\": [],\n              \"textContent\": \"={{$node[\\\"Function\\\"].json[\\\"s4Status\\\"]}}\",\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Interval\",\n      \"type\": \"n8n-nodes-base.interval\",\n      \"position\": [\n        50,\n        380\n      ],\n      \"parameters\": {\n        \"interval\": 20\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Resolve\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        540\n      ],\n      \"parameters\": {\n        \"operation\": \"resolve\",\n        \"externalId\": \"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\"\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Alert\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        210\n      ],\n      \"parameters\": {\n        \"message\": \"=Machine Alert: {{$node[\\\"Notion Trigger\\\"].json[\\\"Name\\\"]}}\",\n        \"additionalFields\": {\n          \"title\": \"n8n Alert\",\n          \"externalId\": \"={{$node[\\\"Notion Trigger\\\"].json[\\\"id\\\"]}}\",\n          \"locationFieldsUi\": {\n            \"locationFieldsValues\": {\n              \"latitude\": \"52.3992137\",\n              \"longitude\": \"13.0583823\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update Read\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        570,\n        380\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Read|checkbox\",\n              \"peopleValue\": [],\n              \"checkboxValue\": true,\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Read Open\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        230,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"filter\": {\n            \"multipleCondition\": {\n              \"condition\": {\n                \"and\": [\n                  {\n                    \"key\": \"Up|checkbox\",\n                    \"condition\": \"equals\",\n                    \"checkboxValue\": true,\n                    \"multiSelectValue\": []\n                  },\n                  {\n                    \"key\": \"Read|checkbox\",\n                    \"condition\": \"equals\",\n                    \"checkboxValue\": true,\n                    \"multiSelectValue\": []\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Read New\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        230,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"filter\": {\n            \"multipleCondition\": {\n              \"condition\": {\n                \"and\": [\n                  {\n                    \"key\": \"Read|checkbox\",\n                    \"condition\": \"equals\",\n                    \"multiSelectValue\": []\n                  },\n                  {\n                    \"key\": \"Up|checkbox\",\n                    \"condition\": \"equals\",\n                    \"multiSelectValue\": []\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update Final\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        570,\n        540\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Read|checkbox\",\n              \"peopleValue\": [],\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Alert 2\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        380\n      ],\n      \"parameters\": {\n        \"message\": \"=Machine Alert: {{$node[\\\"Notion Read New\\\"].json[\\\"Name\\\"]}}\",\n        \"additionalFields\": {\n          \"title\": \"n8n Alert\",\n          \"externalId\": \"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\n          \"locationFieldsUi\": {\n            \"locationFieldsValues\": {\n              \"latitude\": \"52.3992137\",\n              \"longitude\": \"13.0583823\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Interval\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Read Open\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Notion Read New\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Alert\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SIGNL4 Alert 2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update Read\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SIGNL4 Resolve\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update Final\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Read New\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Alert 2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Read Open\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Resolve\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.function",
      "n8n-nodes-base.notionTrigger",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.function",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.interval",
      "n8n-nodes-base.signl4",
      "n8n-nodes-base.signl4",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.signl4"
    ],
    "trigger": "notion trigger"
  }
}