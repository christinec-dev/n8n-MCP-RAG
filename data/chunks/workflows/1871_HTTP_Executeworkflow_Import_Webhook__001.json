{
  "source": "1871_HTTP_Executeworkflow_Import_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"gqwYlZvL1dwy9W3T\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"getBible Query v1.0\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"37e21e75-6f18-45fc-9b74-860c1e095b83\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -880,\n        -320\n      ],\n      \"parameters\": {\n        \"width\": 780,\n        \"height\": 1720,\n        \"content\": \"# GetBible Query Workflow Documentation\\n\\n## Overview\\n\\nThe **GetBibleQuery** workflow is a modular and self-standing workflow designed to retrieve scriptures based on provided references. It serves as an intermediary layer that takes in a structured JSON object, extracts the references, and returns the corresponding scriptures in the same format as if they were retrieved directly from the API.\\n\\nThis workflow is highly adaptable and can be integrated into various projects where scriptural references need to be dynamically fetched.\\n\\n## JSON Input Structure\\n\\nThe workflow expects a JSON object with the following parameters:\\n\\n - References should include the book name, chapter, and verse(s). \\n - Multiple verses can be separated by commas (e.g., `John 3:16,18`).\\n - Ranges can be specified using a dash (e.g., `John 3:16-18`).\\n - The Bible [translation](https://api.getbible.net/v2/translations.json) to be used.\\n - Specifies the API version (v2)\\n\\n### Example JSON Input:\\n\\n```json\\n{\\n  \\\"references\\\": [\\n      \\\"1 John 3:16\\\",\\n      \\\"Jn 3:16\\\",\\n      \\\"James 3:16\\\",\\n      \\\"Rom 3:16\\\"\\n  ],\\n  \\\"translation\\\": \\\"kjv\\\",\\n  \\\"version\\\": \\\"v2\\\"\\n}\\n```\\n\\n### API Response Format\\n\\nThe response returned by this workflow follows the same API format as if the request were made directly to the source API. This ensures compatibility with projects that rely on standard API responses.\\n\\nExample JSON Response (in this workflow):\\n```json\\n{\\n  \\\"result\\\": {\\n    \\\"kjv_62_3\\\": {\\n      \\\"translation\\\": \\\"King James Version\\\",\\n      \\\"abbreviation\\\": \\\"kjv\\\",\\n      \\\"lang\\\": \\\"en\\\",\\n      \\\"language\\\": \\\"English\\\",\\n      \\\"direction\\\": \\\"LTR\\\",\\n      \\\"encoding\\\": \\\"UTF-8\\\",\\n      \\\"book_nr\\\": 62,\\n      \\\"book_name\\\": \\\"1 John\\\",\\n      \\\"chapter\\\": 3,\\n      \\\"name\\\": \\\"1 John 3\\\",\\n      \\\"ref\\\": [\\n        \\\"1 John 3:16\\\"\\n      ],\\n      \\\"verses\\\": [\\n        {\\n          \\\"chapter\\\": 3,\\n          \\\"verse\\\": 16,\\n          \\\"name\\\": \\\"1 John 3:16\\\",\\n          \\\"text\\\": \\\"Hereby perceive we the love of God, because he laid down his life for us: and we ought to lay down our lives for the brethren.\\\"\\n        }\\n      ]\\n    }\\n  }\\n}\\n```\\n\\n## Integration and Usage\\n\\nThe GetBible Query workflow is designed for easy integration into any project that requires scripture retrieval. Simply pass the appropriate JSON object as input, and it will return the requested scripture passages.\\n\\n## Support\\n\\nFor any questions or additional assistance, please visit our [Support desk](https://git.vdm.dev/getBible/support) or [API documentation](https://getbible.net/docs)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d5da846-fd1b-48f6-8199-2f9a3a4c99b5\",\n      \"name\": \"Entry\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"inputSource\": \"jsonExample\",\n        \"jsonExample\": \"{\\n  \\\"references\\\": [\\n      \\\"1 John 3:16\\\",\\n      \\\"Jn 3:16\\\",\\n      \\\"James 3:16\\\",\\n      \\\"Rom 3:16\\\"\\n  ],\\n  \\\"translation\\\": \\\"kjv\\\",\\n  \\\"version\\\": \\\"v2\\\"\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"17444cd4-4ec3-4d8f-9f9d-29369632c420\",\n      \"name\": \"ModelJson\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items and process the 'references' field\\nfor (let item of $input.all()) {\\n  // Check if 'references' exists and is an array\\n  if (Array.isArray(item.json.references)) {\\n    item.json.references = item.json.references.join('; ');\\n  } else {\\n    // Handle cases where 'references' is missing or not an array\\n    item.json.references = 'John 3:16';\\n  }\\n}\\n\\n// Return the modified items\\nreturn $input.all();\"\n      },\n      \"executeOnce\": true,\n      \"retryOnFail\": false,\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"b392423f-22d7-4b3f-8e25-9c703c33c78d\",\n      \"name\": \"API Query to GetBible\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        460,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"=https://query.getbible.net/{{ $json.version || 'v2' }}/{{ $json.translation || 'kjv' }}/{{ $json.references }}\",\n        \"options\": {}\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"e55d8b82-a30a-4ed9-a28f-ae2d9808422c\",\n      \"name\": \"Map API Respons to Result\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        680,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"360a59c4-5e4c-43b8-8b0b-bb121054a709\",\n              \"name\": \"result\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"pinData\": {\n    \"Entry\": [\n      {\n        \"json\": {\n          \"version\": \"v2\",\n          \"references\": [\n            \"1 John 3:16\",\n            \"Jn 3:16\",\n            \"James 3:16\",\n            \"Rom 3:16\"\n          ],\n          \"translation\": \"kjv\"\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\",\n    \"saveExecutionProgress\": false\n  },\n  \"versionId\": \"c8a37d01-c65f-4975-878a-20ed73c42b6b\",\n  \"staticData\": null,\n  \"connections\": {\n    \"Entry\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ModelJson\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ModelJson\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"API Query to GetBible\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"API Query to GetBible\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Map API Respons to Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"triggerCount\": 0\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}