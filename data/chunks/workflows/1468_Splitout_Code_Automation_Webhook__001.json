{
  "source": "1468_Splitout_Code_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"Gd4MsAZGnSGfBwaw\",\n  \"meta\": {\n    \"instanceId\": \"8fb543b511022c43ab705107ba101545bb8b0fdb9bd6ebc4cca28dc9591a036e\"\n  },\n  \"name\": \"Telegram channel to Readeck & Hoarder\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"6e50d52e-8b9e-4c92-82a1-af366c7a2ccf\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -440,\n        -700\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bb7430a2-a7b7-47f2-9ba3-a3e43c8da004\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -100,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"bookmarks\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"922aeb0b-29b1-46c6-9b18-76c02eca5a9e\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -480\n      ],\n      \"parameters\": {\n        \"width\": 1120,\n        \"height\": 220,\n        \"content\": \"## Readeck\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"64d4ca0b-2c16-441e-9461-5707be877132\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -220,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 480,\n        \"height\": 200,\n        \"content\": \"## Telegram\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"13ae24ec-ac11-470a-bad4-76403861f632\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -180\n      ],\n      \"parameters\": {\n        \"width\": 1120,\n        \"height\": 220,\n        \"content\": \"## Hoarder\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c606f434-d37b-4406-997a-1e7f17319281\",\n      \"name\": \"not_saved_links_hd\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        260,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const linksCanalItems = $('channel_links_tg').all();\\nconst saved_links_items = $('saved_links_hd').all();\\n\\n// Extract links\\nconst saved_links = new Set(\\n    saved_links_items.map(item => String(item.json.content.url))\\n);\\n\\n// Filter\\nconst filteredLinks = linksCanalItems.filter(item => {\\n    return !saved_links.has(String(item.json.url));\\n});\\n\\nreturn filteredLinks;\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d0f61836-798c-4835-ae8f-8f184b6720ed\",\n      \"name\": \"not_saved_links_rd\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        260,\n        -420\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const linksCanalItems = $('channel_links_tg').all();\\nconst saved_links_items = $('saved_links_rd').all();\\n\\n// Extract urls\\nconst saved_urls = new Set(\\n    saved_links_items.map(item => String(item.json.url))\\n);\\n\\n// Filter\\nconst filteredLinks = linksCanalItems.filter(item => {\\n    return !saved_urls.has(String(item.json.url));\\n});\\n\\nreturn filteredLinks;\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f33349a7-361a-4b0f-844b-1ca5ded2aeab\",\n      \"name\": \"saved_links_rd\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        80,\n        -420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8c6f3806-0fb8-4c76-a0bc-19b588717430\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"ef41cba3-2844-479c-9467-6b94ae24c98b\",\n              \"name\": \"url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"63d45b19-e878-418e-8eb5-c16b50af9669\",\n      \"name\": \"save_link_rd\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        460,\n        -420\n      ],\n      \"parameters\": {\n        \"url\": \"={{$env.READECK_SERVER}}/api/bookmarks\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            },\n            {\n              \"name\": \"authorization\",\n              \"value\": \"=Bearer {{$env.READECK_API_KEY}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"9416a858-1a25-4c3e-a49e-153118c268a7\",\n      \"name\": \"save_link_hd\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        460,\n        -120\n      ],\n      \"parameters\": {\n        \"url\": \"={{$env.HOARDER_SERVER}}/api/v1/bookmarks\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"type\",\n              \"value\": \"link\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{$env.HOARDER_API_KEY}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"13693467-cd75-4774-9072-832419606ab2\",\n      \"name\": \"get_links_rd\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -280,\n        -420\n      ],\n      \"parameters\": {\n        \"url\": \"={{$env.READECK_SERVER}}/api/bookmarks\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            },\n            {\n              \"name\": \"authorization\",\n              \"value\": \"=Bearer {{$env.READECK_API_KEY}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"e4ed315d-d065-425a-b30d-eca1509670cc\",\n      \"name\": \"get_links_hd\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -280,\n        -120\n      ],\n      \"parameters\": {\n        \"url\": \"={{$env.HOARDER_SERVER}}/api/v1/bookmarks\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{$env.HOARDER_API_KEY}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"f54d9a4d-f00b-41bf-988a-8920d0046424\",\n      \"name\": \"saved_links_hd\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        80,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b07ce8e5-0b67-4c9c-831a-7a52f92f5744\",\n              \"name\": \"content.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.content.url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d4e83b9d-5988-46f4-b853-86daec274dba\",\n      \"name\": \"channel_links_tg\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        120,\n        -700\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Define the chatId from the environment variable\\nconst chatId = parseInt($env.TG_SHERLINK_ID, 10);\\n// Access the \\\"result\\\" field from the previous node's output\\nconst updates = $node[\\\"channel_items_tg\\\"].json[\\\"result\\\"];\\n// Check if \\\"result\\\" is an array\\nif (!Array.isArray(updates)) {\\n  return []; // Return empty if there are no messages\\n}\\n// Filter and process the messages\\nconst filteredUpdates = updates\\n  .map(update => {\\n    // Ensure message from the specified channel\\n    if (update.channel_post && update.channel_post.chat && update.channel_post.chat.id === chatId) {\\n      return {\\n        id: update.channel_post.message_id,\\n        url: update.channel_post.text\\n      };\\n    }\\n    return null;\\n  })\\n  \\n  .filter(item => item !== null) // Filter nulls\\n  .filter(item => {\\n    // Filter only with hyperlink in text\\n    const text = item.url || \\\"\\\"; // Defined text\\n    return /https?:\\\\/\\\\/[^\\\\s]+/.test(text); // hyperlink\\n  });\\n// Convert each array element into an individual item\\nreturn filteredUpdates.map(update => ({ json: update }));\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"ca306aed-e682-4c35-a257-3b65bcfde895\",\n      \"name\": \"channel_items_tg\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -80,\n        -700\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.telegram.org/bot{{$env.TG_SHERLINK_BOT_TOKEN}}/getUpdates\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {}\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"85dd3731-0772-4b8b-b828-ae6a034d5419\",\n  \"connections\": {\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"saved_links_hd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_links_hd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_links_rd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"saved_links_rd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"save_link_hd\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"save_link_rd\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"saved_links_hd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"not_saved_links_hd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"saved_links_rd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"not_saved_links_rd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"channel_items_tg\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"channel_items_tg\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"channel_links_tg\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"channel_links_tg\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get_links_rd\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"get_links_hd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"not_saved_links_hd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"save_link_hd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"not_saved_links_rd\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"save_link_rd\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest"
    ],
    "trigger": "schedule trigger"
  }
}