{
  "source": "0311_Datetime_Schedule_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"a2434c94d549548a685cca39cc4614698e94f527bcea84eefa363f1037ae14cd\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"0bacf032-53d6-4ba6-ab71-e01625c49cc4\",\n      \"name\": \"On schedule\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -1960,\n        160\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\",\n              \"minutesInterval\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"2e0d9aef-0a60-4506-9c11-c6c2cccb16ea\",\n      \"name\": \"Derive last request time\",\n      \"type\": \"n8n-nodes-base.dateTime\",\n      \"position\": [\n        -1740,\n        160\n      ],\n      \"parameters\": {\n        \"duration\": 1,\n        \"timeUnit\": \"minutes\",\n        \"magnitude\": \"={{ $json.timestamp }}\",\n        \"operation\": \"subtractFromDate\",\n        \"outputFieldName\": \"last_request_time\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f726c448-b4c4-4159-8ca5-c94c092127b7\",\n      \"name\": \"Get emails from label and last request time\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        -1520,\n        160\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"labelIds\": [\n            \"Label_9178764513576607415\"\n          ]\n        },\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"31\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9b86331f-d33b-4266-ba34-bc0491a0da24\",\n      \"name\": \"Create database page\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        -620,\n        60\n      ],\n      \"parameters\": {\n        \"title\": \"={{ $('If database page not found').item.json.Subject }}\",\n        \"blockUi\": {\n          \"blockValues\": [\n            {\n              \"type\": \"heading_3\",\n              \"textContent\": \"Snippet\"\n            },\n            {\n              \"textContent\": \"={{ $('If database page not found').item.json.snippet }}\"\n            },\n            {\n              \"text\": {\n                \"text\": [\n                  {\n                    \"text\": \"See more\",\n                    \"isLink\": true,\n                    \"textLink\": \"=https://mail.google.com/mail/u/{{ $json.emailAddress }}/#all/{{ $('If database page not found').item.json.id }}\",\n                    \"annotationUi\": {}\n                  }\n                ]\n              },\n              \"richText\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"icon\": \"https://avatars.githubusercontent.com/u/45487711?s=280&v=4\",\n          \"iconType\": \"file\"\n        },\n        \"resource\": \"databasePage\",\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"e606a7c1-e93d-47fd-8b8d-8000cd6e7522\",\n          \"cachedResultUrl\": \"https://www.notion.so/e606a7c1e93d47fd8b8d8000cd6e7522\",\n          \"cachedResultName\": \"Gmail\"\n        },\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Thread ID|rich_text\",\n              \"textContent\": \"={{ $('If database page not found').item.json.id }}\"\n            },\n            {\n              \"key\": \"Email thread|url\",\n              \"urlValue\": \"=https://mail.google.com/mail/u/{{ $json.emailAddress }}/#all/{{ $('If database page not found').item.json.id }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"18\",\n          \"name\": \"[UPDATE ME]\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d7198578-4c83-4f57-8eba-5b5a9b89195c\",\n      \"name\": \"Try get database page\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        -1360,\n        220\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"key\": \"Thread ID|rich_text\",\n              \"condition\": \"equals\",\n              \"richTextValue\": \"={{ $json.id }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"e606a7c1-e93d-47fd-8b8d-8000cd6e7522\",\n          \"cachedResultUrl\": \"https://www.notion.so/e606a7c1e93d47fd8b8d8000cd6e7522\",\n          \"cachedResultName\": \"My Gmail Tasks\"\n        },\n        \"filterType\": \"manual\"\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"18\",\n          \"name\": \"[UPDATE ME]\"\n        }\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"f8188ab9-9a80-4aa9-b773-73cd90b8dbd3\",\n      \"name\": \"If checked off\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1740,\n        460\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ $json.Complete }}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bfcfeeb1-ad8b-47fb-8a09-b58e7b649a25\",\n      \"name\": \"On updated database page\",\n      \"type\": \"n8n-nodes-base.notionTrigger\",\n      \"position\": [\n        -1960,\n        460\n      ],\n      \"parameters\": {\n        \"event\": \"pagedUpdatedInDatabase\",\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        },\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"e606a7c1-e93d-47fd-8b8d-8000cd6e7522\",\n          \"cachedResultUrl\": \"https://www.notion.so/e606a7c1e93d47fd8b8d8000cd6e7522\",\n          \"cachedResultName\": \"My Gmail Tasks\"\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"18\",\n          \"name\": \"[UPDATE ME]\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dc2c59b8-6e0d-46b3-946a-e48b0461c48f\",\n      \"name\": \"Remove label from target email\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        -1520,\n        460\n      ],\n      \"parameters\": {\n        \"labelIds\": [\n          \"Label_9178764513576607415\"\n        ],\n        \"messageId\": \"={{ $json['Thread ID'] }}\",\n        \"operation\": \"removeLabels\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"31\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0f693c2f-ce89-4a2f-a85f-9230b7bcb94d\",\n      \"name\": \"Not yet checked off, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        -1520,\n        660\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bf792470-fc0a-45a2-b655-df5c977faa97\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        -1220,\n        100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"joinMode\": \"enrichInput1\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"id\",\n              \"field2\": \"property_thread_id\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"f910c34c-4c3d-481f-8223-a8aae710dbbd\",\n      \"name\": \"If found, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        -840,\n        260\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7086cd15-9f2e-40e4-be3b-47d117dde670\",\n      \"name\": \"If database page not found\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1060,\n        160\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.property_thread_id }}\",\n              \"operation\": \"isEmpty\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86ce380c-0810-4edb-94e4-fb67b0ca422c\",\n      \"name\": \"Find my email address\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -840,\n        60\n      ],\n      \"parameters\": {\n        \"url\": \"https://gmail.googleapis.com/gmail/v1/users/me/profile\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"gmailOAuth2\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"31\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"f576f785-49e4-4ed2-b83e-400b001b6c3a\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2540,\n        100\n      ],\n      \"parameters\": {\n        \"width\": 501.0810810810809,\n        \"height\": 545.405405405404,\n        \"content\": \"## Send labeled email to a Notion database\\nThis workflow sends the contents of an email to a Notion database. The email must be labeled with a specific label for the workflow to trigger. The email subject will be the title of the Notion page, and a snippet of the email body will be the content of the Notion page. The email link will be added to the Notion page as a property.\\n\\n### How it works\\nOn scheduled intervals, find all emails with a specific label. For each email, check if the email already exists in the Notion database. If it does not exist, create a new page in the Notion database, otherwise do nothing. When the task in the Notion database is checked off, the label will be removed from the email.\\n\\n### Setup\\nThis workflow requires that you set up a Notion database or use an existing one with at least the following fields:\\n- Title (title)\\n- Thread ID (text)\\n- Email thread (URL)\\n\\n\\nAdditionally, create a label that will be used to trigger the workflow in Gmail. In this workflow, the label is called \\\"Notion\\\".\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If database page not found\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On schedule\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Derive last request time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If checked off\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove label from target email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Not yet checked off, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Find my email address\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create database page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Try get database page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Derive last request time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get emails from label and last request time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On updated database page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If checked off\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If database page not found\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Find my email address\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"If found, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get emails from label and last request time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Try get database page\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.dateTime",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.if",
      "n8n-nodes-base.notionTrigger",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}