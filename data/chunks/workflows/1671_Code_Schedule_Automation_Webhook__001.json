{
  "source": "1671_Code_Schedule_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"eZT6SZ4Kvmq5TzyQ\",\n  \"meta\": {\n    \"instanceId\": \"558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Umami analytics template\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"8a54ac1c-a072-42e6-a3ba-8cde33475eb5\",\n      \"name\": \"When clicking \\u2018Test workflow\\u2019\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        460,\n        220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e81c9be0-f59d-467e-9bda-eeb2d66ed31e\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        460,\n        380\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\",\n              \"triggerAtDay\": [\n                4\n              ]\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"01b04872-9aea-4834-8df5-f6c91914133d\",\n      \"name\": \"Get view stats from Umami\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        760,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://umami.mydomain.com/api/websites/86d4095c-a2a8-4fc8-9521-103e858e2b41/event-data/stats?startAt={{ DateTime.now().minus({ days: 7 }).toMillis() }}&endAt={{ DateTime.now().toMillis() }}&unit=hour&timezone=Asia%2FHong_Kong\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"FKsKXvQUlaX5qt9n\",\n          \"name\": \"Header Auth account 3\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"38d342e3-10ad-4260-8f44-5a3233ec3166\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        660,\n        -260\n      ],\n      \"parameters\": {\n        \"width\": 504.88636363636317,\n        \"content\": \"## Send data from Umami to A.I. and then save to Baserow\\n\\nYou can find out more about the stats available in the [Umami API](https://umami.is/docs/api/website-stats-api)\\n\\nRead the [case study here](https://rumjahn.com/how-to-analyze-umami-data-using-n8n-and-a-i-to-improve-seo-and-uncover-hidden-insights-for-better-content-optimization/).\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"18c997fe-61b1-464a-8bb5-fcdc017dd1f6\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        660,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 393.16558441558414,\n        \"height\": 504.17207792207796,\n        \"content\": \"## Get summary stats from Umami\\n\\nIt will get: Pageviews, Visitors, Visits, Bounces, Total Time\\n\\nYou need to change the URL to your website. https://{your website}/api/websites/{website ID}/\\n\\nYou can find your ID by going to your Umami account -> Settings -> Edit (next to domain)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bfdc04a2-57fa-4a8a-b412-39047cebb370\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1080,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 216.5746753246753,\n        \"height\": 502.37012987012963,\n        \"content\": \"## Send data to A.I.\\n\\nTo use Openrouter, you need to register for an account.\\nThen add header authorization credentials.\\nUsername: Authroization\\nPassword: Bearer {Your API Key}\\n*It's Bearer space {API key}.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fc373fd7-52fc-4729-8022-021c09d0c89c\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1320,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 746.3474025974022,\n        \"height\": 505.9740259740257,\n        \"content\": \"## Get page specific stats for this week and last\\n\\nCalls Umami to get this week and last week's data. It will get the views for each page visited on your website for comparison.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82bd35b6-8b49-4d77-8be2-033a8bff3f41\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2120,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 216.5746753246753,\n        \"height\": 502.37012987012963,\n        \"content\": \"## Send data to A.I.\\n\\nTo use Openrouter, you need to register for an account.\\nThen add header authorization credentials.\\nUsername: Authroization\\nPassword: Bearer {Your API Key}\\n*It's Bearer space {API key}.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"503c4ca3-36da-41a8-9029-f844a34daa59\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2380,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 393.16558441558414,\n        \"height\": 504.17207792207796,\n        \"content\": \"## Save analysis to baserow\\n\\nYou need to create a table in advance to save. \\n- Date (date)\\n- Summary (Long text)\\n- Top pages (Long text)\\n- Blog name (Long text)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f64cdfbd-712f-461c-b025-25f37e2bded8\",\n      \"name\": \"Parse Umami data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        940,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n // In n8n, we need to check if items is an array and get the json property\\n const data = items[0].json;\\n \\n if (!data) {\\n console.log('No valid data found');\\n return encodeURIComponent(JSON.stringify([]));\\n }\\n \\n try {\\n // Create a simplified object with the metrics\\n const simplified = {\\n pageviews: {\\n value: parseInt(data.pageviews.value) || 0,\\n prev: parseInt(data.pageviews.prev) || 0\\n },\\n visitors: {\\n value: parseInt(data.visitors.value) || 0,\\n prev: parseInt(data.visitors.prev) || 0\\n },\\n visits: {\\n value: parseInt(data.visits.value) || 0,\\n prev: parseInt(data.visits.prev) || 0\\n },\\n bounces: {\\n value: parseInt(data.bounces.value) || 0,\\n prev: parseInt(data.bounces.prev) || 0\\n },\\n totaltime: {\\n value: parseInt(data.totaltime.value) || 0,\\n prev: parseInt(data.totaltime.prev) || 0\\n }\\n };\\n \\n return encodeURIComponent(JSON.stringify(simplified));\\n } catch (error) {\\n console.log('Error processing data:', error);\\n throw new Error('Invalid data structure');\\n }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"470715b6-0878-48b8-b6c6-40de27fbc966\",\n      \"name\": \"Send data to A.I.\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1140,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"https://openrouter.ai/api/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n \\\"messages\\\": [\\n {\\n \\\"role\\\": \\\"user\\\",\\n \\\"content\\\": \\\"You are an SEO expert. Here is data from Umami analytics of Pennibnotes.com. Where X is URL and Y is number of visitors. Give me a table summary of this data in markdown format:{{ $('Parse Umami data').item.json.urlString }}.\\\"\\n }\\n ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"WY7UkF14ksPKq3S8\",\n          \"name\": \"Header Auth account 2\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ea4bb37f-96d9-41b8-bf46-fb09865a6e0f\",\n      \"name\": \"Get page data from Umami\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1380,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://umami.rumjahn.synology.me/api/websites/f375d28c-1949-4597-8871-f1b942e3aa24/metrics?startAt={{Date.now() - (7 * 24 * 60 * 60 * 1000)}}&endAt={{Date.now()}}&type=url&tz=America/Los_Angeles\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"FKsKXvQUlaX5qt9n\",\n          \"name\": \"Header Auth account 3\"\n        }\n      },\n      \"typeVersion\": 4\n    },\n    {\n      \"id\": \"d982606b-49c8-4d5b-ba79-bd0fdd2600b6\",\n      \"name\": \"Parse Umami data1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1560,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get input data\\nconst data = $input.all();\\n\\n// Create URL-encoded string from the data\\nconst encodedData = encodeURIComponent(JSON.stringify(data));\\n\\n// Return the encoded data\\nreturn {\\n json: {\\n thisWeek: encodedData\\n }\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f3734045-1318-4234-a3ac-61b766124609\",\n      \"name\": \"Get page view data from Umami\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1760,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://umami.rumjahn.synology.me/api/websites/f375d28c-1949-4597-8871-f1b942e3aa24/metrics?startAt={{Date.now() - (14 * 24 * 60 * 60 * 1000)}}&endAt={{Date.now() - (7 * 24 * 60 * 60 * 1000)}}&type=url&tz=America/Los_Angeles\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"FKsKXvQUlaX5qt9n\",\n          \"name\": \"Header Auth account 3\"\n        }\n      },\n      \"typeVersion\": 4\n    },\n    {\n      \"id\": \"a0153ab0-3eaf-4f97-a2dc-ab63d45a9187\",\n      \"name\": \"Parse Umami\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1920,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get input data\\nconst data = $input.all();\\n\\n// Create URL-encoded string from the data\\nconst encodedData = encodeURIComponent(JSON.stringify(data));\\n\\n// Return the encoded data\\nreturn {\\n json: {\\n lastweek: encodedData\\n }\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c2d3d396-09fa-4800-b56d-40ed7592cd3c\",\n      \"name\": \"Send data to A.I.1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2180,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"https://openrouter.ai/api/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n \\\"messages\\\": [\\n {\\n \\\"role\\\": \\\"user\\\",\\n \\\"content\\\": \\\"You are an SEO expert. Here is data from Umami analytics of Pennibnotes.com. Where X is URL and Y is number of visitors. Compare the data from this week to last week. Present the data in a table using markdown and offer 5 improvement suggestions. This week:{{ $('Parse Umami data1').first().json.thisWeek }} Lastweek:{{ $json.lastweek }}\\\"\\n }\\n ]\\n}\\n\\n\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"WY7UkF14ksPKq3S8\",\n          \"name\": \"Header Auth account 2\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ce58a556-c05a-4395-88b0-3edecbad80e5\",\n      \"name\": \"Save data to Baserow\",\n      \"type\": \"n8n-nodes-base.baserow\",\n      \"position\": [\n        2520,\n        260\n      ],\n      \"parameters\": {\n        \"tableId\": 607,\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": 5870,\n              \"fieldValue\": \"={{ $json.choices[0].message.content }}\"\n            },\n            {\n              \"fieldId\": 5869,\n              \"fieldValue\": \"={{ $('Send data to A.I.').first().json.choices[0].message.content }}\"\n            },\n            {\n              \"fieldId\": 5868,\n              \"fieldValue\": \"={{ DateTime.now().toFormat('yyyy-MM-dd') }}\"\n            },\n            {\n              \"fieldId\": 5871,\n              \"fieldValue\": \"Name of your blog\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"databaseId\": 121\n      },\n      \"credentials\": {\n        \"baserowApi\": {\n          \"id\": \"8w0zXhycIfCAgja3\",\n          \"name\": \"Baserow account\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e28e067d-9245-4879-9321-4d21925f951e\",\n  \"connections\": {\n    \"Parse Umami\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send data to A.I.1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Umami data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send data to A.I.\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get view stats from Umami\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Umami data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get page view data from Umami\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send data to A.I.\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get page data from Umami\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send data to A.I.1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save data to Baserow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get page data from Umami\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Umami data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get view stats from Umami\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Umami data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get page view data from Umami\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Umami\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\u2018Test workflow\\u2019\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get view stats from Umami\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.baserow"
    ],
    "trigger": "schedule trigger"
  }
}