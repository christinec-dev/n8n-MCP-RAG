{
  "source": "1642_Splitout_Code_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"SHgOqN3ednIo5gNu\",\n  \"meta\": {\n    \"instanceId\": \"5fdeff34cb31eeba72e9ea7f1100a8cb9dfce8edcd1fd736c5a33060890e9b77\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Find Top Keywords\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"386c7972-34c2-4f51-9329-dee7f6a7511b\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -3440,\n        760\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ebf40fd-acfd-4424-99c9-95ddaac74de3\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -3440,\n        1040\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"0 */4 * * *\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a24af92b-849d-48ee-aedd-6c7e75d9c902\",\n      \"name\": \"Gen Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -3160,\n        940\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get today's date\\nconst today = new Date();\\n\\n// Subtract one day to get the previous day\\nconst yesterday = new Date(today);\\nyesterday.setDate(today.getDate() - 1);\\n\\n// Format the date as yyyy-mm-dd\\nconst year = yesterday.getFullYear();\\nconst month = String(yesterday.getMonth() + 1).padStart(2, '0'); // Month is zero-indexed\\nconst day = String(yesterday.getDate()).padStart(2, '0');\\n\\nconst formattedDate = `${year}-${month}-${day}`;\\n\\n// Set the formatted date to be used in a later node\\nreturn [{ json: { previousDay: formattedDate } }];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f0807e09-1f8f-45ba-a6d3-d14ee3f96a9f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3540,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 780,\n        \"content\": \"## Create time for yesterday and today. This will be used to gather and search for news articles within a specific range.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c97b391b-1da1-4c62-9394-e83a49dae788\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3020,\n        600\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 280,\n        \"height\": 780,\n        \"content\": \"## Grab a list of base keywords from NocoDB\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"21e89f1c-7101-490a-89aa-a5a52e10d88a\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2740,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 780,\n        \"content\": \"## Generate YouTube and Google Keywords from base keywords\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3b6e8b0e-dfdc-41d0-a387-00872c92faa1\",\n      \"name\": \"NocoDB\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -2940,\n        940\n      ],\n      \"parameters\": {\n        \"table\": \"mztryza8davdl48\",\n        \"options\": {\n          \"fields\": [\n            \"keyword\"\n          ]\n        },\n        \"operation\": \"getAll\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"returnAll\": true,\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"fef9283e-886a-486b-a51f-0f459f4b18e0\",\n      \"name\": \"Second Order Google Autocomplete Keywords\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2620,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"input_keyword\",\n              \"value\": \"={{ $('NocoDB').item.json.keyword }}\"\n            },\n            {\n              \"name\": \"input_country\",\n              \"value\": \"US\"\n            },\n            {\n              \"name\": \"use_proxy\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"output\",\n              \"value\": \"toolbar\"\n            },\n            {\n              \"name\": \"spell\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"hl\",\n              \"value\": \"en\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fad88d1e-a14e-4cc1-9ac1-dcc6126355c4\",\n      \"name\": \"Google Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2020,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": false \\n    }\\n]\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"7k7huetjBCcDO7uR\",\n          \"name\": \"Data for SEO Basic Auth\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"dac54baa-6166-4fb6-a705-a45a91b993ed\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2360,\n        600\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 500,\n        \"height\": 780,\n        \"content\": \"## Query YouTube and Google Keyword search volume.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"753401aa-c78e-4dd1-b47f-b774bed8a6ce\",\n      \"name\": \"Split Out Google Search\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -1740,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"tasks[0].result\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"12f53197-a03e-4862-a6cf-d4feffd49b29\",\n      \"name\": \"YouTube Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2020,\n        1120\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": true,\\n        \\\"sort_by\\\": \\\"search_volume\\\"\\n    }\\n]\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"7k7huetjBCcDO7uR\",\n          \"name\": \"Data for SEO Basic Auth\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"d0173c03-c803-4c64-9c87-48a47952085f\",\n      \"name\": \"Second Order YouTube Autocomplete Keywords\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2620,\n        1120\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"input_keyword\",\n              \"value\": \"={{ $json.keyword }}\"\n            },\n            {\n              \"name\": \"input_country\",\n              \"value\": \"US\"\n            },\n            {\n              \"name\": \"use_proxy\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"output\",\n              \"value\": \"toolbar\"\n            },\n            {\n              \"name\": \"spell\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"hl\",\n              \"value\": \"en\"\n            },\n            {\n              \"name\": \"ds\",\n              \"value\": \"yt\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"dfa987d0-c18c-44c4-9796-942404f49630\",\n      \"name\": \"Split Out YT Search\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -1740,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"tasks[0].result\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"29196a5b-c46e-46f7-99ff-781a0d97c551\",\n      \"name\": \"Google Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -1520,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.monthly_searches }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"45bca7c3-eac2-44e8-9993-b53200174003\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.cpc }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6b11b8e2-d6fb-45d7-817e-3e1038068696\",\n      \"name\": \"YT Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -1520,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.monthly_searches }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"45bca7c3-eac2-44e8-9993-b53200174003\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.cpc }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6d52836b-ce37-46c0-aa4b-7c2b917b9f1d\",\n      \"name\": \"Add Second Tier YT Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        980\n      ],\n      \"parameters\": {\n        \"table\": \"m8bp2fnwtqsd2m7\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_volume }}\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"d4a72c2b-8c16-4f3e-80ad-1564ec8b33d4\",\n      \"name\": \"Add Second Tier G Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        400\n      ],\n      \"parameters\": {\n        \"table\": \"mjmbcomto18scyi\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_volume }}\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1fdaf0fc-5c11-406f-93fb-b4a7fd3b6eed\",\n      \"name\": \"Format G Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -240,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over Google Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over Google Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier G Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier G Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"7d654cf7-1223-4f10-8026-997f5418402e\",\n      \"name\": \"Format YT Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -220,\n        980\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over YT Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over YT Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier YT Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier YT Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"67848762-a140-4c63-b8ca-e20331135741\",\n      \"name\": \"Bulk Import G Monthly Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        0,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1000\n            }\n          }\n        },\n        \"jsonBody\": \"={{ $json.batch }}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        },\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"377b5470-9d9f-42e5-9528-fbf9fd3a1d77\",\n      \"name\": \"Bulk Import YT Monthly Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        40,\n        980\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1000\n            }\n          }\n        },\n        \"jsonBody\": \"={{ $json.batch }}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        },\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"6939afbf-b463-44fb-ab0b-45cbe81648eb\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1860,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 540,\n        \"height\": 780,\n        \"content\": \"## Process and filter Keywords for monthly traffic and CPC\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6fdbd7c3-75ca-4ed4-a5aa-3718bee0786f\",\n      \"name\": \"Is Google Keyword Available\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -680,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.pageInfo.totalRows }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"f10d1313-fdfb-4f58-921d-65f307afab4e\",\n      \"name\": \"Is YT Keyword Avaliable\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -700,\n        1260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.pageInfo.totalRows }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"c6c26129-fce0-4d98-a72a-662dcbc06ae0\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1320,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1560,\n        \"height\": 1280,\n        \"content\": \"## Add or update YouTube or Google Tables in NocoDB\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3c0ed20-f696-4ca6-a6fb-872cab8fbba5\",\n      \"name\": \"Check for Google Keyword\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -900,\n        640\n      ],\n      \"parameters\": {\n        \"url\": \"=http://192.168.1.186:8080/api/v2/tables/mjmbcomto18scyi/records?where=(keyword,eq,{{ $json.keyword }})\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1,\n              \"batchInterval\": 1\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"bb7cae83-8ff0-45d0-abca-d8d99efcfead\",\n      \"name\": \"Check for YT Keyword\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -940,\n        1260\n      ],\n      \"parameters\": {\n        \"url\": \"=http://192.168.1.186:8080/api/v2/tables/m8bp2fnwtqsd2m7/records/?where=(keyword,eq,{{ $json.keyword }})\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e04d2f1c-45b6-4994-91a7-dc9f54a3fba8\",\n      \"name\": \"Loop Over YT Keywords\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1180,\n        1240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1000\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"452a67b4-d30c-4732-abc4-8b3513ec31f6\",\n      \"name\": \"Update Second Tier G Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -220,\n        660\n      ],\n      \"parameters\": {\n        \"table\": \"mjmbcomto18scyi\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_volume }}\"\n            },\n            {\n              \"fieldName\": \"id\",\n              \"fieldValue\": \"={{ $json.list[0].Id }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"e50cc116-3b5b-4908-b0b6-8781360cb5f2\",\n      \"name\": \"Update Second Tier YT Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        1280\n      ],\n      \"parameters\": {\n        \"table\": \"m8bp2fnwtqsd2m7\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_volume }}\"\n            },\n            {\n              \"fieldName\": \"id\",\n              \"fieldValue\": \"={{ $json.list[0].Id }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"4ef57b89-913c-4e0e-8e60-675807ad6a5d\",\n      \"name\": \"Loop Over Google Keywords\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1160,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1000\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"94fbe48b-22bf-4a15-9ef0-423b1dab586a\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3540,\n        1560\n      ],\n      \"parameters\": {\n        \"width\": 1060,\n        \"height\": 380,\n        \"content\": \"## Setup Instuctions: \\n### Required: NocoDB, N8N, [DataforSEO Account *aff*](https://app.dataforseo.com/?aff=184401), and [Social Flood Docker Instance](https://github.com/rainmanjam/social-flood)\\n### Tables for NocoDB\\n-- Base Keyword Search (Keyword)\\n-- Second Order Google Keywords( keyword, location_code, language_code, search_partners, competition, competition_index, search_volume, cpc, low_top_of_page, high_top_of_page)\\n-- Second Order YouTube Keywords( keyword, location_code, language_code, search_partners, competition, competition_index, search_volume, cpc, low_top_of_page, high_top_of_page)\\n-- Search Volume( unique_id, year, month, search_volume, youtube_keyword_id, google_keyword_id)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8429c63d-09e7-47ac-a11b-e5132d5ac832\",\n      \"name\": \"Combine G Keywords and Filter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2300,\n        800\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5aa39111-c1c1-440e-b0e8-ba5c54909a0d\",\n      \"name\": \"Combine YT Keywords and Filter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2300,\n        1120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"2712313f-4b1e-4f5b-8c6b-1f456896d981\",\n  \"connections\": {\n    \"NocoDB\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Second Order YouTube Autocomplete Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Second Order Google Autocomplete Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gen Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NocoDB\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YT Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format G Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Bulk Import G Monthly Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format YT Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Bulk Import YT Monthly Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gen Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out YT Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YT Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for YT Keyword\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is YT Keyword Avaliable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Google Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over YT Keywords\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Check for YT Keyword\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YouTube Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out YT Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is YT Keyword Avaliable\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Second Tier YT Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Update Second Tier YT Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Google Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for Google Keyword\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is Google Keyword Available\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Google Keywords\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Check for Google Keyword\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is Google Keyword Available\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Second Tier G Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Update Second Tier G Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine G Keywords and Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Second Tier G Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format G Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine YT Keywords and Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YouTube Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Second Tier YT Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format YT Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Second Tier G Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gen Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Second Tier YT Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bulk Import G Monthly Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bulk Import YT Monthly Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Second Order Google Autocomplete Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine G Keywords and Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Second Order YouTube Autocomplete Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine YT Keywords and Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.nocoDb",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.nocoDb",
      "n8n-nodes-base.nocoDb",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.nocoDb",
      "n8n-nodes-base.nocoDb",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code"
    ],
    "trigger": "schedule trigger"
  }
}