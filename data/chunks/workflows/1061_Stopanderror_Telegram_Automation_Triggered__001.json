{
  "source": "1061_Stopanderror_Telegram_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"5Ycrm1MuK8htwd96\",\n  \"meta\": {\n    \"instanceId\": \"e5595d8cd58f3a24b5a8cf05dd852846c05423873db868a2b7d01a778210c45a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Telegram RAG pdf\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"9fbce801-8c42-43a4-bc70-d93042d68b2c\",\n      \"name\": \"Telegram Trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -220,\n        240\n      ],\n      \"webhookId\": \"b178f034-9997-4832-9bb4-a43c3015506e\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1bfc1fbd-86b1-4a8a-9301-fe54497f5acd\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        720,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d5ad7851-ed40-4b3a-b0d5-aeaf04362f1c\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        860,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"dataType\": \"binary\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fed803d0-49a2-4b82-8f20-a02a10caa027\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        940,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkSize\": 3000,\n        \"chunkOverlap\": 200\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ab60f36f-fada-4812-8dbd-441ad372cb80\",\n      \"name\": \"Stop and Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        220,\n        840\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"An error occurred\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c87f1db3-7cc9-4063-9895-4b4d68ea53a1\",\n      \"name\": \"Question and Answer Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\",\n      \"position\": [\n        -280,\n        500\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.message.text }}\\nSearch the database with the retriever for information for the answer\",\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"c9bc4c80-8e57-48bc-a405-131ed7348c1d\",\n      \"name\": \"Vector Store Retriever\",\n      \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\",\n      \"position\": [\n        -240,\n        680\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0217056f-2b71-4308-adf1-19dcd4d2cc11\",\n      \"name\": \"Pinecone Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\",\n      \"position\": [\n        -280,\n        860\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"pineconeIndex\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"telegram\",\n          \"cachedResultName\": \"telegram\"\n        }\n      },\n      \"credentials\": {\n        \"pineconeApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"693f9026-f47f-48dc-8e5d-e8b832a37235\",\n      \"name\": \"Groq Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGroq\",\n      \"position\": [\n        -380,\n        660\n      ],\n      \"parameters\": {\n        \"model\": \"llama-3.1-70b-versatile\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"groqApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c7acf014-138f-4be7-b569-c309bb10e50d\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        73.04879287725316\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1139.5159692915001,\n        \"height\": 873.6068151028411,\n        \"content\": \"# Load data into database\\nFetch file from **Telegram**, split it into chunks and insert into **Pinecone** index, a message from **Telegram** will be sent just to let the user know that the process finished\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dd3b9d8b-5771-4a09-8c1b-794cb8737d5d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -878.769,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1344.7918019808176,\n        \"height\": 806.8716167324012,\n        \"content\": \"# Chat with Database\\n\\n1. **Receive** the incoming chat message.\\n2. **Retrieve** relevant chunks from the _vector store_.\\n3. **Pass** these chunks to the model.\\n\\nThe model will use the retrieved information to **formulate a precise response**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9aaf575a-5e40-407c-951c-10b1d16e5d3c\",\n      \"name\": \"Check If is a document\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        220,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"8839993b-9fe7-4e1e-a1cc-fe5de6b0bb62\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.message.document }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c1edb6bf-ba95-4a5f-9626-add673274086\",\n      \"name\": \"Change to application/pdf\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        700,\n        220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Função para modificar os metadados do arquivo binário\\nfunction modifyBinaryMetadata(items) {\\n  for (const item of items) {\\n    if (item.binary && item.binary.data) {\\n      // Modifica o tipo MIME\\n      item.binary.data.mimeType = 'application/pdf';\\n      \\n      // Garante que o nome do arquivo termine com .pdf\\n      if (!item.binary.data.fileName.toLowerCase().endsWith('.pdf')) {\\n        item.binary.data.fileName += '.pdf';\\n      }\\n      \\n      // Atualiza o contentType no fileType (se existir)\\n      if (item.binary.data.fileType) {\\n        item.binary.data.fileType.contentType = 'application/pdf';\\n      }\\n    }\\n  }\\n  return items;\\n}\\n\\n// Aplica a modificação e retorna os itens atualizados\\nreturn modifyBinaryMetadata($input.all());\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ea4d4e74-8954-47f0-a3a0-662d47ea2298\",\n      \"name\": \"Telegram get File\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        520,\n        220\n      ],\n      \"parameters\": {\n        \"fileId\": \"={{ $json.message.document.file_id }}\",\n        \"resource\": \"file\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"cf548bee-d5d5-4f1a-a059-932ea163e155\",\n      \"name\": \"Embeddings\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        -100,\n        1080\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e3bd4759-80cc-42bb-ba53-f9e88e9ba916\",\n      \"name\": \"Telegram Response\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        160,\n        560\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.response.text }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e478df48-9e6d-4a84-89be-beb569914ae3\",\n      \"name\": \"Telegram Response about Database\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1400,\n        220\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.metadata.pdf.totalPages }} pages saved on Pinecone\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5be7a321-1be6-4173-83de-3d569666718d\",\n      \"name\": \"Stop and Error1\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        1400,\n        580\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"An error occurred.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aae26861-f34d-4b59-bd99-3662fbd6676c\",\n      \"name\": \"Pinecone Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\",\n      \"position\": [\n        880,\n        220\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"pineconeIndex\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"telegram\",\n          \"cachedResultName\": \"telegram\"\n        }\n      },\n      \"credentials\": {\n        \"pineconeApi\": {\n          \"id\": \"\",\n          \"name\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"312fb807-4225-4630-ab32-aa12fe07c127\",\n      \"name\": \"Limit to 1\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        1220,\n        220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"timezone\": \"America/Sao_Paulo\",\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true\n  },\n  \"versionId\": \"03612d23-6630-4ec6-8738-1dae593c8d23\",\n  \"connections\": {\n    \"Embeddings\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limit to 1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram Response about Database\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Groq Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check If is a document\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Response\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Stop and Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram get File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Change to application/pdf\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Pinecone Vector Store\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit to 1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check If is a document\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram get File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Pinecone Vector Store1\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"Vector Store Retriever\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Vector Store Retriever\": {\n      \"ai_retriever\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_retriever\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Change to application/pdf\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Question and Answer Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Response about Database\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Stop and Error1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.telegramTrigger",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "n8n-nodes-base.stopAndError",
      "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "@n8n/n8n-nodes-langchain.lmChatGroq",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegram",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.stopAndError",
      "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "n8n-nodes-base.limit"
    ],
    "trigger": "telegram trigger"
  }
}