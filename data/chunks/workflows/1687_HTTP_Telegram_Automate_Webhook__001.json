{
  "source": "1687_HTTP_Telegram_Automate_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"ax8PJlp1UDb6EGFt\",\n  \"meta\": {\n    \"instanceId\": \"fb924c73af8f703905bc09c9ee8076f48c17b596ed05b18c0ff86915ef8a7c4a\"\n  },\n  \"name\": \"Telegram AI Langchain bot\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"e275f31f-6a5f-4444-8bf7-6c003a8e53df\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1100,\n        600\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4-1106-preview\",\n        \"options\": {\n          \"temperature\": 0.7,\n          \"frequencyPenalty\": 0.2\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"63\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f25a6666-ff23-4372-afd0-4920a99aab6a\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        1220,\n        600\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=chat_with_{{ $('Listen for incoming events').first().json.message.chat.id }}\",\n        \"contextWindowLength\": 10\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"96faef5d-0349-47fe-a7cf-150953490e90\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1500,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output }}\",\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"70\",\n          \"name\": \"Telegram sdfsdfsdfsdfsfd_bot\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5ad43039-aaa6-43cd-9b0f-1d02f4d9c4ff\",\n      \"name\": \"Correct errors\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1700,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('AI Agent').item.json.output.replace(/&/g, \\\"&amp;\\\").replace(/>/g, \\\"&gt;\\\").replace(/</g, \\\"&lt;\\\").replace(/\\\"/g, \\\"&quot;\\\") }}\",\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"70\",\n          \"name\": \"Telegram sdfsdfsdfsdfsfd_bot\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"0349a250-966a-4064-970a-8bcfba1647ad\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        940,\n        900\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"69a45c1f-838f-49ce-9b89-75db6a8b876f\",\n      \"name\": \"Listen for incoming events\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        940,\n        380\n      ],\n      \"webhookId\": \"322dce18-f93e-4f86-b9b1-3305519b7834\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"70\",\n          \"name\": \"Telegram sdfsdfsdfsdfsfd_bot\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f5d5f25-9870-40d6-ad42-52750e62de63\",\n      \"name\": \"Send back an image\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1300,\n        900\n      ],\n      \"parameters\": {\n        \"file\": \"={{ $json.data[0].url }}\",\n        \"chatId\": \"={{ $('Execute Workflow Trigger').first().json.chat_id }}\",\n        \"operation\": \"sendPhoto\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"70\",\n          \"name\": \"Telegram sdfsdfsdfsdfsfd_bot\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"50b43dbf-39e3-4d00-8e47-01e8c193cd1a\",\n      \"name\": \"add response field\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1480,\n        900\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"response\",\n              \"stringValue\": \"Success\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"171bee83-c8e1-4af3-9d1c-12cb6ede4943\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        840\n      ],\n      \"parameters\": {\n        \"width\": 752.0361990950231,\n        \"height\": 247.42081447963798,\n        \"content\": \"## Generate an image with Dall-E 3 and send it via Telegram\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4d81d201-70bf-4c80-9689-4b65851ad770\",\n      \"name\": \"Dall-E 3 Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        1360,\n        600\n      ],\n      \"parameters\": {\n        \"name\": \"Draw_Dalle_image\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"chat_id\",\n              \"stringValue\": \"={{ $('Listen for incoming events').first().json.message.chat.id }}\"\n            }\n          ]\n        },\n        \"workflowId\": \"={{ $workflow.id }}\",\n        \"description\": \"Call this tool to request a Dall-E 3 model, when the user asks to draw something. Please send the user request for an image as an inline query string.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"39d532d3-8c96-4722-9cb0-cad92ff39e94\",\n      \"name\": \"Generate image in Dall-E 3\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1120,\n        900\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/images/generations\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"model\",\n              \"value\": \"dall-e-3\"\n            },\n            {\n              \"name\": \"prompt\",\n              \"value\": \"={{ $json.query }}\"\n            },\n            {\n              \"name\": \"n\",\n              \"value\": 1\n            },\n            {\n              \"name\": \"size\",\n              \"value\": \"1024x1024\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"63\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"e5aa496d-55d3-456b-82bb-fe10a06c7338\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1140,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.message.text }}\",\n        \"options\": {\n          \"humanMessage\": \"TOOLS\\n------\\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\\n\\n{tools}\\n\\n{format_instructions}\\n\\nUSER'S INPUT\\n--------------------\\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\\n\\n{{input}}\",\n          \"systemMessage\": \"=You are a helpful AI assistant. You are chatting with the user named `{{ $json.message.from.first_name }}`. Today is {{ DateTime.fromISO($now).toLocaleString(DateTime.DATETIME_FULL) }}\\n\\nFrom time to time call a user by name (if the user name is provided). In your reply, always send a message in Telegram-supported HTML format. Here are the formatting instructions:\\n1. The following tags are currently supported:\\n<b>bold</b>, <strong>bold</strong>\\n<i>italic</i>, <em>italic</em>\\n<u>underline</u>, <ins>underline</ins>\\n<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>\\n<span class=\\\"tg-spoiler\\\">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>\\n<b>bold <i>italic bold <s>italic bold strikethrough <span class=\\\"tg-spoiler\\\">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>\\n<a href=\\\"http://www.example.com/\\\">inline URL</a>\\n<code>inline fixed-width code</code>\\n<pre>pre-formatted fixed-width code block</pre>\\n2. Any code that you send should be wrapped in these tags: <pre><code class=\\\"language-python\\\">pre-formatted fixed-width code block written in the Python programming language</code></pre>\\nOther programming languages are supported as well.\\n3. All <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with &gt; and & with &amp;)\\n4. If the user sends you a message starting with / sign, it means this is a Telegram bot command. For example, all users send /start command as their first message. Try to figure out what these commands mean and reply accodringly\\n\"\n        }\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"saveDataSuccessExecution\": \"all\"\n  },\n  \"versionId\": \"3e9c27eb-1d2f-40bf-b284-4f6a1bece30c\",\n  \"connections\": {\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Correct errors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Dall-E 3 Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send back an image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"add response field\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate image in Dall-E 3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate image in Dall-E 3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send back an image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listen for incoming events\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.telegramTrigger",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.agent"
    ],
    "trigger": "execute workflow trigger"
  }
}