{
  "source": "1724_Code_Schedule_Automation_Scheduled.json",
  "index": 1,
  "content": "{\n  \"id\": \"VLRbAr4OrtnHUU2l\",\n  \"name\": \"Todoist Weekly Review Template\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"45351dbb-6c0c-4442-a350-35d966a26fa1\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        0,\n        180\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9644a07e-0b97-4b48-846c-821f620128cc\",\n      \"name\": \"Get completed tasks via Todoist API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/sync/v9/completed/get_all\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"since\",\n              \"value\": \"={{ $now.minus(7, 'days') }}\"\n            },\n            {\n              \"name\": \"until\",\n              \"value\": \"={{ $now }}\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"todoistApi\"\n      },\n      \"credentials\": {\n        \"todoistApi\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"94f40824-43ff-45ae-adfd-b18a5903cba1\",\n      \"name\": \"Optional: Ignore specific projects\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        440,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// maintain this array with ignored Todoist project_id's\\n// empty \\\"[]\\\" it when you don't want to ignore any\\nconst ignoredProjects = ['2335544024'];\\n\\n// Remove ignored projects\\nconst items = $input.all()[0].json.items;\\nvar newItems = [];\\nfor(j = 0; j < items.length; j++) {\\n  if(!ignoredProjects.includes(items[j].project_id)) {\\n    newItems.push(items[j]);\\n  }\\n}\\n\\nreturn newItems;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c50b00d6-4e9c-43e5-b6b8-ee0caac78c68\",\n      \"name\": \"Format the email body\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        660,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all();\\n\\n// Group items by day\\nconst grouped = items.reduce((acc, item) => {\\n  const date = new Date(item.json.completed_at).toISOString().split('T')[0];\\n  acc[date] = acc[date] || [];\\n  acc[date].push(item.json.content);\\n  return acc;\\n}, {});\\n\\n// Format the grouped data into an HTML string for the email\\nlet emailBody = \\\"<h1>Completed Items</h1>\\\";\\nfor (const [date, contents] of Object.entries(grouped)) {\\n  emailBody += `<h2>${date}</h2><ul>`;\\n  contents.forEach(content => {\\n    emailBody += `<li>${content}</li>`;\\n  });\\n  emailBody += `</ul>`;\\n}\\n\\nreturn [{ json: { emailBody } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"42b38a9b-2dbc-46f5-895c-f8597eb48bf1\",\n      \"name\": \"Every Friday afternoon\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\",\n              \"triggerAtDay\": [\n                5\n              ],\n              \"triggerAtHour\": 15\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"adece42d-d84a-41c8-8269-35ba08879e52\",\n      \"name\": \"Send Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        860,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"subject\": \"Todoist Weekly Review\",\n        \"emailFormat\": \"={{ $('Format the email body').item.json.emailBody }}\"\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"fcf19ca1-c2bc-4832-8cfe-184424484f60\",\n  \"connections\": {\n    \"Format the email body\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every Friday afternoon\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get completed tasks via Todoist API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get completed tasks via Todoist API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Optional: Ignore specific projects\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format the email body\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get completed tasks via Todoist API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Optional: Ignore specific projects\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.emailSend"
    ],
    "trigger": null
  }
}