{
  "source": "1532_Manual_Wait_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"KWFLpcJytH7qjheD\",\n  \"meta\": {\n    \"instanceId\": \"1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7\"\n  },\n  \"name\": \"(Not published) Three-View Orthographic Projection to Dynamic Video Conversion\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"442e12af-531d-4000-9e74-d9bfaa3515ca\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1960,\n        -160\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"39c46540-7dee-4237-921e-3b6bd9821302\",\n      \"name\": \"Generate Kling Video\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -400,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/api/v1/task\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"kling\\\",\\n    \\\"task_type\\\": \\\"video_generation\\\",\\n    \\\"input\\\": {\\n        \\\"version\\\": \\\"1.6\\\",\\n        \\\"mode\\\": \\\"pro\\\",\\n        \\\"image_url\\\": \\\"{{ $('Get Image URL of Front Image').item.json.image_url }}\\\",\\n        \\\"image_tail_url\\\": \\\"{{ $json.image_url }}\\\",\\n        \\\"duration\\\":5,\\n        \\\"prompt\\\": \\\"The character rotates smoothly, stay original facial expression. Apply anticlockwise rotation\\\"\\n    }\\n} \",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"={{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"cfc726ee-e6f2-4016-a4fe-7123a4520fda\",\n      \"name\": \"Get Kling Video\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"72858adea87ad16865d5b0a24c3d9b9f58a6e7b1a8a8a8a0d6b81a9f3a9812f3\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"90d1cc4f-3d74-4a2a-9b02-3255ec9fc553\",\n      \"name\": \"Verify Task Status\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -40,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"f36fa981-22e0-46db-af8c-c2ac55242c27\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.data.status }}\",\n              \"rightValue\": \"completed\"\n            },\n            {\n              \"id\": \"637ea756-1ad9-434c-b6b2-b100ee4c3cad\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6931c1b2-c4f4-47d6-9ff4-e6019e465c3e\",\n      \"name\": \"Get Final Video\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        260,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Process the entire response\\nreturn {\\n  video_url: $input.all()[0].json.data.output.video_url,\\n  watermark_free_url: $input.all()[0].json.data.output.works[0].video.resource_without_watermark\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"adae02a4-dedc-4415-9409-88193090e2dc\",\n      \"name\": \"GPT-4o Generator: Front View\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1560,\n        20\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Capture front view of the image, then split them into two separate images for me.\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"fsJeCNd9BkJ1CIrt\",\n          \"name\": \"Header Auth account 2\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"63320b08-62bc-4faf-a3ff-4069785c41f5\",\n      \"name\": \"GPT-4o Generator: Side View\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1000,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $('Basic Params').item.json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Generate side view of the image\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8fd1fb74-a149-4af6-9da5-e0dc3daa91c9\",\n      \"name\": \"Get Image URL of Front Image\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1380,\n        20\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); \\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b5b41a20-aba1-4fbb-aaf9-47d18a38a727\",\n      \"name\": \"Get Image URL of Side Image\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -800,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\n// 反向遍历 chunks (从最新数据开始检查)\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); // 去掉 \\\"data: \\\" 前缀\\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n        // 检查是否包含图片标记（Markdown 图片语法）\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6428385c-19ac-478c-af87-904de1e35b61\",\n      \"name\": \"Verify Generation Status of Front View\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1160,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.finish_reason }}\",\n              \"rightValue\": \"not_found\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"395dbc5c-89e7-4eb7-a726-617250ebd02f\",\n      \"name\": \"Verify Generation Status of Side View\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -600,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.finish_reason }}\",\n              \"rightValue\": \"not_found\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"7287b4a9-8309-4984-8328-ecc569d4aa00\",\n      \"name\": \"Wait for Video Generation\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -20,\n        240\n      ],\n      \"webhookId\": \"c7b2590d-96a3-4c7c-8821-3023fead254b\",\n      \"parameters\": {\n        \"amount\": 20\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9ed98c97-6a73-4f74-9cbd-5e19179aba9d\",\n      \"name\": \"Basic Params\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1760,\n        -160\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"{\\n  \\\"x-api-key\\\":\\\"\\\",\\n  \\\"image_url\\\": \\\"\\\"\\n}\\n\"\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"71081f7e-7805-497b-9167-eba0b3a7c0e4\",\n  \"connections\": {\n    \"Basic Params\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Kling Video\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Task Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Task Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Final Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait for Video Generation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Kling Video\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait for Video Generation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GPT-4o Generator: Side View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image URL of Side Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image URL of Side Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Generation Status of Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GPT-4o Generator: Front View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image URL of Front Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image URL of Front Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Generation Status of Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic Params\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Generation Status of Side View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Generate Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Generation Status of Front View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"GPT-4o Generator: Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.if",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}