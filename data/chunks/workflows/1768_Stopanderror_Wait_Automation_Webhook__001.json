{
  "source": "1768_Stopanderror_Wait_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"Y5URlIlbX4HDzWKA\",\n  \"meta\": {\n    \"instanceId\": \"6ae0aa8b6c9099f1f8ed1265281802eab47aaf5b2845f317791e4ac7ee5b7279\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"airflow dag_run\",\n  \"tags\": [\n    {\n      \"id\": \"YSelDQ3zfWB0LeVn\",\n      \"name\": \"airflow\",\n      \"createdAt\": \"2025-02-25T04:17:21.943Z\",\n      \"updatedAt\": \"2025-02-25T04:17:21.943Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"0d4457ef-7a88-4755-8bd2-b0e8148f86f4\",\n      \"name\": \"Airflow: dag_run\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        380,\n        -40\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('airflow-api').item.json.prefix }}/api/v1/dags/{{ $('in data').item.json.dag_id }}/dagRuns\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"conf\\\": {{ $('in data').item.json.conf }}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"vTR4WWA7czRn2ULn\",\n          \"name\": \"Airflow\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"acf477a0-aad5-402a-a5a0-543f3e277333\",\n      \"name\": \"Airflow: dag_run - state\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        840,\n        60\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('airflow-api').item.json.prefix }}/api/v1/dags/{{ $('in data').item.json.dag_id }}/dagRuns/{{ $('Airflow: dag_run').item.json.dag_run_id }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"vTR4WWA7czRn2ULn\",\n          \"name\": \"Airflow\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"26982a6f-6281-4140-a05c-ea6f3f2c0cb2\",\n      \"name\": \"count\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1180,\n        40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"try {\\n  $('count').first().json.count += 1\\n  return {count:$('count').first().json.count};\\n}\\ncatch (error) {\\n  return {count:1};\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"613718f6-ba7e-415c-8e07-0123224e1ac6\",\n      \"name\": \"dag run fail\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        1180,\n        400\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"dag run fail\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"66ba0e85-4608-418b-b27b-8cbc50f78319\",\n      \"name\": \"if state == queued\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        520,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"0ae67986-09c0-443d-9262-075bfe94ca2e\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.state }}\",\n              \"rightValue\": \"queued\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"92176e9a-0ea7-48b0-9ca0-ea4ea8442cee\",\n      \"name\": \"dag run wait too long\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        1500,\n        40\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"dag run wait too long\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6a05471f-232e-44d6-9dbb-583400537507\",\n      \"name\": \"Airflow: dag_run - get result\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1180,\n        -140\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('airflow-api').item.json.prefix }}/api/v1/dags/{{ $('in data').item.json.dag_id }}/dagRuns/{{ $('Airflow: dag_run').item.json.dag_run_id }}/taskInstances/{{ $('in data').item.json.task_id }}/xcomEntries/return_value\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"vTR4WWA7czRn2ULn\",\n          \"name\": \"Airflow\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fb2211d5-cef2-4be2-b281-de315aa07093\",\n      \"name\": \"Switch: state\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        980,\n        -40\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"=success\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"4d4ecf8a-c02b-4722-9528-1919cdf9b83e\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"success\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"queued\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"queued\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"running\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"fa5d8524-334a-4ab1-b543-bba75cafd0ec\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"running\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"failed\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"dd853677-c51c-4c06-8680-3c9d1829d6bd\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"failed\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": 3\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"5941496a-a64d-432c-9103-e7bcae4b8d67\",\n      \"name\": \"in data\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        100,\n        -40\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"dag_id\"\n            },\n            {\n              \"name\": \"task_id\"\n            },\n            {\n              \"name\": \"conf\"\n            },\n            {\n              \"name\": \"wait\",\n              \"type\": \"number\"\n            },\n            {\n              \"name\": \"wait_time\",\n              \"type\": \"number\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"e77fed4a-b61a-4126-8be3-43ef8a832cfe\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        700,\n        -40\n      ],\n      \"webhookId\": \"3d164954-2926-4174-afc1-261dfdfa9e46\",\n      \"parameters\": {\n        \"amount\": \"={{ $('in data').item.json.hasOwnProperty('wait') ? $('in data').item.json.wait : 10 }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8ffae842-4400-4667-85bb-50644ef10fc0\",\n      \"name\": \"If count > wait_time\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1320,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"1829d538-5633-4f5c-ad1b-285b084b35ee\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ $json.count }}\",\n              \"rightValue\": \"={{ $('in data').item.json.hasOwnProperty('wait_time') ? $('in data').item.json.wait_time : 12 }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"c49d4a1b-6f25-471b-9c21-d3defb709dda\",\n      \"name\": \"airflow-api\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        240,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"40a5ab5b-dee1-44c4-910a-d6b85af75aed\",\n              \"name\": \"prefix\",\n              \"type\": \"string\",\n              \"value\": \"https://airflow.example.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"in data\": [\n      {\n        \"json\": {\n          \"conf\": \"{\\n  \\\"image\\\": \\\"nginx\\\",\\n  \\\"tag\\\": \\\"latest\\\",\\n  \\\"tag_requested\\\": 1000\\n}\",\n          \"wait\": 10,\n          \"dag_id\": \"image_tag_related\",\n          \"task_id\": \"image_tag_related\",\n          \"wait_time\": 18\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"57fdbcfc-7950-4aff-9ac7-3c2a99a2c8c8\",\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airflow: dag_run - state\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"count\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If count > wait_time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"in data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"airflow-api\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"airflow-api\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airflow: dag_run\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch: state\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airflow: dag_run - get result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"count\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"count\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"dag run fail\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airflow: dag_run\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if state == queued\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if state == queued\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"dag run fail\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If count > wait_time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"dag run wait too long\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airflow: dag_run - state\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch: state\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airflow: dag_run - get result\": {\n      \"main\": [\n        []\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stopAndError",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stopAndError",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}