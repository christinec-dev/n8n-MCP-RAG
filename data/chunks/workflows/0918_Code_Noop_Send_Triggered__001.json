{
  "source": "0918_Code_Noop_Send_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"d73282515b90623d4a8783919a2d772c706425d649e1512792f37ac51e07e4a8\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"62b3c7cb-1993-44f1-8b86-38a34ca1d029\",\n      \"name\": \"Information Extractor\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        -200,\n        500\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.query }}\",\n        \"options\": {},\n        \"schemaType\": \"fromJson\",\n        \"jsonSchemaExample\": \"{\\n  \\\"name\\\": \\\"Information Extractor\\\",\\n  \\\"type\\\": \\\"n8n-nodes-base.informationExtractor\\\",\\n  \\\"parameters\\\": {\\n    \\\"extract\\\": [\\n      {\\n        \\\"name\\\": \\\"items\\\",\\n        \\\"pattern\\\": \\\"(latte|coffee|tea|cappuccino)\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"quantity\\\",\\n        \\\"pattern\\\": \\\"\\\\\\\\d+\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"table\\\",\\n        \\\"pattern\\\": \\\"table number (\\\\\\\\d+)\\\"\\n      }\\n    ]\\n  }\\n}\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"75883f27-af58-4791-9e1a-a70b83e1cead\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -180,\n        740\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"OizdHUANhz9NIHyd\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"aeefdd4b-bf7d-4824-97d8-0afc356fb7d6\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        120,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"8a5dda0c-a567-4305-83a3-68d6fb573dd3\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.output.parameters.extract }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"9e3f8a1b-ccd8-4f4d-91cb-b99cc46f412f\",\n      \"name\": \"Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        840,\n        420\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Item\": \"={{ $json.item }}\",\n            \"Quantity\": \"={{ $json.quantity }}\",\n            \"Table No\": \"={{ $json.table }}\",\n            \"Timestamp\": \"={{ $now }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Timestamp\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Timestamp\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Table No\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Table No\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Item\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Item\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Quantity\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Quantity\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit#gid=0\",\n          \"cachedResultName\": \"Order log\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit?usp=sharing\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"0RSJGMBcFzxY9GkS\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"4cc1818f-1585-42e1-a111-7b55557aebcb\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        380,\n        560\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"# Input from n8n\\ninput_data = items\\n\\n# Get the extracted list\\nextract_data = input_data[0].get('json', {}).get('output', {}).get('parameters', {}).get('extract', [])\\n\\n# Prepare variables\\norder_items = []\\ntable_number = None\\n\\n# Separate entries by type\\nitems_list = []\\nquantities = []\\n\\n# Parse all entries\\nfor entry in extract_data:\\n    if entry['name'] == 'table number':\\n        table_number = entry['pattern']\\n    elif entry['name'] == 'item':\\n        items_list.append(entry['pattern'])\\n    elif entry['name'] == 'quantity':\\n        quantities.append(int(entry['pattern']))\\n\\n# Pair items and quantities\\nfor i in range(len(items_list)):\\n    item_data = {\\n        'item': items_list[i],\\n        'quantity': quantities[i] if i < len(quantities) else None,\\n        'table': table_number\\n    }\\n    order_items.append(item_data)\\n\\n# Set final output\\noutput = [{'json': item} for item in order_items]\\n\\nreturn output\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a92d2745-148b-4e2a-b8f7-82d3993ff34f\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        620,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"aea89e6c-37a9-4859-adc8-b7e449701503\",\n      \"name\": \"Replace Me\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        800,\n        660\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b31dba52-b27e-4267-be32-a7730b4d08a8\",\n      \"name\": \"No Operation, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        440,\n        400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7f9a381-6bc2-44d0-81ac-6e0fbe77d70a\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 340,\n        \"height\": 680,\n        \"content\": \"## JSON PARSER\\n\\n1.converts the textual data final order like\\nitem name \\nquantity \\nand table name in a json.\\n\\n2.if the data doesn't include the above it returns null.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"acc7a528-f767-4576-b08d-6fc386f57648\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 460,\n        \"height\": 680,\n        \"content\": \"## Refine/Split the jsons into multiple items\\n\\nIf the data from previous item is not null the custom code block splits the data into multiple json items in a list.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"857a3102-f5e1-4db5-afb4-154544414701\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 440,\n        \"height\": 680,\n        \"content\": \"## Send each item as a record in Google sheet\\n\\n\\n**Each item is looped over and produce a batch of 1 item and appended as row in sheet with timestamp.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a1ff2b0f-0b48-4ea2-8121-4e2d72197ef7\",\n      \"name\": \"Triggered on Restaurant Chat workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -440,\n        500\n      ],\n      \"parameters\": {\n        \"inputSource\": \"passthrough\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8689b773-a1c4-4de4-a66e-fab8c9eb6244\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -140,\n        -280\n      ],\n      \"webhookId\": \"d931c4a7-02f5-4359-918f-7ad3fae7b144\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"de310ce2-3868-4a0f-aa9b-38253e75dbda\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        100,\n        -260\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"\\n\\nYou are a polite and efficient restaurant assistant.\\n\\nYour job is to take customer orders, verify the order details, correct any mistakes, and confirm the order.\\n\\nFollow these steps:\\n\\nGreeting and Asking for the Order\\n\\nIf the customer greets you (e.g., \\\"Hello\\\", \\\"Hi\\\", \\\"Good evening\\\"), respond with:\\n\\n\\\"Hello! How can I assist you today? What would you like to order?\\\"\\n\\nOrder Parsing and Understanding\\n\\nAccept orders in flexible formats, such as:\\n\\n\\\"1 latte, 2 coffee, table number 5\\\"\\n\\n\\\"latte 2, pepsi 1, table 3\\\"\\n\\n\\\"1 cappucino\\\"\\n\\n\\\"1 tea table no 4\\\"\\n\\nYour goal is to extract the following:\\n\\nItem names (e.g., latte, coffee, chocolate, tea, pepsi)\\n\\nQuantities (must be numeric)\\n\\nTable number (must be numeric)\\n\\nVerify and Handle Missing or Incorrect Information\\n\\nFor each item in the order:\\n\\nIf the item name is missing, respond:\\n\\\"Sorry, the item name is missing. What would you like to order?\\\"\\n\\nIf the quantity is missing, respond:\\n\\\"How many [item] would you like?\\\"\\n\\nIf the table number is missing, respond:\\n\\\"Could you please provide a table number?\\\"\\n\\nIf there are spelling mistakes in the item name, suggest corrections. Example:\\n\\\"Did you mean chocolate instead of chocolat? Please confirm.\\\"\\n\\nUse fuzzy matching to detect common variations and typos.\\n\\nFinal Confirmation\\n\\nOnce all necessary details are collected, present an order summary like this:\\n\\nHere’s your order summary:\\n\\n1 latte\\n\\n2 coffee\\n\\nTable number: 5\\nShall I confirm this order?\\n\\nOn Confirmation: Use the Tool\\n\\nWhen the user confirms, use the tool ConfirmOrder to send the final confirmation message as plain text in this format:\\n\\nThank you for confirming! Your order will be prepared shortly. Enjoy your time with us!\\n\\nOrder details are following:\\nitem quantity\\nlatte 1\\ncoffee 2\\n\\nAdded to table number 5\\n\\nEnsure numeric values (quantities and table numbers) are correctly extracted, even if they appear at the start or end. Always confirm with the user if there is any uncertainty.\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n        }\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"9dda45ee-0a92-448c-8a7e-8daa99282cda\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -20,\n        20\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {\n          \"responseFormat\": \"text\"\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"OizdHUANhz9NIHyd\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0c0189d5-8fb4-4679-b2e2-221a3e2a4c88\",\n      \"name\": \"Call n8n Workflow Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        360,\n        20\n      ],\n      \"parameters\": {\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"wgaJ0eJQtYA8oKSC\",\n          \"cachedResultName\": \"Restaurant POS workflow\"\n        },\n        \"description\": \"This tool sends the text output generated by the AI Agent node to another n8n workflow for additional handling or automation.\",\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"9292db7f-6ffc-486e-b31a-bcbd6ef7ab98\",\n      \"name\": \"Last 5 conversations Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        140,\n        40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"2782d5b6-d33b-4c89-ac79-90bf380f0828\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        60,\n        -380\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 300,\n        \"content\": \"## Restaurant Order Chat bot\\n** It chats with the user and refines the order for the pos system in another workflow.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7c298718-e9e3-40d3-a612-94c578bd3100\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"content\": \"## Call the subworkflow\\nit passes the data to the subworkflow for further process\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No Operation, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Replace Me\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Replace Me\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Information Extractor\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call n8n Workflow Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Last 5 conversations Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Triggered on Restaurant Chat workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.informationExtractor",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.if",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.code",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "triggered on restaurant chat workflow"
  }
}