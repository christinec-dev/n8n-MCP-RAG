{
  "source": "0381_Telegram_Code_Update_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"dbd43d88d26a9e30d8aadc002c9e77f1400c683dd34efe3778d43d27250dde50\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f305e08e-d4b4-4ec6-be74-5edb7a3711e5\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        520,\n        1279\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"abac20ef-6319-40e3-8d30-806d7499a427\",\n      \"name\": \"Send Telegram Message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1360,\n        1279\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.data.replaceAll(/(Last Price: \\\\S+)$/gm,\\\"$1\\\\n\\\").slice(0,1000) }}\",\n        \"chatId\": \"-1002138086614\",\n        \"additionalFields\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d23c3277-62ca-4e1f-ad5d-48c07e0d6b94\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"notes\": \"Combine all items\",\n      \"position\": [\n        1020,\n        1279\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba174e7f-4377-46dc-aca8-30adf81e5d61\",\n      \"name\": \"Binance 24h Price Change\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Get data of changed price coins in last 24h\",\n      \"position\": [\n        680,\n        1279\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.binance.com/api/v1/ticker/24hr\",\n        \"options\": {}\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"575563d5-3fb5-40f3-8017-d015cc822d5f\",\n      \"name\": \"Filter by 10% Change rate\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"notes\": \"Filter by 10% Up & Down\",\n      \"position\": [\n        860,\n        1279\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Iterate over all coins and check for 10% price change\\nconst significantChanges = [];\\nfor (const coin of items[0].json) {\\n  const priceChangePercent = parseFloat(coin.priceChangePercent);\\n  if (Math.abs(priceChangePercent) >= 15) {\\n    significantChanges.push({ \\n      symbol: coin.symbol, \\n      priceChangePercent, \\n      lastPrice: coin.lastPrice \\n    });\\n  }\\n}\\n\\n// Sort the items by percent rate from high to low\\nsignificantChanges.sort((a, b) => b.priceChangePercent - a.priceChangePercent);\\n\\n// Format the sorted data for output\\nconst sortedOutput = significantChanges.map(change => ({\\n  json: { message: `\\\\`\\\\`\\\\`${change.symbol} Price changed by ${change.priceChangePercent}% \\\\n Last Price: ${change.lastPrice}\\\\`\\\\`\\\\`` }\\n}));\\n\\nreturn sortedOutput;\\n\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dcfeae2e-bcdd-472d-98e4-8c1772ccdf1b\",\n      \"name\": \"Split By 1K chars\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"Split them for telegram message limit\",\n      \"position\": [\n        1180,\n        1279\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Function to split the data into chunks of approximately 1000 characters\\nfunction splitDataIntoChunks(data) {\\n    const chunks = [];\\n    let currentChunk = \\\"\\\";\\n\\n    data.forEach(item => {\\n        // Ensure that each item has a 'message' property\\n        if (item && item.message) {\\n            const message = item.message + \\\"\\\\n\\\"; // Adding a newline for separation\\n            // Check if adding this message to the current chunk would exceed the 1000 characters limit\\n            if (currentChunk.length + message.length > 1000) {\\n                // If so, push the current chunk to the chunks array and start a new chunk\\n                chunks.push({ json: { data: currentChunk } });\\n                currentChunk = message;\\n            } else {\\n                // Otherwise, add the message to the current chunk\\n                currentChunk += message;\\n            }\\n        }\\n    });\\n\\n    // Add the last chunk if it's not empty\\n    if (currentChunk) {\\n        chunks.push({ json: { data: currentChunk } });\\n    }\\n\\n    return chunks;\\n}\\n\\n// The input data is passed from the previous node\\nconst inputData = items[0].json.data; // Accessing the 'data' property\\n\\n// Process the data\\nconst result = splitDataIntoChunks(inputData);\\n\\n// Output the result\\nreturn result;\\n\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"40e25c71-641a-4b69-afec-b8a93d5d6448\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        483.54457851446114,\n        1040\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 1040.928205084989,\n        \"height\": 183.94838465674636,\n        \"content\": \"### Workflow Setup Steps:\\n1. Ensure the **_Schedule Trigger_** is active to desired cron time (Default 5 minutes).\\n2. [_Optional_] Configure the **_Binance 24h Price Change_** node with your API details (Default one is Free Public API Call - Free).\\n3. Set up your **Telegram bot** token in the **Telegram node credentials**.\\n4. Update the **_Chat ID_** in the **_Send Telegram Message_** node.\\n5. Test the workflow to ensure everything is set up correctly.\\n* **Notes**: Detailed telegram bot setup instructions are available in the [workflow's n8n page](https://n8n.io/workflows/2043-crypto-market-alert-system-with-binance-and-telegram-integration).\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split By 1K chars\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Binance 24h Price Change\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split By 1K chars\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Telegram Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Binance 24h Price Change\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter by 10% Change rate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter by 10% Change rate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.function",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "schedule trigger"
  }
}