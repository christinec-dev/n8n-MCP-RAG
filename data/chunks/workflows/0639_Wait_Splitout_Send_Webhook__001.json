{
  "source": "0639_Wait_Splitout_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"name\": \"Google Maps Email Scraper Template\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"79df5316-c210-478d-a4de-35b5d31924ee\",\n      \"name\": \"Remove Duplicate URLs\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"position\": [\n        -780,\n        380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"985ac7e3-b501-4079-a043-780677c94b52\",\n      \"name\": \"Loop over queries\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1080,\n        -100\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"3a478935-781b-4fb1-bdc7-fcf8be1334bc\",\n      \"name\": \"Search Google Maps with query\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1380,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.google.com/maps/search/{{ $json.query }}\",\n        \"options\": {\n          \"allowUnauthorizedCerts\": false\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"477e7d55-b7d6-4b20-ac44-dd1f443e270a\",\n      \"name\": \"Scrape URLs from results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1180,\n        380\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const data = $input.first().json.data\\n\\nconst regex = /https?:\\\\/\\\\/[^\\\\/]+/g\\n\\nconst urls = data.match(regex)\\n\\nreturn urls.map(url => ({json: {url: url}}))\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a5b67e45-a3f6-41d2-aa58-c26a441c41b2\",\n      \"name\": \"Filter irrelevant URLs\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -980,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"041797f2-2fe2-41dc-902a-d34050b9b304\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notRegex\"\n              },\n              \"leftValue\": \"={{ $json.url }}\",\n              \"rightValue\": \"=(google|gstatic|ggpht|schema\\\\.org|example\\\\.com|sentry-next\\\\.wixpress\\\\.com|imli\\\\.com|sentry\\\\.wixpress\\\\.com|ingest\\\\.sentry\\\\.io)\"\n            },\n            {\n              \"id\": \"eb499a7e-17bc-453c-be08-a47286f726dd\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"40ec6d1f-1c98-4c9f-8499-c5893c3df7b9\",\n      \"name\": \"Request web page for URL\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        -380,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"12f662a8-c55f-409a-b381-f37ab6dd3794\",\n      \"name\": \"Loop over URLs\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -580,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"reset\": false\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"e6957d05-3533-48ae-9cc1-ee4ac026a2a6\",\n      \"name\": \"Loop over pages\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -360,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"018621c0-0ea9-4865-b110-b6d0727f0588\",\n      \"name\": \"Scrape emails from page\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        -200,\n        220\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const data = $json.data\\n\\nconst emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.(?!png|jpg|gif|jpeg)[a-zA-Z]{2,}/g\\n\\nconst emails = data.match(emailRegex)\\n\\nreturn {json: {emails: emails}}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5509b8e2-a6fc-4fbe-bbc5-1bc1d5de1c98\",\n      \"name\": \"Aggregate arrays of emails\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        -40,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"mergeLists\": true\n        },\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"fieldToAggregate\": \"emails\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f1f01f03-b62e-453f-b938-ffe4f9b3f4de\",\n      \"name\": \"Split out into default data structure\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        180,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"emails\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ec27d665-d9c1-4f10-9c52-0d5ea89cbf77\",\n      \"name\": \"Remove duplicate emails\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"position\": [\n        400,\n        100\n      ],\n      \"parameters\": {\n        \"compare\": \"selectedFields\",\n        \"options\": {},\n        \"fieldsToCompare\": \"emails\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4a071bf0-23ad-455b-b231-bafd3b32e4f8\",\n      \"name\": \"Filter irrelevant emails\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        600,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"041797f2-2fe2-41dc-902a-d34050b9b304\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notRegex\"\n              },\n              \"leftValue\": \"={{ $json.emails }}\",\n              \"rightValue\": \"=(google|gstatic|ggpht|schema\\\\.org|example\\\\.com|sentry\\\\.wixpress\\\\.com|sentry-next\\\\.wixpress\\\\.com|ingest\\\\.sentry\\\\.io|sentry\\\\.io|imli\\\\.com)\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"59675faa-2b0d-4ba5-82c7-dc5dedcad31e\",\n      \"name\": \"Save emails to Google Sheet\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        800,\n        100\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Emails\": \"={{ $json.emails }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Emails\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Emails\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"Emails\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"append\"\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"93437e8b-4f8d-40a1-9585-cab1b556164a\",\n      \"name\": \"Starts scraper workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -1600,\n        380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eed77477-777d-450d-a975-4d2848b1cf55\",\n      \"name\": \"Run workflow\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1320,\n        -100\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dffaf04e-d1d2-4002-9a69-f0904b61fc2d\",\n      \"name\": \"Wait between executions\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -700,\n        0\n      ],\n      \"webhookId\": \"40eb11a9-0f7d-4932-993e-0052b69dbf9b\",\n      \"parameters\": {\n        \"amount\": 2\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"18787007-1d11-41b9-89c3-d5f69756eda7\",\n      \"name\": \"Execute scraper for query\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        -880,\n        0\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {\n          \"waitForSubWorkflow\": false\n        },\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"67fcde25-05e4-437c-b799-4448baea7891\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2280,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 740,\n        \"height\": 180,\n        \"content\": \"## 🛠 Setup\\n1. Setup your list of queries in the \\\"Run workflow\\\" manual trigger node. Watch  this [video](https://youtu.be/HaiO-UeiKBA) on how to generate the queries with ChatGPT.\\n3. Choose a sheet to populate with data in the **Google Sheets node**\\n4. Run the workflow and start getting leads into your Google Sheets document\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ac880457-44b4-4ff7-8440-b4107f8468bb\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -700,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"height\": 100,\n        \"content\": \"**Optional** 👇\\nSet wait time between each query workflow execution. Default is 2 seconds.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d83afb3d-7b71-4b47-9b50-28837aac408c\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1600,\n        260\n      ],\n      \"parameters\": {\n        \"width\": 480,\n        \"height\": 100,\n        \"content\": \"### Scraper 👇\\nThis workflow will be executed in the background for each query. Click the **All executions** tab in the left sidebar to see the executions running.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"007b621a-3d41-4358-aa45-560a3c8e3414\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"height\": 180,\n        \"content\": \"👆 \\n1. Setup your **credentials**. Here's a [video tutorial](https://youtu.be/O5RnWDM27M8) on how to do that.\\n\\n2. Choose which document and sheet to save the scraped emails to. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fc0b837f-624c-4d25-8ed7-f787f76c785b\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1760,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"content\": \" ## ⚠️ Note\\n\\nA [video tutorial](https://youtu.be/HaiO-UeiKBA) for this workflow guide is available on my [Youtube channel](https://www.youtube.com/channel/UCn8xmUBunez1SsDVRfZDUGA)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f8665d5-2890-4f7d-908b-9c09a66b6c93\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2280,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 480,\n        \"height\": 140,\n        \"content\": \"## Google Maps Automatic Email Scraper\\n\\nThis workflow automatically scrapes emails from businesses on Google Maps based on a list of queries that you provide.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7414b2ed-259d-47da-bbd1-d9ce0d64d43c\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1000,\n        540\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 160,\n        \"height\": 100,\n        \"content\": \"**Optional** 👆\\nAdd or change the regex for filtering irrelevant URLs.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"789c9a02-e6e7-4ea6-a7a2-acc7715b377a\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        260\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 200,\n        \"height\": 100,\n        \"content\": \"**Optional** 👆\\nAdd or change the regex for filtering irrelevant/incorrect email addresses.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Run workflow\": [\n      {\n        \"json\": {\n          \"query\": \"hollywood+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"downtown+los+angeles+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"santa+monica+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"westwood+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"west+l.a.+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"the+valley+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"echo+park+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"culver+city+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"pasadena+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"silver+lake+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"mid-wilshire+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"beverly+hills+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"north+hills+dentist\"\n        }\n      },\n      {\n        \"json\": {\n          \"query\": \"south+los+angeles+dentist\"\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"connections\": {\n    \"Run workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over queries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Request web page for URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate arrays of emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Scrape emails from page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over queries\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Execute scraper for query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Duplicate URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter irrelevant URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Duplicate URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove duplicate emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter irrelevant emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scrape emails from page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Starts scraper workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search Google Maps with query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait between executions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over queries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter irrelevant emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save emails to Google Sheet\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Request web page for URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scrape URLs from results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter irrelevant URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute scraper for query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait between executions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate arrays of emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split out into default data structure\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search Google Maps with query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Scrape URLs from results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split out into default data structure\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove duplicate emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.removeDuplicates",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.code",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.removeDuplicates",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.executeWorkflow",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}