{
  "source": "1568_Stickynote_Notion_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"9052b5b2-1e2d-425c-92e5-1ed51323e71c\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 616.7964812508943,\n        \"height\": 231.27721611949534,\n        \"content\": \"# Generate new workflow version for specific notion db schema\\nInput a Notion database URL and get an AI Assistant chatbot workflow for it based on this template: https://n8n.io/workflows/2413-notion-knowledge-base-ai-assistant/\\n\\nProject in notion: https://www.notion.so/n8n/Chat-with-notion-database-84eec91b74dd4e36ba97edda17c2c306\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b4a83f76-2bad-4bbe-9b7f-1df684166035\",\n      \"name\": \"Notion\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1280,\n        480\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"resource\": \"database\",\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $json.chatInput.match(/https?:\\\\/\\\\/[^\\\\s/$.?#].[^\\\\s]*/g)[0] }}\"\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"aDS2eHXMOtsMrQnJ\",\n          \"name\": \"Nathan's notion account\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"39537c95-5ca0-47a9-b2bf-2c0134d3f236\",\n      \"name\": \"Return success to chat\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3540,\n        740\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bebcb43c-461d-40d7-af83-436d94733622\",\n              \"name\": \"output\",\n              \"type\": \"string\",\n              \"value\": \"=Created workflow:\\n```\\n{{ $json.generatedWorkflow }}\\n```\\n\\n\\u261d\\ufe0f Copy and paste JSON above into an n8n workflow canvas (on v 1.52.0+)\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"5ae0fcfb-c3e2-443d-9a0c-25e7b17dc189\",\n      \"name\": \"Auto-fixing Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserAutofixing\",\n      \"position\": [\n        2340,\n        640\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4cd182ff-040a-4c0f-819f-a0648c67ab66\",\n      \"name\": \"Anthropic Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\",\n      \"position\": [\n        2100,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"temperature\": 0.7,\n          \"maxTokensToSample\": 8192\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"dc751c1f-4cd6-4d04-8152-402eb5e24574\",\n      \"name\": \"Set schema for eval\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2720,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"f82e26dd-f5c5-43b5-b97d-ee63c3ef124e\",\n              \"name\": \"searchNotionDBJsonBody\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.output.workflowJson.parseJson().nodes.find(node => node.name === \\\"Search notion database\\\").parameters.jsonBody }}\"\n            },\n            {\n              \"id\": \"a804139b-8bf0-43dc-aa8c-9c0dcb387392\",\n              \"name\": \"generatedWorkflow\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.output.workflowJson }}\"\n            },\n            {\n              \"id\": \"1e24fdfe-c31f-43e3-bca2-7124352fd62e\",\n              \"name\": \"inputDatabase\",\n              \"type\": \"object\",\n              \"value\": \"={{ $('Set input data').first().json.inputDatabase }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"8f8c9d29-c901-4c3c-83a6-23bfe51809bd\",\n      \"name\": \"Return error to chat\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1500,\n        660\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b561b640-7fcb-4613-8b66-068dbd115b4e\",\n              \"name\": \"sessionId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('When chat message received').item.json.sessionId }}\"\n            },\n            {\n              \"id\": \"74d91d28-b73a-4341-a037-693468120d2d\",\n              \"name\": \"output\",\n              \"type\": \"string\",\n              \"value\": \"Sorry that doesn't look like a valid notion database url. Try again.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"518d2e58-6f2e-4497-9f74-7dbfeff4fd6f\",\n      \"name\": \"Anthropic Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\",\n      \"position\": [\n        2300,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxTokensToSample\": 8192\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0e7a4d05-db00-4915-9df4-d3cb79bf5789\",\n      \"name\": \"standardize schema\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1500,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8fc7df86-4a47-43ec-baea-f9ee87a899a8\",\n              \"name\": \"inputDatabase.id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"fdeb5b1b-0bf3-46d6-a266-7f85e212a427\",\n              \"name\": \"inputDatabase.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.url }}\"\n            },\n            {\n              \"id\": \"b2b06176-b4df-41bd-9422-9c89726fa3fd\",\n              \"name\": \"inputDatabase.public_url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.public_url }}\"\n            },\n            {\n              \"id\": \"c7b65a70-8af6-4808-aae9-898df9b10340\",\n              \"name\": \"inputDatabase.name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title[0].text.content }}\"\n            },\n            {\n              \"id\": \"87c1be85-e180-487b-9c82-61c87c7c460b\",\n              \"name\": \"inputDatabase.properties\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.properties }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"8244fb04-75ec-4b41-93cf-e9c5755fabfd\",\n      \"name\": \"Simplify properties object\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1720,\n        440\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop through each incoming item\\nreturn items.map(item => {\\n const inputDatabase = item.json[\\\"inputDatabase\\\"];\\n\\n const simplifiedProperties = Object.fromEntries(Object.entries(inputDatabase.properties).map(([key, value]) => {\\n const simplifiedValue = {\\n id: value.id,\\n name: value.name,\\n type: value.type\\n };\\n\\n // Simplify based on type\\n if (value.type === 'multi_select' || value.type === 'select') {\\n simplifiedValue.options = value.multi_select?.options?.map(option => option.name) || [];\\n }\\n \\n return [key, simplifiedValue];\\n }));\\n\\n // Overwrite the properties object with simplifiedProperties\\n item.json.inputDatabase.properties = simplifiedProperties;\\n\\n return item; // Return the modified item\\n});\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"41b615cc-de7d-4c3f-b608-2d1856e0541a\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2500,\n        800\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n\\t\\\"workflowJson\\\": \\\"json of workflow\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8016baac-9242-44e6-b487-111bb560019d\",\n      \"name\": \"Set input data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"This allows different routes to input into our agent (e.g. the retry branch). In the AI Agent, we can use a relative $json reference for data, since it's always the same input schema going in. \",\n      \"position\": [\n        1980,\n        440\n      ],\n      \"parameters\": {\n        \"jsCode\": \"\\nreturn [{\\n json: {\\n inputDatabase: $input.first().json.inputDatabase,\\n feedbackPrompt: (typeof yourVariable !== 'undefined' && yourVariable) ? yourVariable : \\\" \\\",\\n workflowTemplate: {\\n \\\"nodes\\\": [\\n {\\n \\\"parameters\\\": {\\n \\\"model\\\": \\\"gpt-4o\\\",\\n \\\"options\\\": {\\n \\\"temperature\\\": 0.7,\\n \\\"timeout\\\": 25000\\n }\\n },\\n \\\"id\\\": \\\"f262c0b4-d627-4fd4-ad78-0aa2f57d963f\\\",\\n \\\"name\\\": \\\"OpenAI Chat Model\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.lmChatOpenAi\\\",\\n \\\"typeVersion\\\": 1,\\n \\\"position\\\": [\\n 1320,\\n 640\\n ],\\n \\\"credentials\\\": {\\n \\\"openAiApi\\\": {\\n \\\"id\\\": \\\"AzPPV759YPBxJj3o\\\",\\n \\\"name\\\": \\\"Max's DevRel OpenAI account\\\"\\n }\\n }\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"assignments\\\": {\\n \\\"assignments\\\": [\\n {\\n \\\"id\\\": \\\"055e8a80-4aff-4466-aaa5-ac58bb90f2d0\\\",\\n \\\"name\\\": \\\"databaseName\\\",\\n \\\"value\\\": \\\"={{ $json.name }}\\\",\\n \\\"type\\\": \\\"string\\\"\\n },\\n {\\n \\\"id\\\": \\\"2a61e473-72e7-46f6-98b0-817508d701c7\\\",\\n \\\"name\\\": \\\"databaseId\\\",\\n \\\"value\\\": \\\"={{ $json.id }}\\\",\\n \\\"type\\\": \\\"string\\\"\\n }\\n ]\\n },\\n \\\"options\\\": {}\\n },\\n \\\"id\\\": \\\"fb74819f-660e-479c-9519-73cfc41c7ee0\\\",\\n \\\"name\\\": \\\"workflow vars\\\",\\n \\\"type\\\": \\\"n8n-nodes-base.set\\\",\\n \\\"typeVersion\\\": 3.4,\\n \\\"position\\\": [\\n 940,\\n 460\\n ]\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"assignments\\\": {\\n \\\"assignments\\\": [\\n {\\n \\\"id\\\": \\\"a8e58791-ba51-46a2-8645-386dd1a0ff6e\\\",\\n \\\"name\\\": \\\"sessionId\\\",\\n \\\"value\\\": \\\"={{ $('When chat message received').item.json.sessionId }}\\\",\\n \\\"type\\\": \\\"string\\\"\\n },\\n {\\n \\\"id\\\": \\\"434209de-39d5-43d8-a964-0fcb7396306c\\\",\\n \\\"name\\\": \\\"action\\\",\\n \\\"value\\\": \\\"={{ $('When chat message received').item.json.action }}\\\",\\n \\\"type\\\": \\\"string\\\"\\n },\\n {\\n \\\"id\\\": \\\"cad4c972-51a9-4e16-a627-b00eea77eb30\\\",\\n \\\"name\\\": \\\"chatInput\\\",\\n \\\"value\\\": \\\"={{ $('When chat message received').item.json.chatInput }}\\\",\\n \\\"type\\\": \\\"string\\\"\\n }\\n ]\\n },\\n \\\"options\\\": {}\\n },\\n \\\"id\\\": \\\"832ec8ce-0f7c-4380-9a24-633f490a60a9\\\",\\n \\\"name\\\": \\\"format input for agent\\\",\\n \\\"type\\\": \\\"n8n-nodes-base.set\\\",\\n \\\"typeVersion\\\": 3.4,\\n \\\"position\\\": [\\n 1160,\\n 460\\n ]\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"toolDescription\\\": \\\"=Use this tool to search the \\\\\\\"{{ $('workflow vars').item.json.databaseName }}\\\\\\\" Notion app database.\\\\n\\\\nIt is structured with question and answer format. \\\\nYou can filter query result by:\\\\n- By keyword\\\\n- filter by tag.\\\\n\\\\nKeyword and Tag have an OR relationship not AND.\\\\n\\\\n\\\",\\n \\\"method\\\": \\\"POST\\\",\\n \\\"url\\\": \\\"https://api.notion.com/v1/databases/7ea9697d-4875-441e-b262-1105337d232e/query\\\",\\n \\\"authentication\\\": \\\"predefinedCredentialType\\\",\\n \\\"nodeCredentialType\\\": \\\"notionApi\\\",\\n \\\"sendBody\\\": true,\\n \\\"specifyBody\\\": \\\"json\\\",\\n \\\"jsonBody\\\": \\\"{\\\\n \\\\\\\"filter\\\\\\\": {\\\\n \\\\\\\"or\\\\\\\": [\\\\n {\\\\n \\\\\\\"property\\\\\\\": \\\\\\\"question\\\\\\\",\\\\n \\\\\\\"rich_text\\\\\\\": {\\\\n \\\\\\\"contains\\\\\\\": \\\\\\\"{keyword}\\\\\\\"\\\\n }\\\\n },\\\\n {\\\\n \\\\\\\"property\\\\\\\": \\\\\\\"tags\\\\\\\",\\\\n \\\\\\\"multi_select\\\\\\\": {\\\\n \\\\\\\"contains\\\\\\\": \\\\\\\"{tag}\\\\\\\"\\\\n }\\\\n }\\\\n ]\\\\n },\\\\n \\\\\\\"sorts\\\\\\\": [\\\\n {\\\\n \\\\\\\"property\\\\\\\": \\\\\\\"updated_at\\\\\\\",\\\\n \\\\\\\"direction\\\\\\\": \\\\\\\"ascending\\\\\\\"\\\\n }\\\\n ]\\\\n}\\\",\\n \\\"placeholderDefinitions\\\": {\\n \\\"values\\\": [\\n {\\n \\\"name\\\": \\\"keyword\\\",\\n \\\"description\\\": \\\"Searches question of the record. Use one keyword at a time.\\\"\\n },\\n {\\n \\\"name\\\": \\\"tag\\\",\\n \\\"description\\\": \\\"Options: PTO, HR Policy, Health Benefits, Direct Deposit, Payroll, Sick Leave, 1:1 Meetings, Scheduling, Internal Jobs, Performance Review, Diversity, Inclusion, Training, Harassment, Discrimination, Product Roadmap, Development, Feature Request, Product Management, Support, Ticket Submission, Password Reset, Email, Slack, GitHub, Team Collaboration, Development Setup, DevOps, GitHub Profile Analyzer, Security Breach, Incident Report, New Software, Software Request, IT, Hardware, Procurement, Software Licenses, JetBrains, Adobe, Data Backup, IT Policy, Security, MFA, Okta, Device Policy, Support Ticket, Phishing, Office Supplies, Operations, Meeting Room, Berlin Office, Travel Expenses, Reimbursement, Facilities, Maintenance, Equipment, Expense Reimbursement, Mobile Phones, SIM Cards, Parking, OKRs, Dashboard, Catering, Office Events\\\"\\n }\\n ]\\n }\\n },\\n \\\"id\\\": \\\"f16acb7e-f27d-4a95-845c-c990fc334795\\\",\\n \\\"name\\\": \\\"Search notion database\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.toolHttpRequest\\\",\\n \\\"typeVersion\\\": 1.1,\\n \\\"position\\\": [\\n 1620,\\n 640\\n ],\\n \\\"credentials\\\": {\\n \\\"notionApi\\\": {\\n \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n \\\"name\\\": \\\"max-bot\\\"\\n }\\n }\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"public\\\": true,\\n \\\"initialMessages\\\": \\\"=Happy {{ $today.weekdayLong }}!\\\\nKnowledge source assistant at your service. How can I help?\\\",\\n \\\"options\\\": {\\n \\\"subtitle\\\": \\\"\\\",\\n \\\"title\\\": \\\"Notion Knowledge Base\\\"\\n }\\n },\\n \\\"id\\\": \\\"9fc1ae38-d115-44d0-a088-7cec7036be6f\\\",\\n \\\"name\\\": \\\"When chat message received\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.chatTrigger\\\",\\n \\\"typeVersion\\\": 1.1,\\n \\\"position\\\": [\\n 560,\\n 460\\n ],\\n \\\"webhookId\\\": \\\"b76d02c0-b406-4d21-b6bf-8ad2c623def3\\\"\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"resource\\\": \\\"database\\\",\\n \\\"databaseId\\\": {\\n \\\"__rl\\\": true,\\n \\\"value\\\": \\\"7ea9697d-4875-441e-b262-1105337d232e\\\",\\n \\\"mode\\\": \\\"list\\\",\\n \\\"cachedResultName\\\": \\\"StarLens Company Knowledge Base\\\",\\n \\\"cachedResultUrl\\\": \\\"https://www.notion.so/7ea9697d4875441eb2621105337d232e\\\"\\n }\\n },\\n \\\"id\\\": \\\"9325e0fe-549f-423b-af48-85e802429a7f\\\",\\n \\\"name\\\": \\\"Get database details\\\",\\n \\\"type\\\": \\\"n8n-nodes-base.notion\\\",\\n \\\"typeVersion\\\": 2.2,\\n \\\"position\\\": [\\n 760,\\n 460\\n ],\\n \\\"credentials\\\": {\\n \\\"notionApi\\\": {\\n \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n \\\"name\\\": \\\"max-bot\\\"\\n }\\n }\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"contextWindowLength\\\": 4\\n },\\n \\\"id\\\": \\\"637f5731-4442-42be-9151-30ee29ad97c6\\\",\\n \\\"name\\\": \\\"Window Buffer Memory\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.memoryBufferWindow\\\",\\n \\\"typeVersion\\\": 1.2,\\n \\\"position\\\": [\\n 1460,\\n 640\\n ]\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"toolDescription\\\": \\\"=Use this tool to retrieve Notion page content using the page ID. \\\\n\\\\nIt is structured with question and answer format. \\\\nYou can filter query result by:\\\\n- By keyword\\\\n- filter by tag.\\\\n\\\\nKeyword and Tag have an OR relationship not AND.\\\\n\\\\n\\\",\\n \\\"url\\\": \\\"https://api.notion.com/v1/blocks/{page_id}/children\\\",\\n \\\"authentication\\\": \\\"predefinedCredentialType\\\",\\n \\\"nodeCredentialType\\\": \\\"notionApi\\\",\\n \\\"placeholderDefinitions\\\": {\\n \\\"values\\\": [\\n {\\n \\\"name\\\": \\\"page_id\\\",\\n \\\"description\\\": \\\"Notion page id from 'Search notion database' tool results\\\"\\n }\\n ]\\n },\\n \\\"optimizeResponse\\\": true,\\n \\\"dataField\\\": \\\"results\\\",\\n \\\"fieldsToInclude\\\": \\\"selected\\\",\\n \\\"fields\\\": \\\"id, type, paragraph.text, heading_1.text, heading_2.text, heading_3.text, bulleted_list_item.text, numbered_list_item.text, to_do.text, children\\\"\\n },\\n \\\"id\\\": \\\"6b87ae47-fac9-4ef5-aa9a-f1a1ae1adc5f\\\",\\n \\\"name\\\": \\\"Search inside database record\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.toolHttpRequest\\\",\\n \\\"typeVersion\\\": 1.1,\\n \\\"position\\\": [\\n 1800,\\n 640\\n ],\\n \\\"credentials\\\": {\\n \\\"notionApi\\\": {\\n \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n \\\"name\\\": \\\"max-bot\\\"\\n }\\n }\\n },\\n {\\n \\\"parameters\\\": {\\n \\\"promptType\\\": \\\"define\\\",\\n \\\"text\\\": \\\"={{ $json.chatInput }}\\\",\\n \\\"options\\\": {\\n \\\"systemMessage\\\": \\\"=# Role:\\\\nYou are a helpful agent. Query the \\\\\\\"{{ $('workflow vars').item.json.databaseName }}\\\\\\\" Notion database to find relevant records or provide insights based on multiple records.\\\\n\\\\n# Behavior:\\\\n\\\\nBe clear, very concise, efficient, and accurate in responses. Do not hallucinate.\\\\nIf the request is ambiguous, ask for clarification. Do not embellish, only use facts from the Notion records. Never offer general advice.\\\\n\\\\n# Error Handling:\\\\n\\\\nIf no matching records are found, try alternative search criteria. Example: Laptop, then Computer, then Equipment. \\\\nClearly explain any issues with queries (e.g., missing fields or unsupported filters).\\\\n\\\\n# Output:\\\\n\\\\nReturn concise, user-friendly results or summaries.\\\\nFor large sets, show top results by default and offer more if needed. Output URLs in markdown format. \\\\n\\\\nWhen a record has the answer to user question, always output the URL to that page. Always list links to records separately at the end of the message like this:\\\\n\\\\\\\"Relevant pages: \\\\n(links in markdown format)\\\\\\\"\\\\nDo not output links twice, only in Relevant pages section\\\\n\\\"\\n }\\n },\\n \\\"id\\\": \\\"17f2c426-c48e-48e0-9c5e-e35bdafe5109\\\",\\n \\\"name\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.agent\\\",\\n \\\"typeVersion\\\": 1.6,\\n \\\"position\\\": [\\n 1380,\\n 460\\n ]\\n }\\n ],\\n \\\"connections\\\": {\\n \\\"OpenAI Chat Model\\\": {\\n \\\"ai_languageModel\\\": [\\n [\\n {\\n \\\"node\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"ai_languageModel\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"workflow vars\\\": {\\n \\\"main\\\": [\\n [\\n {\\n \\\"node\\\": \\\"format input for agent\\\",\\n \\\"type\\\": \\\"main\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"format input for agent\\\": {\\n \\\"main\\\": [\\n [\\n {\\n \\\"node\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"main\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"Search notion database\\\": {\\n \\\"ai_tool\\\": [\\n [\\n {\\n \\\"node\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"ai_tool\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"When chat message received\\\": {\\n \\\"main\\\": [\\n [\\n {\\n \\\"node\\\": \\\"Get database details\\\",\\n \\\"type\\\": \\\"main\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"Get database details\\\": {\\n \\\"main\\\": [\\n [\\n {\\n \\\"node\\\": \\\"workflow vars\\\",\\n \\\"type\\\": \\\"main\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"Window Buffer Memory\\\": {\\n \\\"ai_memory\\\": [\\n [\\n {\\n \\\"node\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"ai_memory\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n },\\n \\\"Search inside database record\\\": {\\n \\\"ai_tool\\\": [\\n [\\n {\\n \\\"node\\\": \\\"AI Agent\\\",\\n \\\"type\\\": \\\"ai_tool\\\",\\n \\\"index\\\": 0\\n }\\n ]\\n ]\\n }\\n },\\n \\\"pinData\\\": {}\\n}\\n }\\n}];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"dc15a250-074e-4aed-8eec-5c60c91cc42d\",\n      \"name\": \"Set schem for rerun\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3540,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b4669a2c-7780-4c54-aef6-89a56ddf1d06\",\n              \"name\": \"inputDatabase\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.inputDatabase }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"224f4963-caac-4438-a61b-90e2c0858f24\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1060,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 747.234277816171,\n        \"height\": 110.78786136085805,\n        \"content\": \"## #1 Serve chat, get URL from user, pull new notion DB schema\\nUses n8n Chat trigger. Notion node will fail if an invalid URL is used, or if n8n doesn't have access to it. Also attempts to strip non URL text input. Simplifies notion DB outputs for more efficient token usage in AI Agent.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7e18ca8d-3181-446f-96f5-0e4b1000d855\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1939,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 638.6509136143742,\n        \"height\": 114.20873484539783,\n        \"content\": \"## #2 GenAI step\\nTakes 2 inputs: [original workflow template](https://n8n.io/workflows/2413-notion-knowledge-base-ai-assistant/) and new Notion database details from #1\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b54b8c03-eb66-4ec7-bc7f-f62ddc566bbe\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2660,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 727.8599253628195,\n        \"height\": 111.9281525223713,\n        \"content\": \"## #3 Does the new workflow look right?\\nChecks for previously identified cases (e.g. LLM outputs placeholder for certain values) then does general LLM check on whether it looks like valid n8n workflow JSON.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a5cc97a7-33e3-45fe-9e13-45ebafd469d7\",\n      \"name\": \"Add feedback prompt\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3220,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"1243a328-8420-4be0-8932-4e153472a638\",\n              \"name\": \"feedbackPrompt\",\n              \"type\": \"string\",\n              \"value\": \"=You attempted the below task and outputted incorrect JSON. Below is your incorrect attempt and original task prompt. Try again.\\n\\n# Incorrect task prompt\\n\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"b066fa2d-77ba-4466-ae3b-9ab2405bae3c\",\n      \"name\": \"Check for WF JSON errors\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"notes\": \"Placeholder jsonBody in tool - this means the 'Search notion database' tool got [object Object] as it's value (happening ~25% of the time)\",\n      \"position\": [\n        2920,\n        440\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Placeholder jsonBody in tool\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $json.searchNotionDBJsonBody }}\",\n                    \"rightValue\": \"object Object\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\",\n          \"allMatchingOutputs\": false\n        }\n      },\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"e4b38c13-255d-4136-9c7b-90678cbe523b\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3540,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 343.3887397891673,\n        \"height\": 132.30907857627597,\n        \"content\": \"## #4 Respond to Chat trigger\\nEach response to the chat trigger is one run. Data of the last node that runs in the workflow is sent to chat trigger, like `Return success to chat`\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ecfadc2-2499-4e0f-94c4-1e68770beefb\",\n      \"name\": \"Generate Workflow Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        2220,\n        440\n      ],\n      \"parameters\": {\n        \"text\": \"=Your task is to output a modified version of a n8n workflow template so it works with the provided new notion database schema. \\n\\n\\n# new notion database details\\n{{ $json.inputDatabase.toJsonString() }}\\n\\n# n8n workflow template to use as reference\\n{{ $json.workflowTemplate.toJsonString() }}\\n\\nJSON Output:\\n- Ensure valid JSON with properly quoted keys and values, no trailing commas, and correctly nested braces `{}` and brackets `[]`. If unable to format, return an error or a valid example.\\n- Output linebreaks so user can copy working JSON\",\n        \"agent\": \"reActAgent\",\n        \"options\": {\n          \"prefix\": \"You are an n8n expert and understand n8n's workflow JSON Structure. You take n8n workflows and make changes to them based on the user request. \\n\\nDon't hallucinate. Only output n8n workflow json. \\n\\n\",\n          \"returnIntermediateSteps\": false\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"3ac37a66-30d5-404a-8c22-1402874e4f37\",\n      \"name\": \"Anthropic Chat Model2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\",\n      \"position\": [\n        3120,\n        860\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxTokensToSample\": 8192\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"f71ddd6e-7d41-405c-8cd8-bb21fc0654ae\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        1100,\n        480\n      ],\n      \"webhookId\": \"49dfdc22-b4c8-4ed3-baef-6751ec52f278\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {\n          \"title\": \"\\ud83e\\udd16 Notion database assistant generator\",\n          \"subtitle\": \"Generates an n8n workflow-based AI Agent that can query any arbitrary Notion database. \",\n          \"inputPlaceholder\": \"e.g. https://www.notion.so/n8n/34f67a14195344fda645691c63dc3901\",\n          \"loadPreviousSession\": \"manually\"\n        },\n        \"initialMessages\": \"Hi there, I can help you make an AI Agent assistant that can query a Notion database.\\n\\nGenerating the workflow may take a few minutes as I check whether it works and try again if I oopsie.\\n\\nEnter a notion database URL and I'll output the workflow in JSON that you can paste in to the n8n canvas. \\n\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5a549080-0ad0-4f94-87b1-8b735d7b95a3\",\n      \"name\": \"Valid n8n workflow JSON?\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textClassifier\",\n      \"position\": [\n        3140,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemPromptTemplate\": \"You are an expert in n8n workflow automation tool. You know whether the json representation of an n8n workflow is valid. \\n\\nPlease classify the text provided by the user into one of the following categories: {categories}, and use the provided formatting instructions below. Don't explain, and only output the json.\"\n        },\n        \"inputText\": \"={{ $json.generatedWorkflow }}\",\n        \"categories\": {\n          \"categories\": [\n            {\n              \"category\": \"invalidJSON\",\n              \"description\": \"Any other workflow JSON\"\n            },\n            {\n              \"category\": \"validJSON\",\n              \"description\": \"A valid n8n workflow JSON\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"02bf6e06-6671-4d18-ba30-117459e9d58a\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 614.8565246662145,\n        \"height\": 416.2640726760381,\n        \"content\": \"## Watch a quick set up video \\ud83d\\udc47\\n[![Notion AI Assistant Generator](https://uploads.n8n.io/devrel/notion-db-assistant-thumb#full-width)](https://youtu.be/iK87ppcaNgM)\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Notion\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"standardize schema\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Return error to chat\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set input data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Workflow Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"standardize schema\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Simplify properties object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add feedback prompt\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set schem for rerun\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set schem for rerun\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set input data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set schema for eval\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check for WF JSON errors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Anthropic Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Generate Workflow Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Anthropic Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Auto-fixing Output Parser\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Anthropic Chat Model2\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Valid n8n workflow JSON?\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Workflow Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set schema for eval\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for WF JSON errors\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add feedback prompt\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Valid n8n workflow JSON?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Auto-fixing Output Parser\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Valid n8n workflow JSON?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set schem for rerun\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Return success to chat\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auto-fixing Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Generate Workflow Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simplify properties object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set input data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.textClassifier",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}