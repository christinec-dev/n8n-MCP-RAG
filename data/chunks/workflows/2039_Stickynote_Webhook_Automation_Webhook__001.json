{
  "source": "2039_Stickynote_Webhook_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"znRwva47HzXesOYk\",\n  \"meta\": {\n    \"instanceId\": \"3be30861c4ebf6c36b608a223df086e2f2ea418bc2f7f7a746319c3c22897aa9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Travel AssistantAgent\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"3742b914-9f9d-4c6e-bfdf-f494295182a3\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"webhookId\": \"c9b390dc-3f6a-475c-b168-28f3accd20a7\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5b7fcae2-78ab-45f7-933b-3acf993832e6\",\n      \"name\": \"MongoDB Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryMongoDbChat\",\n      \"position\": [\n        320,\n        220\n      ],\n      \"parameters\": {\n        \"databaseName\": \"test\"\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eaba53fd-fc1c-404f-8720-eeea6cde088e\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        180,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"7DECNCZTsje1tSvf\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"af440c3f-e81f-4e40-a349-6272c3b23517\",\n      \"name\": \"MongoDB Atlas Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\n      \"position\": [\n        480,\n        280\n      ],\n      \"parameters\": {\n        \"mode\": \"retrieve-as-tool\",\n        \"topK\": 10,\n        \"options\": {},\n        \"toolName\": \"PointofinterestKB\",\n        \"metadata_field\": \"description\",\n        \"mongoCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"points_of_interest\",\n          \"cachedResultName\": \"points_of_interest\"\n        },\n        \"toolDescription\": \"The list of Points of Interest from the database.\",\n        \"vectorIndexName\": \"vector_index\"\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"17f2e6f3-d79c-4588-b4ee-bbfff61bc38d\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        580,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"z5h5wLH9yHstZl24\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"fc7ab263-9b1c-4e98-ae51-74248b91fe82\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        -420\n      ],\n      \"parameters\": {\n        \"width\": 900,\n        \"height\": 960,\n        \"content\": \"## AI Traveling Agent Powered by MongoDB Atlas for Memory and vector search.\\n\\n**Atlas MongoDB Memory Node**\\n\\n- The memory node allows the agent to persist and retrieve conversation based on threads in the database. It uses MongoDB felxible store capabilities to allow different type of threads and messages (Image, audio, video etc.) to be stored easily and effectivley \\n\\n\\n**Atlas MongoDB Vector Store Node**\\n\\n- Atlas Vector Store tool allows the agent to get up to date points of interest from our vector store database populated and embedded with OpenAI Embeddings.\\n\\n\\n### You will need to:\\n1. Setup your Google API Credentials for the Gemini LLM\\n2. Setup your OpenAI Credentials for the OpenAI embedding nodes.\\n3. [MongoDB Atlas project and Cluster](https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/). Get a hold of the connection string and make sure to have your IP Access list enabled (for ease of testing try `0.0.0.0/0` access.\\n4. Setup you MongoDB Credentials account with the correct connection string and database name.\\n5. **Vector Search Tool** - uses Atlas Vector Search index you will create on your database for the `points_of_interest` collection:\\n\\n```\\n// index name : \\\"vector_index\\\"\\n// If you change an embedding provider make sure the numDimensions correspond to the model.\\n{\\n  \\\"fields\\\": [\\n    {\\n      \\\"type\\\": \\\"vector\\\",\\n      \\\"path\\\": \\\"embedding\\\",\\n      \\\"numDimensions\\\": 1536,\\n      \\\"similarity\\\": \\\"cosine\\\"\\n    }\\n  ]\\n}\\n```\\n\\nOnce all of that is configured you will need to send the loading webhook with some data points (see example).\\n\\nThis should create vectorised data in  `points_of_interest` collection.\\n\\nOnce you have data points there try to ask the Agent questions about the data points and test the response. Eg. \\\"Where should I go for a romantic getaway?\\\"\\n\\n**Additional Resources**\\n- [MongoDB Atlas Vector Search](https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io)\\n- [n8n Atlas Vector Search docs](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5a0353d2-410a-4059-8dc1-56a438e22cea\",\n      \"name\": \"AI Traveling Planner Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxIterations\": 10,\n          \"systemMessage\": \"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"e4c2c92d-6291-42c8-9d03-5abfe1a85a83\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        420,\n        760\n      ],\n      \"webhookId\": \"a48d5121-b453-4b5e-aa30-88ba3e16b931\",\n      \"parameters\": {\n        \"path\": \"ingestData\",\n        \"options\": {\n          \"rawBody\": true\n        },\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8ec1fa93-3eea-44e2-a66d-7f1e961cfa94\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        520,\n        1200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"jsonData\": \"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f723cca8-7bf4-4c93-932f-b558d21e8a4d\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        1060,\n        1400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c4a5f12e-de9b-44d0-93b2-a06cb56a1a91\",\n      \"name\": \"MongoDB Atlas Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\n      \"position\": [\n        740,\n        880\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"metadata_field\": \"description\",\n        \"mongoCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"points_of_interest\",\n          \"cachedResultName\": \"points_of_interest\"\n        },\n        \"vectorIndexName\": \"vector_index\",\n        \"embeddingBatchSize\": 1\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cf3b0e71-73d5-4a54-bb64-a2d951cd7726\",\n      \"name\": \"Embeddings OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        800,\n        1100\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"z5h5wLH9yHstZl24\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"386538c3-81e7-4797-a4b6-81dea83fa778\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        940\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 360,\n        \"content\": \"## CURL Command to Ingest Data.\\n\\nHere is an example of how you can load data into your webhook once its active and ready to get requests.\\n\\n```\\ncurl -X POST \\\"https://<account>.app.n8n.cloud/webhook-test/ingestData\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"Eiffel Tower\\\",\\n        \\\"description\\\": \\\"Iconic iron lattice tower located on the Champ de Mars in Paris, France.\\\"\\n      }\\n    }\\n  }'\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0aa2676e-9f93-4b71-bd69-a4a8b2069496\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1040,\n        620\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 360,\n        \"content\": \"## Vector Search data ingestion\\n\\nUsing webhook to ingest data to the MongoDB `points_of_interest` \\ncollection. \\n\\nThis can be done in other ways like loading from wbesites/git/files or other supported data sources.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"4600a0b5-b04c-4bd7-9a71-66b498cf1cbb\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MongoDB Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MongoDB Atlas Vector Store\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.memoryMongoDbChat",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.webhook",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}