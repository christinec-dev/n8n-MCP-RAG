{
  "source": "0976_Manual_HTTP_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"4\",\n  \"name\": \"post to wallabag\",\n  \"nodes\": [\n    {\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        120,\n        250\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1280,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"=http://{HERE-YOUR-WALLABAG-HOST}/api/entries.json\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{$json[\\\"url\\\"]}}\"\n            }\n          ]\n        },\n        \"queryParametersUi\": {\n          \"parameter\": []\n        },\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{$json[\\\"access_token\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        120,\n        400\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        900,\n        470\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Get the global workflow static data\\nconst staticData = getWorkflowStaticData('global')\\n\\n// Access its data\\nconst lastStarRssId = staticData.lastStarRssId\\n\\nlet list = []\\n\\nfor (const item of items[0].json.content){\\n  let currentId = item.id\\n  if(currentId == lastStarRssId) break;\\n  list.push({'json':{\\n    'id': currentId,\\n    'lastId': lastStarRssId,\\n    'url': item.link,\\n    'tags': item.tags,\\n    'access_token': items[1].json.access_token\\n  }})\\n}\\n\\n\\n// Get the last ID from Rss Feed\\nlet currentStarRssId = items[0].json.content[0].id\\n\\n// TODO: make a loop to get all the items beyond the last saved id\\nif(!lastStarRssId || currentStarRssId != lastStarRssId)\\n{  \\n  // Update its data\\n  staticData.lastStarRssId = currentStarRssId;\\n  \\n}\\nelse { list = [{'json':{ 'id': 'Nan', 'lastId': staticData.lastStarRssId }}] }\\nreturn list;\\n\\n/*return [{'json':{'url': items[0].json.content.pop(), 'wallabag':items[1].json}}]*/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1100,\n        470\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"Function\\\"].json[\\\"id\\\"]}}\",\n              \"value2\": \"NaN\",\n              \"operation\": \"notEqual\"\n            }\n          ],\n          \"boolean\": []\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1290,\n        570\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Auth Wallabag\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        490,\n        590\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-WALLABAG-HOST}/oauth/v2/token\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"grant_type\",\n              \"value\": \"password\"\n            },\n            {\n              \"name\": \"client_id\",\n              \"value\": \"{HERE-YOUR-CLIENT_ID}\"\n            },\n            {\n              \"name\": \"client_secret\",\n              \"value\": \"{HERE-YOUR-CLIENT_SECRET}\"\n            },\n            {\n              \"name\": \"username\",\n              \"value\": \"{HERE-YOUR-USERNAME}\"\n            },\n            {\n              \"name\": \"password\",\n              \"value\": \"{HERE-YOUR-PASSWORD}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        710,\n        470\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get stared articles\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        490,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"sid\",\n              \"value\": \"={{$json[\\\"content\\\"][\\\"session_id\\\"]}}\"\n            },\n            {\n              \"name\": \"op\",\n              \"value\": \"getHeadLines\"\n            },\n            {\n              \"name\": \"feed_id\",\n              \"value\": \"-1\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Auth TTRss\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        320,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"op\",\n              \"value\": \"login\"\n            },\n            {\n              \"name\": \"user\",\n              \"value\": \"{HERE-YOUR-API-USER}\"\n            },\n            {\n              \"name\": \"password\",\n              \"value\": \"{HERE-YOUR-API-SECRET}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Auth TTRss\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auth TTRss\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get stared articles\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auth Wallabag\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get stared articles\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Auth TTRss\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.cron",
      "n8n-nodes-base.function",
      "n8n-nodes-base.if",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest"
    ],
    "trigger": null
  }
}