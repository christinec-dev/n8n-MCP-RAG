{
  "source": "0329_Manual_Send_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"912b279c-30e5-4991-92ab-040fc1e89c7a\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -60,\n        0\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"749d8762-d213-4dd3-b404-4c6518fcd28f\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -60,\n        200\n      ],\n      \"webhookId\": \"c2e664e6-645f-422a-99d3-cf0f4c53c345\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1eeff044-b914-40f7-8d37-8b69007862cd\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        460,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"ac34f7f0-d1dc-4ffb-8f49-6ddc925e97bc\",\n      \"name\": \"Debug Input\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        160,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"25d97d59-b0cf-46ae-916d-18059b3d6847\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"Return a random color but not green or blue\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a410a0a5-1ea1-4ade-a32c-8f6fd959bae8\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        440,\n        200\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"923b1597-2e9c-4c38-b3bb-7d6dffb52e4a\",\n      \"name\": \"Code Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolCode\",\n      \"position\": [\n        660,\n        200\n      ],\n      \"parameters\": {\n        \"name\": \"my_color_selector\",\n        \"jsCode\": \"const colors = [\\n    'red',\\n    'green',\\n    'blue',\\n    'yellow',\\n    'pink',\\n    'white',\\n    'black',\\n    'orange',\\n    'brown',\\n];\\n\\nconst ignoreColors = query.split(',').map((text) => text.trim());\\n\\n// remove all the colors that should be ignored\\nconst availableColors = colors.filter((color) => {\\n    return !ignoreColors.includes(color);\\n});\\n\\n// Select a random color\\nreturn availableColors[Math.floor(Math.random() * availableColors.length)];\\n\",\n        \"description\": \"Call this tool to get a random color. The input should be a string with comma-separated names of colors to exclude.\"\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Code Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Debug Input\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Debug Input\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.toolCode"
    ],
    "trigger": null
  }
}