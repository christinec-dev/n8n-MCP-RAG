{
  "source": "1907_Stickynote_Converttofile_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"lStrENIdqN2WyGqW\",\n  \"meta\": {\n    \"instanceId\": \"7dad74485e3e05b018ebcb1de30d0069d50b5085ff62446e7e84ef96b35d0508\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Business Canvas Generator\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"f9083875-e460-46ba-8f86-f2c66402e161\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -300,\n        -1280\n      ],\n      \"webhookId\": \"5ac01b33-5538-4c54-b1a1-33ecc9c40a29\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {},\n        \"initialMessages\": \"Hi there! 👋\\nPlease tell me everything about your business, and I will help you create the business canvas.\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ff613255-761e-472f-a09b-58e6181571f1\",\n      \"name\": \"Key Partners Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        -500\n      ],\n      \"parameters\": {\n        \"text\": \"=Act as a strategic business analyst. Based on the idea and goals I give you, list 10 key insights for the \\\"Key Partners\\\" section of the Business Model Canvas. Be sure to cover the following questions:\\n\\n- Who are our key partners?\\n- Who are our key suppliers?\\n- Which key resources are we acquiring from partners?\\n- Which key activities do our partners perform?\\n- Motivation for partnerships: Optimization, risk reduction, resource access\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title \\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"97ffa849-cdaf-492e-a978-425d6a50f0d0\",\n      \"name\": \"Key Activities Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        -160\n      ],\n      \"parameters\": {\n        \"text\": \"=Act as a strategic business analyst. Based on the business idea I gave you, generate 6-7 insights for the \\\"Key Activities\\\" section of the Business Model Canvas. Consider the following questions:\\n\\n- What key activities do our value propositions require?\\n- What key activities are needed for our distribution channels?\\n- What activities support customer relationships?\\n- What activities support our revenue streams?\\n\\nAlso include examples based on activity type:\\n- Production\\n- Problem Solving\\n- Platform/Network\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"64c94d6a-9ed1-4335-ac4d-03a69a434245\",\n      \"name\": \"Value Proposition Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        140\n      ],\n      \"parameters\": {\n        \"text\": \"=You're a value-driven strategist. Based on the provided business idea, write 6-7 concise bullet points that define the \\\"Value Proposition\\\" section of the Business Model Canvas. Address these key questions:\\n\\n- What value do we deliver to the customer?\\n- What customer problems are we solving?\\n- What bundles of products/services are we offering?\\n- What needs are we satisfying?\\n\\nUse these attributes to shape your ideas:\\n- Newness, Performance, Customization, Job completion, Design, Brand/Status\\n- Price, Cost reduction, Risk reduction, Accessibility, Convenience\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"abcc2cd2-a87d-443a-90b1-5d107016bb0f\",\n      \"name\": \"Customer Relationship Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        440\n      ],\n      \"parameters\": {\n        \"text\": \"=As a customer relationship strategist, provide 6-7 key approaches for the \\\"Customer Relationship\\\" section of the Business Model Canvas, based on the business idea. Reflect on these questions:\\n\\n- What type of relationship does each customer segment expect?\\n- What relationships have we already established?\\n- How are these relationships integrated with the rest of our business model?\\n- What is the cost of maintaining these relationships?\\n\\nYou may use formats like:\\n- Personal assistance, Self-service, Automated services, Communities, Co-creation\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"d3fa4f7f-0184-43bb-a3d8-62bd04d3b620\",\n      \"name\": \"Customer Segments Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        740\n      ],\n      \"parameters\": {\n        \"text\": \"=Act as a segmentation expert. Based on the business idea provided, define 6-7 customer segments for the \\\"Customer Segments\\\" section of the Business Model Canvas. Make sure your suggestions address:\\n\\n- For whom are we creating value?\\n- Who are our most important customers?\\n\\nIncorporate examples like:\\n- Mass market, Niche market, Segmented, Diversified, Multi-sided platforms\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"1772d38c-e464-4b05-9276-67a982520ab1\",\n      \"name\": \"Ollama Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\",\n      \"position\": [\n        -260,\n        2560\n      ],\n      \"parameters\": {\n        \"model\": \"llama3.1:latest\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"ollamaApi\": {\n          \"id\": \"FQ4BFsQ96rFv3C4V\",\n          \"name\": \"Ollama account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8b9e484a-7710-4447-b007-93ea3a7af39d\",\n      \"name\": \"Key Resources Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        1040\n      ],\n      \"parameters\": {\n        \"text\": \"=You're an operational strategist. Based on the business idea, generate 6-7 bullet points for the \\\"Key Resources\\\" section of the Business Model Canvas. Answer:\\n\\n- What key resources does our value proposition require?\\n- What resources are needed for our distribution channels, customer relationships, revenue streams?\\n\\nConsider:\\n- Physical, Intellectual (e.g. patents, data), Human, Financial\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title \\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"89f21f63-0f82-4cef-b6ac-231dc0262406\",\n      \"name\": \"Channels Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        1380\n      ],\n      \"parameters\": {\n        \"text\": \"=You're a marketing strategist. Provide 6-7 channel strategies for the \\\"Channels\\\" section of the Business Model Canvas, using the business idea. Answer:\\n\\n- Through which channels do customers want to be reached?\\n- How are we reaching them now?\\n- How are channels integrated?\\n- Which channels work best?\\n- Which are most cost-efficient?\\n- How are we integrating them with customer routines?\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"b1617750-2264-4199-8ded-277dae92ae2b\",\n      \"name\": \"Cost Structure Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        1680\n      ],\n      \"parameters\": {\n        \"text\": \"=You're a finance strategist. Based on the business idea, provide 6-7 main cost drivers for the \\\"Cost Structure\\\" section of the Business Model Canvas. Include insights related to:\\n\\n- Most important costs in our business model\\n- Most expensive key resources\\n- Most expensive key activities\\n\\n\\n\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\n\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"3b7d55d4-3f50-428b-a018-620765e530fb\",\n      \"name\": \"Title Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        -820\n      ],\n      \"parameters\": {\n        \"text\": \"=Make a simple business name with this idea (maximum 5 words)\\n{{ $json.chatInput }}\\n\\nonly write the name, do not add anything to the output.\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"134a828c-ae3a-49b8-b337-52d3cf5f35d7\",\n      \"name\": \"Revenue Streams Generator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        1980\n      ],\n      \"parameters\": {\n        \"text\": \"=Act as a monetization expert. Based on the business idea, generate 6-7 revenue strategies for the \\\"Revenue Streams\\\" section of the Business Model Canvas. Reflect on:\\n\\n- What value are customers willing to pay for?\\n- What are they paying for now?\\n- How do they pay?\\n- How would they prefer to pay?\\n- What is the contribution of each stream?\\n\\nFormat your answer as bullet points, separated by a pipe symbol. Write only the points without numbering or explanations or titling, just body bullet points, and each item of bullet points should be less than 10 words, preferably 4-5 words (each of the should be meaningfull.\\n\\nthe only acceptable output structure is like this:\\npoint1 | point2 | point3 ...\\n\\ndo not include header or title, do not use any enter (\\\\n)\\nThis is the goal and idea of the project : \\n{{ $json.chatInput }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"8b2f5b1a-32fa-4fbd-a6b1-4147e3b64ed5\",\n      \"name\": \"Key Partners HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        -500\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"key_partners\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"64e98d28-ef36-433d-b114-4fa33ad646d4\",\n      \"name\": \"Key Activities HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        -160\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"key_activities\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2f929221-7e20-4ceb-b715-79b434d6357e\",\n      \"name\": \"Values proposition HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"value_proposition\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4befcdf5-0fd1-44fa-8d68-9b82e50d1f57\",\n      \"name\": \"Customer Relationship HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        440\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"customer_relationship\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6700656b-0946-497c-9fe5-a55f75455e4e\",\n      \"name\": \"Customer Segments HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        740\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"customer_segments\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3e0797c8-6fa3-40d8-b895-6250f952abfa\",\n      \"name\": \"Key Resources HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1040\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"key_resources\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"16542342-8a05-40c9-b5e7-5b0824da7850\",\n      \"name\": \"Channels HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1380\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"channels\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2513f7c3-57da-4d1c-a492-230e3124d5d9\",\n      \"name\": \"Revenue streams HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1980\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"revenue_streams\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e79ac1ac-fac8-43a9-9e7a-41f92f40df26\",\n      \"name\": \"Code1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        -820\n      ],\n      \"parameters\": {\n        \"jsCode\": \"\\nconst input = $input.first().json.output.replaceAll(\\\"\\\\n\\\",\\\"\\\")\\nreturn {\\n  \\\"title\\\":input\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4ba8158c-44f5-4dbb-a143-cd227fadb08e\",\n      \"name\": \"Cost Structure HTML Transformer\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1680\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function formatToHtmlList(inputString) {\\n  const items = inputString.split('|').map(item => item.trim());\\n\\n  let htmlOutput = '';\\n  for (let i = 0; i < items.length; i++) {\\n    if (items[i]) {\\n      htmlOutput += `<p>• ${items[i]}</p>`;\\n    }\\n  }\\n\\n  return htmlOutput;\\n}\\n\\nconst input = $input.first().json.output\\n\\nconst result = formatToHtmlList(input);\\nreturn {\\n  \\\"cost_structure\\\":result\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f80c65a9-5f1d-4979-9228-fdb8f3e6bc71\",\n      \"name\": \"Turn to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1740,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const input = $input.all()\\n// Simple merge\\n\\nconst output = {\\n  title: input[0].json.title,\\n  key_partners: input[1].json.key_partners,\\n  key_activities: input[2].json.key_activities, // combining both\\n  value_proposition: input[3].json.value_proposition,\\n  customer_relationship: input[4].json.customer_relationship,\\n  customer_segments: input[5].json.customer_segments,\\n  key_resources: input[6].json.key_resources,\\n  channels: input[7].json.channels,\\n  cost_structure : input[8].json.cost_structure,\\n  revenue_streams: input[9].json.revenue_streams\\n};\\n\\n\\nconsole.log(output);\\nreturn {\\n  \\\"final_html\\\": `<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"utf-8\\\" /> <title>Business Model Canvas</title> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <link href=\\\"https://fonts.googleapis.com/css?family=Headland+One\\\" rel=\\\"stylesheet\\\" /> <style> body { font-family: sans-serif; margin-top: 2.5vh; padding: 10px; background-color: #f4f4f4; display: flex; justify-content: center; align-items: center; height: 95vh; /* Full viewport height */ overflow: hidden; } .container { height: 100%; /* Fit the height of the screen */ aspect-ratio: 297 / 210; /* Maintain A4 aspect ratio (landscape) */ background: #fff; margin-bottom: 20px; padding: 10px 10px 80px; /* Added extra padding at the bottom */ box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); border-radius: 8px; box-sizing: border-box; overflow: hidden; } h1 { text-align: center; font-size: 24px; /* Reduced font size */ margin-bottom: 20px; color: #333; } p { padding-top: 2px; } table { width: 100%; height: 100%; border-collapse: collapse; table-layout: fixed; } table td { border: 1px solid #ddd; padding: 5px; /* Reduced padding */ vertical-align: top; font-size: 14px; /* Reduced font size */ word-wrap: break-word; background-color: transparent; /* No background color */ } table td h4 { padding: 5px; margin: 0 0 5px; /* Reduced margin */ font-size: 17px; /* Reduced font size */ color: #1b1b1b; } table td p { margin: 3px 0; /* Reduced margin */ line-height: 1.2; /* Reduced line height */ color: #555; } table td p strong { color: #000; } /* Adjust row heights */ #business-model-canvas tr:first-child { height: 30%; /* Reduced height for the upper part */ } #business-model-canvas tr:nth-child(2) { height: 25%; /* Reduced height for the second row */ } #business-model-canvas tr:last-child { height: 25%; /* Increased height for the bottom part */ } /* Print-specific styles */ @media print { body { background: none; margin: 0; } .container { box-shadow: none; margin: 0; padding: 0; } table td { font-size: 11px; /* Further reduced font size for print */ } } </style> </head> <body> <div class=\\\"container\\\"> <h1>`+output.title+` Business Model Canvas</h1> <!-- Canvas --> <table id=\\\"business-model-canvas\\\" cellspacing=\\\"0\\\"> <!-- Upper part --> <tr> <td id=\\\"key-partners\\\" colspan=\\\"2\\\" rowspan=\\\"2\\\"> <h4>Key Partners</h4> `+output.key_partners+` </td> <td id=\\\"key-activities\\\" colspan=\\\"2\\\"> <h4>Key Activities</h4> `+output.key_activities+` </td> <td id=\\\"value-propositions\\\" colspan=\\\"2\\\" rowspan=\\\"2\\\"> <h4>Value Proposition</h4> `+output.value_proposition+` </td> <td id=\\\"customer-relationships\\\" colspan=\\\"2\\\"> <h4>Customer Relationships</h4> `+output.customer_relationship+` </td> <td id=\\\"customer-segments\\\" colspan=\\\"2\\\" rowspan=\\\"2\\\"> <h4>Customer Segments</h4> `+output.customer_segments+` </td> </tr> <!-- Lower part --> <tr> <td id=\\\"key-resources\\\" colspan=\\\"2\\\"> <h4>Key Resources</h4> `+output.key_resources+` </td> <td id=\\\"channels\\\" colspan=\\\"2\\\"> <h4>Channels</h4> `+output.channels+` </td> </tr> <tr> <td id=\\\"cost-structure\\\" colspan=\\\"5\\\"> <h4>Cost Structure</h4> `+output.cost_structure+` </td> <td id=\\\"revenue-streams\\\" colspan=\\\"5\\\"> <h4>Revenue Streams</h4> `+output.revenue_streams+` </td> </tr> </table> <!-- /Canvas --> </div> </body> </html>`,\\n  \\\"title\\\" : $input.first().json.title\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7a5b2b06-75fc-4c27-971d-df3817100000\",\n      \"name\": \"HTML code to HTML file\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        2020,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"={{ $json.title }} BMC.html\"\n        },\n        \"operation\": \"toText\",\n        \"sourceProperty\": \"final_html\",\n        \"binaryPropertyName\": \"=\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f565cf6a-ebd5-45ee-8e62-9aa6e1585e36\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -740,\n        2500\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 420,\n        \"height\": 220,\n        \"content\": \"## 🔁 Changeable LLM Model\\n\\nThis template is powered by **Ollama LLM (LLaMA 3.1)** by default — but it’s fully flexible.\\n\\nYou can easily swap in any other LLM (like OpenAI, Claude, etc.) by updating the AI Agent nodes. No changes are required in the logic or formatting nodes — the system will work seamlessly.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"218ca6c2-8524-4f16-b23c-a744067b717f\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1840,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 500,\n        \"height\": 320,\n        \"content\": \"## How to get the output? \\n\\nOnce all nodes have finished processing, your complete Business Model Canvas will be available as a downloadable HTML file.\\n\\nSimply navigate to the final node titled **“HTML code to HTML file”** (at the end of the workflow). There, you’ll see two options:\\n\\n• **View** : to preview the HTML output directly in your browser\\n\\n• **Download** : to save the file locally for printing or sharing\\n\\n👉 Click on the **“Download”** button to retrieve your fully generated canvas file.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"361cf369-647e-4b89-9452-a822725f74cb\",\n      \"name\": \"Merge All Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1520,\n        460\n      ],\n      \"parameters\": {\n        \"numberInputs\": 10\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3.1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"717d59b3-8986-4193-b8fb-7125c9cbb10a\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -760,\n        2780\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 200,\n        \"content\": \"## I'm here to help!\\n\\nIf you need assistance customizing the model or have feedback to share, please don’t hesitate to reach out. Your thoughts are important to me, and I'm eager to support you in any way I can. \\n\\n**📩 sinamirshafiee@gmail.com**\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"782619e6-0ab1-4a22-b224-98b080614647\",\n  \"connections\": {\n    \"Code1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Turn to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML code to HTML file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge All Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Turn to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Title Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Ollama Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Key Partners Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Key Activities Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Value Proposition Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Customer Relationship Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Customer Segments Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Key Resources Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Channels Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Cost Structure Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Title Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Revenue Streams Generator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Channels Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Channels HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML code to HTML file\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Key Partners Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Key Partners HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Key Resources Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Key Resources HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Cost Structure Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Cost Structure HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Key Activities Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Key Activities HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Channels HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 7\n          }\n        ]\n      ]\n    },\n    \"Revenue Streams Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Revenue streams HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Key Partners Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Value Proposition Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Customer Relationship Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Customer Segments Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Key Resources Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Channels Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Cost Structure Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Revenue Streams Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Title Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Key Activities Generator\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Customer Segments Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Customer Segments HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Value Proposition Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Values proposition HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Key Partners HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Key Resources HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 6\n          }\n        ]\n      ]\n    },\n    \"Cost Structure HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 8\n          }\n        ]\n      ]\n    },\n    \"Customer Relationship Generator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Customer Relationship HTML Transformer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Key Activities HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 2\n          }\n        ]\n      ]\n    },\n    \"Revenue streams HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 9\n          }\n        ]\n      ]\n    },\n    \"Customer Segments HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 5\n          }\n        ]\n      ]\n    },\n    \"Values proposition HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 3\n          }\n        ]\n      ]\n    },\n    \"Customer Relationship HTML Transformer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge All Data\",\n            \"type\": \"main\",\n            \"index\": 4\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.lmChatOllama",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.convertToFile",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}