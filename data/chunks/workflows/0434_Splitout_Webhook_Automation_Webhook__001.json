{
  "source": "0434_Splitout_Webhook_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"8eadf351d49a11e77d3a57adf374670f06c5294af8b1b7c86a1123340397e728\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f28a0602-f02c-4f41-8bbf-dfd46d0def87\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        2020,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"Email\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d995d088-9be1-4a64-a533-d764587b3ae4\",\n      \"name\": \"Remove Duplicates\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        2480,\n        600\n      ],\n      \"parameters\": {},\n      \"retryOnFail\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b64f9bc5-7e85-41df-b27c-10d53df6809f\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        2740,\n        600\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"466cf9ce-4baf-45f9-bd70-d2041c20605e\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1204.5476340072564,\n        520\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1764.2311804548722,\n        \"height\": 309.99889350400827,\n        \"content\": \"\\n* Scraping emails from websites using an api\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"566ca1f5-b6c4-4566-97e7-59bc2d616e1c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        800\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 520.3009626085002,\n        \"height\": 249.39327996703526,\n        \"content\": \"\\n* Call the webhook using a query parameter eg \\n\\nhttp://localhost:5678/webhook/ea568868-5770-4b2a-8893-7e?Website=https://mailsafi.com\\n\\nHTTP request rest the query Website and gets the emails therein\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea95c9a3-b7c8-4288-8fdf-6504caee46f4\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        380\n      ],\n      \"parameters\": {\n        \"width\": 728.4741979436378,\n        \"height\": 430.0825742795921,\n        \"content\": \"# How to scrap emails from websites\\n\\nThis workflow shows how you can quickly build an Email scraping API using n8n.\\nUsage\\nCopy the webhook URL to your browser and add a query parameter eg {{$n8nhosteingurl/webhook/ea568868-5770-4b2a-8893-700b344c995e?Website=https://mailsafi.com\\nThis will return the email address on the website or if there is no email, the response will be \\\"workflow successfully executed\\\"\\n\\n# Make sure to use HTTP:// for your domains\\n\\nOtherwise, you may get an error. \\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"05d4e9d4-d803-4e74-b4d0-166f4873dbca\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        1360,\n        620\n      ],\n      \"webhookId\": \"ea568868-5770-4b2a-8893-700b344c995e\",\n      \"parameters\": {\n        \"path\": \"ea568868-5770-4b2a-8893-700b344c995e\",\n        \"options\": {},\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"555c8f81-25ea-4be5-b260-7b6039c705a8\",\n      \"name\": \"Get the website data\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        1600,\n        620\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.query['Website'] }}\",\n        \"options\": {}\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"e83b38b8-dc13-49eb-9482-1dbd8a9ef583\",\n      \"name\": \"Extract the emails found\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1800,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"80a8a8ec-9ac7-4545-beab-390732218548\",\n              \"name\": \"Email\",\n              \"type\": \"array\",\n              \"value\": \"={{$json.data.match(/(?:[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,})/g)}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"3fe56efc-0d7b-4e0f-8f9c-3b10ce59cb94\",\n      \"name\": \"If contains email\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2220,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"701ead8f-02ba-4689-8054-9e40d9b9f770\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.Email }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get the website data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If contains email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If contains email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Duplicates\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Duplicates\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get the website data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract the emails found\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract the emails found\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.removeDuplicates",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.if"
    ],
    "trigger": null
  }
}