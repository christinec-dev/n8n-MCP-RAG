{
  "source": "0263_Postgres_Code_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"17j2efAe10uXRc4p\",\n  \"meta\": {\n    \"instanceId\": \"95e5c2dbf167bd62714d47d959f677d4c29b5fcbb7d183f4fe2396c33badeac6\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Auto WordPress Blog Generator (GPT + Postgres + WP Media)\",\n  \"tags\": [\n    {\n      \"id\": \"k8Hqq1bbCQoesJjj\",\n      \"name\": \"Wordpress\",\n      \"createdAt\": \"2025-02-26T04:04:38.319Z\",\n      \"updatedAt\": \"2025-02-26T04:04:38.319Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"f71a8a34-5d88-48b0-bf56-44c95d970abd\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -1120,\n        -560\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\",\n              \"triggerAtMinute\": {}\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8ce11fcd-806c-44ea-aa5f-015599eacc98\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2060,\n        -20\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-2025-04-14\",\n          \"cachedResultName\": \"gpt-4.1-2025-04-14\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"BSiASwH9CasrT3uK\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c9450a63-a89e-46eb-b083-b0f40d7b797c\",\n      \"name\": \"Download Image\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2620,\n        100\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.image_url }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\",\n              \"outputPropertyName\": \"imagedownloaded\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"f477482d-d9b6-4d83-b707-dd19da90e25e\",\n      \"name\": \"Prepare Post JSON\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3440,\n        -520\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all();\\n\\nlet image = null;\\nlet contentBlock = null;\\nlet categoryBlock = null;\\nlet titleBlock = null;\\n\\n// Inspect all incoming JSON\\nfor (const item of items) {\\n  const json = item.json;\\n\\n  // Detect image\\n  if (json?.source_url && json?.media_type === 'image') {\\n    image = json;\\n    continue;\\n  }\\n\\n  // Detect GPT-generated content\\n  if (typeof json.content === 'string' && json.content.includes('<!-- wp:paragraph')) {\\n    contentBlock = json;\\n    continue;\\n  }\\n\\n  // Detect category block\\n  if (json?.category_id && json?.description) {\\n    categoryBlock = json;\\n    continue;\\n  }\\n\\n  // Detect GPT-generated title from AI output\\n  if (typeof json.output === 'string') {\\n    titleBlock = json;\\n    continue;\\n  }\\n\\n  // Fallback title if nothing else matched\\n  if (typeof json.title === 'string') {\\n    titleBlock = json;\\n  }\\n}\\n\\nreturn [{\\n  json: {\\n    title: $input.first().json.title,\\n    content: contentBlock?.content || '<p>No content</p>',\\n    status: 'publish',\\n    categories: [categoryBlock?.category_id || 1],\\n    featured_media: image?.id || null,\\n  }\\n}];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"12191b30-702c-44dd-bfaf-68de02f627b1\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        3200,\n        -520\n      ],\n      \"parameters\": {\n        \"numberInputs\": 3\n      },\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"9c21f5ce-b353-4193-a93d-a034e025a1a0\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        640,\n        -20\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-mini-2025-04-14\",\n          \"cachedResultName\": \"gpt-4.1-mini-2025-04-14\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"BSiASwH9CasrT3uK\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"723d9202-7fb0-43ca-8945-8bd4b5030eb8\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2420,\n        -1340\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1180,\n        \"height\": 1780,\n        \"content\": \"# ü§ñ WordPress Blog Automation Workflow\\n\\n## üõ† SETUP (do once before running the flow)\\n\\n### 1 ¬∑ DOMAIN  \\nAdd one variable anywhere **before** the workflow starts (via Set node, `.env`, or instance config):\\n```\\nDOMAIN=https://your-wordpress-site.com\\n```\\nThis will be used in all WordPress REST API calls.\\n\\n---\\n\\n### 2 ¬∑ CREDENTIALS (create in **n8n ‚Üí Credentials**)\\n| Credential Name | Purpose | Minimum Scope |\\n|-----------------|---------|---------------|\\n| `YOUR_WORDPRESS_CREDENTIAL` | WordPress API | `POST /media`, `POST /posts` |\\n| `YOUR_POSTGRES_CREDENTIAL` | PostgreSQL access for used categories | DB + table created in step 3 |\\n| `YOUR_OPENAI_CREDENTIAL` | OpenAI key for GPT | GPT-4-mini or better |\\n\\nüß† Keep the names **exactly** ‚Äî the workflow references them directly.\\n\\n---\\n\\n### 3 ¬∑ POSTGRESQL (one-time bootstrap)\\n\\n### üñ•Ô∏è Terminal method (fastest ‚Äî paste into `sudo -u postgres psql`)\\n\\n```sql\\n-- 3-A ¬∑ Create database and user\\nCREATE DATABASE n8n_blog;\\nCREATE USER n8n_writer WITH PASSWORD 'S3cur3-Pa55';\\nGRANT ALL PRIVILEGES ON DATABASE n8n_blog TO n8n_writer;\\n\\\\c n8n_blog n8n_writer  -- Reconnect to DB as the new user\\n\\n-- 3-B ¬∑ Create the tracking table\\nCREATE TABLE IF NOT EXISTS public.used_categories (\\n  category_id INTEGER PRIMARY KEY,\\n  name        TEXT,\\n  description TEXT,\\n  title       TEXT,\\n  used_at     TIMESTAMPTZ\\n);\\nGRANT INSERT, UPDATE, SELECT ON public.used_categories TO n8n_writer;\\n```\\n\\n### üîó Then configure the credential in n8n\\n\\n```\\nName:       YOUR_POSTGRES_CREDENTIAL\\nHost:       127.0.0.1\\nPort:       5432\\nDatabase:   n8n_blog\\nUser:       n8n_writer\\nPassword:   S3cur3-Pa55\\nSchema:     public\\n```\\n\\nüí° No terminal access?  \\nCreate a temporary **Postgres ‚Üí Execute Query** node with the same SQL, run once, then delete it.\\n\\n---\\n\\n### 4 ¬∑ FIRST TEST  \\nRun the first 3‚Äì5 nodes manually to verify:\\n- ‚úÖ WordPress auth works  \\n- ‚úÖ DB connection + writing works  \\n- ‚úÖ GPT responds as expected  \\n\\nOnce confirmed, enable the **Schedule Trigger** to automate.\\n\\n---\\n\\n## ‚úÖ WHAT THIS WORKFLOW DOES\\n\\n- Loads all WP categories and filters out excluded ones  \\n- Picks the **least-used category** from your DB  \\n- Generates a **unique, well-structured WP article** using GPT (TOC, blocks, CTA)  \\n- Generates a **cover image** and uploads it to `/media`  \\n- Publishes the post to `/posts` and updates usage in your PostgreSQL DB\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"550017b6-481b-4591-8d87-04761244ef3b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1180,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"‚è∞ Triggers this workflow every few hours.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d6ae5db-3d88-4e3a-8567-6e38a6002acd\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -700,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üì• Loads all WordPress categories.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ef86b3a-18a1-42b7-896c-ef2352148b38\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üßπ Filters out excluded category IDs.\\n\\nChoose them yourself, some categories are not for AI Agent, like reviews or same\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3cc6a088-0698-478d-896b-9af0f5f03f00\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -220,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üóÉ Loads recently used categories from DB.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9eccdda9-1cee-42d1-8451-24b0104917b5\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        20,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üéØ Picks least-used category for next post.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1f9a4bb2-c482-47d2-9ebd-4ff1be58b3d8\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        340,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üìÑ Loads 10 latest article titles for the selected category.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5faba628-67c5-4e1b-889e-7cc1b72a23d0\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 300,\n        \"height\": 460,\n        \"content\": \"üß† Generates a unique article title with GPT.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d23c4134-a06e-4630-a5e5-8a9b90259d4c\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üßæ Prepares the new article title.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"da20f973-6889-460c-84b8-cbff0c6ceaa2\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üîÄ Merges category + title data.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2048e683-1b37-49e4-9bc5-2530becf26ee\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1460,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üì¶ Combines all post metadata into one object.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a5aafb45-6e89-435b-9b41-63d2b5fd8cd5\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1700,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üìù Saves used category and title to DB.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f63a22c4-2f78-4820-87d4-eb1510f51bcc\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2000,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 300,\n        \"height\": 460,\n        \"content\": \"‚úçÔ∏è Writes full WordPress-style HTML article.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"24721fd7-cb69-44b6-a48d-91f195e861cc\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2320,\n        -480\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üßæ Extracts content block from AI output.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f5bd3e8b-c188-494e-b662-ce5722848ae4\",\n      \"name\": \"Sticky Note14\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2320,\n        -100\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üñº Prepares a placeholder cover image URL.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"933fe208-7c8e-4683-a09b-bfd91ed22bef\",\n      \"name\": \"Sticky Note15\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2560,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"‚¨áÔ∏è Downloads the cover image.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"78053d06-b008-403d-b6a1-d5546814d1e9\",\n      \"name\": \"Sticky Note16\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2800,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üì§ Uploads image to WordPress media.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d11f85b0-664f-4c63-b34b-a510480957e7\",\n      \"name\": \"Sticky Note17\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3140,\n        -720\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üîó Merges image + content + category info.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"01fcdc38-8627-4818-8f78-b45681d22d26\",\n      \"name\": \"Sticky Note18\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3380,\n        -720\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üì¨ Prepares final JSON body for the WP post.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"10f89350-e129-41df-803c-450f3fb07193\",\n      \"name\": \"Sticky Note19\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3620,\n        -720\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"üöÄ Publishes post to your WordPress site.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bd082511-91aa-425f-9bf3-cadb3900c749\",\n      \"name\": \"Sticky Note20\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -700,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 220,\n        \"height\": 300,\n        \"content\": \"Make sure:\\n- Your WordPress site allows public access to `/wp-json/wp/v2/categories`\\n- You have at least 1 category created\\n- No security plugin (like Wordfence) is blocking REST API\\n\\nNo credential needed for public category fetch.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5f46d958-b7de-405e-a95e-57a9c0366b52\",\n      \"name\": \"Sticky Note21\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -220,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 220,\n        \"height\": 300,\n        \"content\": \"Make sure:\\n- You've created the table (see setup note)\\n- Credential `YOUR_POSTGRES_CREDENTIAL` is configured\\n- DB user has `SELECT` rights on the table\\n\\nTip: This selects the least recently used category for the next post.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3f90d8c5-7dd9-41c4-a862-e21942fdc87d\",\n      \"name\": \"Load Categories\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -640,\n        -560\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.domain }}/wp-json/wp/v2/categories?per_page=100 \",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8b2cb2f8-2a2e-4e92-81b6-36e9e2105f94\",\n      \"name\": \"Category Filter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -400,\n        -560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const excludeIds = [1, 11, 12, 13, 15, 17, 18, 36, 37, 38, 39];\\n\\nreturn $input.all()\\n  .filter(item => !excludeIds.includes(item.json.id))\\n  .map(item => {\\n    const { id, name, description, link } = item.json;\\n    return {\\n      json: { id, name, description, link }\\n    };\\n  });\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"083202d5-7053-4775-b053-2e503ce7d73f\",\n      \"name\": \"Selecting recent\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"position\": [\n        -160,\n        -560\n      ],\n      \"parameters\": {\n        \"query\": \"SELECT category_id, MAX(used_at) AS last_used_at\\nFROM used_categories\\nGROUP BY category_id\\nORDER BY last_used_at ASC;\",\n        \"options\": {},\n        \"operation\": \"executeQuery\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"JKCOXnEh1Bqg4Gad\",\n          \"name\": \"YOUR_POSTGRES_CREDENTIAL\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 2.6,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"98f3ec81-f1f9-425b-83b0-2d5732acb19e\",\n      \"name\": \"Picks Less Used\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        80,\n        -560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const categories = $items(\\\"Category Filter\\\");\\nconst usedRows = $items(\\\"Selecting recent\\\");\\n\\nif (!categories || categories.length === 0) {\\n  throw new Error(\\\"No category in Code2\\\");\\n}\\n\\nif (!usedRows || usedRows.length === 0) {\\n  return [categories[0]];\\n}\\n\\nconst usedMap = new Map(\\n  usedRows.map(row => {\\n    const id = row.json.category_id;\\n    const time = new Date(row.json.last_used_at || row.json.used_at).getTime();\\n    return [id, time];\\n  })\\n);\\n\\nlet selected = null;\\nlet minTime = Infinity;\\n\\nfor (const cat of categories) {\\n  const id = cat.json.id;\\n  const lastUsed = usedMap.get(id) ?? 0;\\n\\n  if (lastUsed < minTime) {\\n    minTime = lastUsed;\\n    selected = cat;\\n  }\\n}\\n\\nreturn [selected || categories[0]];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8f94b488-d3fb-4016-a8ac-ed0e13f78190\",\n      \"name\": \"10 latest headlines\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"position\": [\n        400,\n        -200\n      ],\n      \"parameters\": {\n        \"query\": \"SELECT name, description \\nFROM used_categories \\nWHERE category_id = {{ $json.id }}\\nORDER BY used_at DESC \\nLIMIT 10;\",\n        \"options\": {},\n        \"operation\": \"executeQuery\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"JKCOXnEh1Bqg4Gad\",\n          \"name\": \"YOUR_POSTGRES_CREDENTIAL\"\n        }\n      },\n      \"typeVersion\": 2.6,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"04349d4d-06cc-48fc-88ae-588ec527fca4\",\n      \"name\": \"New article title\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        960,\n        -200\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return [\\n  {\\n    json: {\\n      title: $input.first().json.output\\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9d145f01-ff77-4c72-bec2-d8ead60d79e5\",\n      \"name\": \"AI Agent SEO Headings\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        600,\n        -200\n      ],\n      \"parameters\": {\n        \"text\": \"=Based on the category \\\"{{ $('Picks Less Used').item.json.name }}\\\"  \\nwith the description:  \\n{{ $('Picks Less Used').item.json.description }}\\n\\nHere are existing article titles already published:  \\n{{ $items(\\\"10 latest headlines\\\").map(i => i.json.description).join(\\\"\\\\n\\\") }}\\n\\nYour task:  \\n- Come up with a **new unique article title** that fits this category  \\n- The topic should be narrow, practical, and not duplicate any existing titles  \\n- Make it clickable, relevant, and professional  \\n- Do **not** reuse or partially copy old titles  \\n- Style should be expert-level, insightful, and engaging ‚Äî no clickbait\\n\\nImportant:  \\n- Output **only** the new title (no extra words, no formatting)  \\n- The title must be ready for publication as-is (plain text)\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"29ad413c-4ee4-4d96-8793-3a8cb4a4ce1b\",\n      \"name\": \"AI Agent SEO writer\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2020,\n        -200\n      ],\n      \"parameters\": {\n        \"text\": \"=You are writing a blog post using native WordPress HTML blocks.\\n\\nüß± Follow this exact structure:\\n\\n- Paragraphs inside: <!-- wp:paragraph --> ... <!-- /wp:paragraph -->\\n- Level 3 headings inside: <!-- wp:heading {\\\"level\\\":3} --> ... <!-- /wp:heading -->\\n- Level 4 headings inside: <!-- wp:heading {\\\"level\\\":4} --> ... <!-- /wp:heading -->\\n- Lists inside: <!-- wp:list --> ... <!-- /wp:list -->\\n- Table of contents using: <!-- wp:yoast-seo/table-of-contents --> with anchor links\\n- Final section: conclusion in list format\\n- Final block: call-to-action with the link \\\"{{ $('Combines full post meta').item.json.link }}\\\" or {{$node[\\\"Config\\\"].json[\\\"domain\\\"]}}\\n\\nüéØ Use the topic info from:\\n- name: {{ $json.name }}\\n- description: {{ $json.description }}\\n- link: {{ $('Combines full post meta').item.json.link }}\\n\\n---\\n\\n‚úçÔ∏è General writing guidelines:\\n- The main theme always follows `name` and `description`\\n- Each post must focus on a new subtopic (narrower than the main theme)\\n- The article must be useful, professional, and well-structured\\n- Avoid fluff or repetition ‚Äî deliver actionable advice\\n- Output should follow valid WordPress HTML blocks strictly\\n\\n---\\n\\nüí° Examples of subtopics for \\\"{{ $json.name }}\\\":\\n- Top 5 beginner tools in {{ $json.name }}\\n- How to choose the right {{ $json.name }} without risks\\n- Common mistakes in using {{ $json.name }}\\n- How to monetize with CPA or RevShare in {{ $json.name }}\\n- Smart strategies to scale {{ $json.name }} traffic in 2025\\n- Proven international platforms in {{ $json.name }} ‚Äî worth trying?\\n- What leads to account bans in {{ $json.name }}\\n- Top scaling errors in {{ $json.name }}\\n\\nIn every post, generate a **new and unique** subtopic ‚Äî no repeats.\\n\\n---\\n\\nüö® Important:\\nOnly output raw WordPress blocks ‚Äî no additional formatting or notes.\\n\\nüß± Structure Example:\\n\\n1. Introduction:\\n<!-- wp:paragraph -->\\n<p>A short, attention-grabbing intro explaining what the article covers and why it matters.</p>\\n<!-- /wp:paragraph -->\\n\\n2. Table of Contents:\\n<!-- wp:yoast-seo/table-of-contents -->\\n<div class=\\\"wp-block-yoast-seo-table-of-contents yoast-table-of-contents\\\">\\n  <h2>Contents</h2>\\n  <ul>\\n    <li><a href=\\\"#h-block-1\\\">Block 1</a></li>\\n    <li><a href=\\\"#h-block-2\\\">Block 2</a></li>\\n    <li><a href=\\\"#h-block-3\\\">Block 3</a></li>\\n    <li><a href=\\\"#h-conclusion\\\">Conclusion</a></li>\\n  </ul>\\n</div>\\n<!-- /wp:yoast-seo/table-of-contents -->\\n\\n3. Main Content Blocks:\\n<!-- wp:heading {\\\"level\\\":3} -->\\n<h3 class=\\\"wp-block-heading\\\" id=\\\"h-block-1\\\"><strong><mark style=\\\"background-color:var(--accent)\\\" class=\\\"has-inline-color has-base-3-color\\\">Block Title</mark></strong></h3>\\n<!-- /wp:heading -->\\n\\n<!-- wp:paragraph -->\\n<p>Informative paragraph with practical insights.</p>\\n<!-- /wp:paragraph -->\\n\\n<!-- wp:paragraph -->\\n<p>Optional second paragraph ‚Äî avoid repetition.</p>\\n<!-- /wp:paragraph -->\\n\\n4. Actionable Tips:\\n<!-- wp:list -->\\n<ul class=\\\"wp-block-list\\\">\\n  <li><strong>Tip:</strong> Keep it short and valuable</li>\\n  <li><strong>Example:</strong> Provide a link or quick example</li>\\n</ul>\\n<!-- /wp:list -->\\n\\n5. Conclusion:\\n<!-- wp:heading {\\\"level\\\":3} -->\\n<h3 class=\\\"wp-block-heading\\\" id=\\\"h-conclusion\\\"><strong><mark style=\\\"background-color:var(--accent)\\\" class=\\\"has-inline-color has-base-3-color\\\">Conclusion</mark></strong></h3>\\n<!-- /wp:heading -->\\n\\n<!-- wp:paragraph -->\\n<p>Summarize key takeaways and motivate the reader to take action.</p>\\n<!-- /wp:paragraph -->\\n\\n6. Call to Action:\\n<!-- wp:paragraph -->\\n<p>Read more at <strong><mark style=\\\"background-color:var(--accent)\\\" class=\\\"has-inline-color has-base-3-color\\\">{{$node[\\\"Config\\\"].json[\\\"domain\\\"]}}/</mark></strong></p>\\n<!-- /wp:paragraph -->\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"5b1efebe-f9e7-4088-9363-75280ba36528\",\n      \"name\": \"Merge heading\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1280,\n        -540\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"187423ce-b80a-4e28-bdd1-02818a6dcd8f\",\n      \"name\": \"Combines full post meta\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1520,\n        -540\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let data = {};\\n$input.all().forEach(item => {\\n  Object.assign(data, item.json);\\n});\\nreturn [{ json: data }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"85c0e9e2-6f2b-4bd4-9f71-f7efe940ed14\",\n      \"name\": \"Updating posts DB\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"position\": [\n        1760,\n        -540\n      ],\n      \"parameters\": {\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"used_categories\",\n          \"cachedResultName\": \"used_categories\"\n        },\n        \"schema\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"public\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"name\": \"={{ $json.name }}\",\n            \"title\": \"={{ $json.title }}\",\n            \"used_at\": \"={{ new Date().toISOString() }}\",\n            \"category_id\": \"={{ $json.id }}\",\n            \"description\": \"={{ $json.description }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"id\",\n              \"type\": \"number\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"id\",\n              \"defaultMatch\": true,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"category_id\",\n              \"type\": \"number\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"category_id\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": false\n            },\n            {\n              \"id\": \"used_at\",\n              \"type\": \"dateTime\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"used_at\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": false\n            },\n            {\n              \"id\": \"description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": false\n            },\n            {\n              \"id\": \"title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": false\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"category_id\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"upsert\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"JKCOXnEh1Bqg4Gad\",\n          \"name\": \"YOUR_POSTGRES_CREDENTIAL\"\n        }\n      },\n      \"typeVersion\": 2.6\n    },\n    {\n      \"id\": \"73975cf0-165c-4f53-aff9-12872a4dd228\",\n      \"name\": \"Extracting output\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2380,\n        -280\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return [{\\n  json: {\\n    content: $input.first().json.output,\\n  }\\n}];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a5030427-0bc1-499a-903e-e10ba81a9b0d\",\n      \"name\": \"Placeholder creator\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2380,\n        100\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const name = $('Updating posts DB').first().json.name || \\\"{{ $json.domain }}\\\";\\nconst encoded = encodeURIComponent(name); \\n\\nreturn {\\n  image_url: `https://placehold.co/1200x675/FF0000/FFFFFF.png?text=${encoded}&font=montserrat`\\n};\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6f0f0202-3803-48ef-b8f5-dd56a023c43f\",\n      \"name\": \"Media Upload to WP\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2860,\n        100\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Config').first().json.domain }}/wp-json/wp/v2/media\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"binaryData\",\n        \"sendHeaders\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Disposition\",\n              \"value\": \"attachment; filename=crypto.webp\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"image/png\"\n            }\n          ]\n        },\n        \"inputDataFieldName\": \"imagedownloaded\",\n        \"nodeCredentialType\": \"wordpressApi\"\n      },\n      \"credentials\": {\n        \"wordpressApi\": {\n          \"id\": \"7NOAxTvRC1RY2TSN\",\n          \"name\": \"Wordpress account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"0621bad7-e7bf-4aae-bbf3-2e1f571d81d8\",\n      \"name\": \"Post to WP\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        3680,\n        -520\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Config').first().json.domain }}/wp-json/wp/v2/posts\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"title\",\n              \"value\": \"={{ $json[\\\"title\\\"] }}\"\n            },\n            {\n              \"name\": \"content\",\n              \"value\": \"={{ $json.content }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"value\": \"={{ $json.status }}\"\n            },\n            {\n              \"name\": \"featured_media\",\n              \"value\": \"={{ $json[\\\"featured_media\\\"] }}\"\n            },\n            {\n              \"name\": \"categories[0]\",\n              \"value\": \"={{ $json[\\\"categories\\\"][0] }}\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"wordpressApi\"\n      },\n      \"credentials\": {\n        \"wordpressApi\": {\n          \"id\": \"7NOAxTvRC1RY2TSN\",\n          \"name\": \"Wordpress account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"28f3b69a-22a2-4448-a9d0-a5fd42e1ed2c\",\n      \"name\": \"No Operation, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        3900,\n        -520\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c98d9193-1dd9-493c-bf76-b72de8e53e28\",\n      \"name\": \"Sticky Note22\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -940,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"! Set your WordPress domain inside the ‚ÄúConfig‚Äù Set node.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c881f9f-dcf1-4bf0-889b-0738d1ff49a4\",\n      \"name\": \"Config\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -880,\n        -560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"d7165db3-6fc8-4398-aa16-29a34ff27d78\",\n              \"name\": \"domain\",\n              \"type\": \"string\",\n              \"value\": \"https://yourdomain.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f787c571-bcc3-47d6-82ca-f138fa2922e1\",\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare Post JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Config\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Load Categories\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Post to WP\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No Operation, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge heading\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combines full post meta\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Media Upload to WP\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Category Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Selecting recent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Load Categories\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Category Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Picks Less Used\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"10 latest headlines\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge heading\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Config\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Selecting recent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Picks Less Used\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extracting output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"New article title\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge heading\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent SEO writer\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare Post JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Post to WP\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Updating posts DB\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent SEO writer\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Media Upload to WP\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 2\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent SEO Headings\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"10 latest headlines\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent SEO Headings\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent SEO writer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Placeholder creator\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extracting output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Placeholder creator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent SEO Headings\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"New article title\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combines full post meta\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Updating posts DB\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.merge",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.postgres",
      "n8n-nodes-base.code",
      "n8n-nodes-base.postgres",
      "n8n-nodes-base.code",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.code",
      "n8n-nodes-base.postgres",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set"
    ],
    "trigger": "schedule trigger"
  }
}