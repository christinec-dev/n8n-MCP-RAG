{
  "source": "0875_Googledrivetool_Extractfromfile_Import_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"fb5b682b-5e30-497e-b465-c3369bb3c2e3\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -32,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 680,\n        \"height\": 660,\n        \"content\": \"## 1. Set up an MCP Server Trigger\\n[Read more about the MCP Server Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cfc2c7f1-a6ee-42a9-b955-e5bce012b6e1\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 380,\n        \"height\": 100,\n        \"content\": \"### Always Authenticate Your Server!\\nBefore going to production, it's always advised to enable authentication on your MCP server trigger.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"79586d35-0582-4da8-91da-5bc8451c2089\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        800,\n        360\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"operation\"\n            },\n            {\n              \"name\": \"folderId\"\n            },\n            {\n              \"name\": \"fileId\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"02aee033-58e8-4f33-a18d-b872840e81d8\",\n      \"name\": \"Google Drive MCP Server\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpTrigger\",\n      \"position\": [\n        160,\n        160\n      ],\n      \"webhookId\": \"a289c719-fb71-4b08-97c6-79d12645dc7e\",\n      \"parameters\": {\n        \"path\": \"a289c719-fb71-4b08-97c6-79d12645dc7e\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e0e50653-d98a-4ad4-a2ed-e1b73332c380\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        680,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1340,\n        \"height\": 860,\n        \"content\": \"## 2. Handle Multiple Binary Formats via Conversion and AI\\n[Read more about the PostgreSQL Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/)\\n\\nMCP clients (or rather, the AI agents) still expect and require text responses from our MCP server.\\nN8N can provide the right conversion tools to parse most text formats such as PDF, CSV and XML.\\nFor images, audio and video, consider using multimodal LLMs to describe or transcribe the file instead.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6be1ff49-5edc-42d2-87de-09d207ee7733\",\n      \"name\": \"Download File1\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        1160,\n        360\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.fileId }}\"\n        },\n        \"options\": {\n          \"googleFileConversion\": {\n            \"conversion\": {\n              \"docsToFormat\": \"text/plain\",\n              \"slidesToFormat\": \"application/pdf\"\n            }\n          }\n        },\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"91b0a549-0494-48a1-bdf3-6c2b91409d01\",\n      \"name\": \"FileType\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1340,\n        320\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"pdf\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"7b6958ce-d553-4379-a5d6-743f39b342d0\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $binary.data.mimeType }}\",\n                    \"rightValue\": \"application/pdf\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"csv\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"d0816a37-ac06-49e3-8d63-17fcd061e33f\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $binary.data.mimeType }}\",\n                    \"rightValue\": \"text/csv\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"image\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"589540e1-1439-41e3-ba89-b27f5e936190\",\n                    \"operator\": {\n                      \"type\": \"boolean\",\n                      \"operation\": \"true\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{\\n[\\n  'image/jpeg',\\n  'image/jpg',\\n  'image/png',\\n  'image/gif'\\n].some(mimeType => $binary.data.mimeType === mimeType)\\n}}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"audio\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"b8fc61a1-6057-4db3-960e-b8ddcbdd0f31\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $binary.data.mimeType }}\",\n                    \"rightValue\": \"audio\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"video\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"959d65a6-372f-4978-b2d1-f28aa1e372c6\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $binary.data.mimeType }}\",\n                    \"rightValue\": \"video\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"d88ed202-1121-41db-859d-b31d53d46292\",\n      \"name\": \"Operation\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        980,\n        360\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"ReadFile\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"b03bb746-dc4e-469c-b8e6-a34c0aa8d0a6\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.operation }}\",\n                    \"rightValue\": \"readFile\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7e8791e6-24c2-441a-8efb-7f4375f2519b\",\n      \"name\": \"Extract from PDF\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1620,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b33623c-cea4-4a83-80ef-f852b9a3d126\",\n      \"name\": \"Extract from CSV\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1620,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"encoding\": \"utf-8\",\n          \"headerRow\": false,\n          \"relaxQuotes\": true,\n          \"includeEmptyCells\": true\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6ca2542d-225e-4a65-b5ce-3edafb11379c\",\n      \"name\": \"Get PDF Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1780,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a481cde3-b8ec-4d97-aa13-4668bd66c24d\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3d1c4aa6-cac1-4957-ab7e-3134368e4b53\",\n      \"name\": \"Get CSV Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1780,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a481cde3-b8ec-4d97-aa13-4668bd66c24d\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n$input.all()\\n  .map(item => item.json.row.map(cell => `\\\"${cell}\\\"`).join(','))\\n  .join('\\\\n')\\n}}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"141444f9-e937-41f9-ab97-09624646ddba\",\n      \"name\": \"Read File From GDrive\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        400,\n        380\n      ],\n      \"parameters\": {\n        \"name\": \"ReadFile\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Call this tool to download and read the contents of a file within google drive.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"fileId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fileId', ``, 'string') }}\",\n            \"folderId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('folderId', ``, 'string') }}\",\n            \"operation\": \"readFile\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"folderId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"folderId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"fileId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"fileId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"b5851527-0b57-447b-ac8c-10408a684862\",\n      \"name\": \"Search Files from Gdrive\",\n      \"type\": \"n8n-nodes-base.googleDriveTool\",\n      \"position\": [\n        240,\n        380\n      ],\n      \"parameters\": {\n        \"limit\": 10,\n        \"filter\": {\n          \"driveId\": {\n            \"mode\": \"list\",\n            \"value\": \"My Drive\"\n          },\n          \"whatToSearch\": \"files\"\n        },\n        \"options\": {},\n        \"resource\": \"fileFolder\",\n        \"queryString\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Search_Query', ``, 'string') }}\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"98197c91-c7e9-4fbb-a2b1-c16c873fa0a1\",\n      \"name\": \"Analyse Image\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1620,\n        440\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\",\n          \"cachedResultName\": \"GPT-4O-MINI\"\n        },\n        \"options\": {},\n        \"resource\": \"image\",\n        \"inputType\": \"base64\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"b44a787a-c670-47e1-b87e-d880425ce610\",\n      \"name\": \"Transcribe Audio\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1620,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"1e1a358d-769e-48c9-bf27-6a3cfaaacb14\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -500,\n        -420\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 1060,\n        \"content\": \"## Try It Out!\\n### This n8n demonstrates how to build a simple Google Drive MCP server to search and get contents of files from Google Drive.\\n\\nThis MCP example is based off an official MCP reference implementation which can be found here -https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive\\n\\n### How it works\\n* A MCP server trigger is used and connected to 1x Google Drive tool and 1x Custom Workflow tool.\\n* The Google Drive tool is set to perform a search on files within our Google Drive folder.\\n* The Custom Workflow tool downloads target files found in our drive and converts the binaries to their text representation. Eg. PDFs have only their text contents extracted and returned to the MCP client.\\n\\n### How to use\\n* This Google Drive MCP server allows any compatible MCP client to manage a person or shared Google Drive. Simple select a drive or for better control, specify a folder within the drive to scope the operations to.\\n* Connect your MCP client by following the n8n guidelines here - https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\\n* Try the following queries in your MCP client:\\n  * \\\"Please help me search for last month's expense reports.\\\"\\n * \\\"What does the company policy document say about cancellations and refunds?\\\"\\n\\n### Requirements\\n* Google Drive for documents.\\n* OpenAI for image and audio understanding.\\n* MCP Client or Agent for usage such as Claude Desktop - https://claude.ai/download\\n\\n### Customising this workflow\\n* Add additional capabilities such as renaming, moving and/or deleting files.\\n* Remember to set the MCP server to require credentials before going to production and sharing this MCP server with others!\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"FileType\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract from PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Extract from CSV\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Analyse Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Transcribe Audio\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        []\n      ]\n    },\n    \"Operation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download File1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download File1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"FileType\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from CSV\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get CSV Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get PDF Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Read File From GDrive\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Google Drive MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search Files from Gdrive\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Google Drive MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Operation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "@n8n/n8n-nodes-langchain.mcpTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "n8n-nodes-base.googleDriveTool",
      "@n8n/n8n-nodes-langchain.openAi",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}