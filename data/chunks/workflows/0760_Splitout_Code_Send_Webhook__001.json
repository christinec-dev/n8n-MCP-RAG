{
  "source": "0760_Splitout_Code_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"e893e48c-1b69-413a-90d7-ad6ce5987e7c\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -180,\n        -60\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c42e95b-705d-43ae-91ce-1029334b9e9a\",\n      \"name\": \"Retrieve detailed call data\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        60,\n        40\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.gong.io/v2/calls/extensive\",\n        \"options\": {\n          \"fullResponse\": true\n        },\n        \"requestMethod\": \"POST\",\n        \"authentication\": \"genericCredentialType\",\n        \"jsonParameters\": true,\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"bodyParametersJson\": \"={\\n  \\\"contentSelector\\\": {\\n    \\\"context\\\": \\\"Extended\\\",\\n    \\\"contextTiming\\\": [\\\"Now\\\", \\\"TimeOfCall\\\"],\\n    \\\"exposedFields\\\": {\\n      \\\"collaboration\\\": {\\n        \\\"publicComments\\\": true\\n      },\\n      \\\"content\\\": {\\n        \\\"pointsOfInterest\\\": true,\\n        \\\"structure\\\": true,\\n        \\\"topics\\\": true,\\n        \\\"trackers\\\": true\\n      },\\n      \\\"interaction\\\": {\\n        \\\"personInteractionStats\\\": true,\\n        \\\"questions\\\": true,\\n        \\\"speakers\\\": true,\\n        \\\"video\\\": true\\n      },\\n      \\\"media\\\": false,\\n      \\\"parties\\\": true\\n    }\\n  },\\n  \\\"filter\\\": {\\n    \\\"callIds\\\": [\\\"{{ $json['calldata[0].calls'].id }}\\\"]\\n  }\\n}\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"Bz7PHFY0lgEhLsC0\",\n          \"name\": \"Giulio Gong API\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"69c9ef1a-9ef4-4c3f-ab62-a5c9b2a10a4e\",\n      \"name\": \"Get transcript\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        60,\n        -140\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.gong.io/v2/calls/transcript?callIds=1807130744801961509\",\n        \"options\": {\n          \"fullResponse\": true\n        },\n        \"requestMethod\": \"POST\",\n        \"authentication\": \"genericCredentialType\",\n        \"jsonParameters\": true,\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"bodyParametersJson\": \"={\\\"filter\\\":{\\\"callIds\\\":[\\\"{{ $json['calldata[0].calls'].id }}\\\"]}}\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"Bz7PHFY0lgEhLsC0\",\n          \"name\": \"Giulio Gong API\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a9643d2c-6245-4c40-92ee-49eb667e3348\",\n      \"name\": \"Join Transcript to String\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        260,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c9828e0c-fce4-487d-b5cb-bff625cb7c8e\",\n              \"name\": \"Conversation\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.body.callTranscripts, '[].transcript[].{\\\"speaker\\\": speakerId, \\\"text\\\": sentences[].text}') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ce7cce2a-95b2-4d74-865d-d1af028e16de\",\n      \"name\": \"Isolate Notion Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2720,\n        -100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ee14c39a-1590-4262-b5ab-36640a6e3c31\",\n              \"name\": \"metaData.CompanyName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.sfOpp[0].Name }}\"\n            },\n            {\n              \"id\": \"0d323985-076c-456f-bf4c-d9520b07f73d\",\n              \"name\": \"Attendees.internal\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].emailAddress') }}\"\n            },\n            {\n              \"id\": \"ee040180-fce4-4d68-a406-26a88a383c14\",\n              \"name\": \"metaData.title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.title }}\"\n            },\n            {\n              \"id\": \"dea503f9-d575-4804-bbe7-0dcf7d5fbea4\",\n              \"name\": \"metaData.started\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.started }}\"\n            },\n            {\n              \"id\": \"91fa2545-6a02-43e6-b893-4d3133540a5c\",\n              \"name\": \"metaData.GongCallID\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.id }}\"\n            },\n            {\n              \"id\": \"c0cbfa8b-40d1-4838-a375-88ea8eb85170\",\n              \"name\": \"metaData.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.url }}\"\n            },\n            {\n              \"id\": \"d10a0184-f17c-4fd6-aed5-72656e15f856\",\n              \"name\": \"Conversation\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].conversationText }}\"\n            },\n            {\n              \"id\": \"02eb0113-7e52-4931-bd10-3f2bee87d984\",\n              \"name\": \"Attendees.external\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"\n            },\n            {\n              \"id\": \"c2183c7b-d552-4a16-bb08-c9ed247f8111\",\n              \"name\": \"Attendees.externalNames\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].name') }}\"\n            },\n            {\n              \"id\": \"a232bd40-ae56-4c12-8b3f-9062d4880415\",\n              \"name\": \"Attendees.internalNames\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].name') }}\"\n            },\n            {\n              \"id\": \"99f7143e-af6c-45d2-b3a1-c5169c6632eb\",\n              \"name\": \"metaData.Integrations\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json['calldata[1].integrations'] }}\"\n            },\n            {\n              \"id\": \"7fe14a89-5fda-4594-8b5a-6fbd8a519db9\",\n              \"name\": \"metaData.Competitors\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json['calldata[2].competitors'] }}\"\n            },\n            {\n              \"id\": \"29fb3dbe-071c-4b02-9dd9-afa4c3a4ad8f\",\n              \"name\": \"metaData.domain\",\n              \"type\": \"string\",\n              \"value\": \"={{ \\n  (() => {\\n    // List of known free email domains\\n    const freeEmailDomains = [\\n      'gmail.com',\\n      'yahoo.com',\\n      'hotmail.com',\\n      'outlook.com',\\n      'aol.com',\\n      'icloud.com',\\n      'mail.com',\\n      'yandex.com',\\n      'protonmail.com'\\n    ];\\n\\n    // Extract email addresses using JMESPath\\n    const emailAddresses = $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress');\\n\\n    // Function to extract the domain from an email address\\n    const extractDomain = (email) => email.match(/@([\\\\w.-]+)/)?.[1];\\n\\n    // Filter out free email domains\\n    const companyDomains = emailAddresses\\n      .map(extractDomain)\\n      .filter(domain => domain && !freeEmailDomains.includes(domain.toLowerCase()));\\n\\n    // Return the first non-free domain or \\\"Unknown\\\" if none are found\\n    return companyDomains[0] || 'Unknown';\\n  })()\\n}}\"\n            },\n            {\n              \"id\": \"b28eb61e-6052-4022-9d31-447dbf877982\",\n              \"name\": \"sfOpp\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.sfOpp }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"38574bd1-82f3-4499-9369-9241e41b35d1\",\n      \"name\": \"Join Affiliation\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        740,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Retrieve input data from all items\\nconst inputData = $input.all();\\nconst originalJson = inputData[0].json; // Get the original JSON data\\nconst conversation = originalJson.Conversation;\\nconst parties = originalJson.parties;\\n\\n// Create a mapping of speakerId to affiliation\\nconst affiliationMap = {};\\nparties.forEach(party => {\\n  affiliationMap[party.speakerId] = party.affiliation;\\n});\\n\\n// Replace speakerId with affiliation in the conversation data\\nconst updatedConversation = conversation.map(entry => {\\n  const affiliation = affiliationMap[entry.speaker] || 'Unknown'; // Fallback to 'Unknown' if not found\\n  return {\\n    ...entry,\\n    speaker: affiliation, // Replace speakerId with affiliation\\n  };\\n});\\n\\n// Return the updated conversation along with the original JSON data\\nreturn [{ json: { ...originalJson, updatedConversation } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"15809205-cb1d-4d83-8c67-35ab486071b2\",\n      \"name\": \"Join conversation\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        940,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Retrieve the original JSON data\\nconst originalJson = $json;\\nconst conversation = originalJson.updatedConversation;\\n\\n// Create an array to hold the formatted lines\\nconst formattedLines = [];\\n\\n// Iterate over each entry in the conversation\\nconversation.forEach(entry => {\\n  const speaker = entry.speaker;\\n  const texts = entry.text;\\n\\n  // Iterate over each text item and format it as \\\"speaker: text\\\"\\n  texts.forEach(line => {\\n    formattedLines.push(`${speaker}: ${line}`);\\n  });\\n});\\n\\n// Join the formatted lines with newline characters\\nconst result = formattedLines.join('\\\\n');\\n\\n// Return the original JSON data along with the new conversationText field\\nreturn [{ json: { ...originalJson, conversationText: result } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1ac9e862-ddf2-4cd5-9339-c69061182231\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        -500\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 820,\n        \"content\": \"![Callforge](https://uploads.n8n.io/templates/callforgeshadow.png)\\n## CallForge - The AI Gong Sales Call Processor\\nCallForge allows you to extract important information for different departments from your Sales Gong Calls. \\n\\n### Transcript PreProcessor\\nThis workflow preps the call transcripts to pass into the call processor. It starts by using the code node to separate the different speakers into either Internal or External speaker. It also pulls data from Salesforce to enrich the call data by pulling things such as company name. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7d8f99e2-13c7-4bf2-becc-c7b5c663028d\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 660,\n        \"content\": \"## Get Gong Transcript and Call Details\\nThe transcript is to pass into the AI prompt, but needs to be transformed first. The Call details provide the Prompt with metadata.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1454276d-46e6-40b2-9494-c9c380f3eaa1\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 580,\n        \"height\": 660,\n        \"content\": \"## Format Call Transcript \\nHere we join the call transcript together and then set the speaker as either Internal (for our sales team) or External (for our customers). \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7fa6f56-8234-4995-b559-4809095efcb4\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1320,\n        \"height\": 780,\n        \"content\": \"## Enrich Call Data\\nHere we get the Pipedrive ID using the email domain and use that to search pipedrive for the customer. We also pass the domain into the People Data Labs api to get location data. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b5274357-4e45-4d8b-938d-b3c66f98c82f\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2440,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 480,\n        \"height\": 660,\n        \"content\": \"## Extract Final Data Blob\\nHere we merge the final outputs and get rid of anything we don't need for the final AI prompt. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a940a941-f9e2-4449-895f-3268e2203a1e\",\n      \"name\": \"Extract SF Opp Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1700,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"64f7f8ec-3c1c-4743-9e5b-6bb5d385e9d2\",\n              \"name\": \"SFOppId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Id }}\"\n            },\n            {\n              \"id\": \"85629904-617a-4a5f-87a3-72f2349cdf99\",\n              \"name\": \"OppType\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Type }}\"\n            },\n            {\n              \"id\": \"f6ec091d-0784-4000-ad49-3bb6ece375ca\",\n              \"name\": \"LeadSource\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.LeadSource }}\"\n            },\n            {\n              \"id\": \"a3fd520e-3577-4c2d-a09a-ad3bc76e0bd7\",\n              \"name\": \"IsClosed\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $json.IsClosed }}\"\n            },\n            {\n              \"id\": \"8a1fac85-5f1b-4ab2-86ea-586df1e2af2b\",\n              \"name\": \"IsWon\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $json.IsWon }}\"\n            },\n            {\n              \"id\": \"0f86f2a2-94bb-412a-b831-974f2528fca3\",\n              \"name\": \"sfStage\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.StageName }}\"\n            },\n            {\n              \"id\": \"f455d38b-d48a-483c-b0d9-def9514741ef\",\n              \"name\": \"companyAccountId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.AccountId }}\"\n            },\n            {\n              \"id\": \"1eb560db-3dd8-46cb-993d-0e370e25222f\",\n              \"name\": \"usingn8n\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.n8n_experience__c }}\"\n            },\n            {\n              \"id\": \"e1d251e3-40e5-4b63-bbc3-c45e503bb108\",\n              \"name\": \"ForecastCategory\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.ForecastCategory }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0b2b5078-96b5-423c-82d1-278f013ecdff\",\n      \"name\": \"Extract SF Opp Data1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1880,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"261c0f53-82d1-4deb-ae52-09ea342d0f88\",\n              \"name\": \"Employees\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Employees_Bucket__c }}\"\n            },\n            {\n              \"id\": \"ca1c9890-4a7d-43c6-b7ad-bf1d522574a7\",\n              \"name\": \"Name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Name }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"fec915a1-10ea-4be6-a15f-cea0ae837633\",\n      \"name\": \"Get Opp Data\",\n      \"type\": \"n8n-nodes-base.salesforce\",\n      \"position\": [\n        1460,\n        80\n      ],\n      \"parameters\": {\n        \"resource\": \"opportunity\",\n        \"operation\": \"get\",\n        \"opportunityId\": \"={{ $('Execute Workflow Trigger').item.json[\\\"calldata[0].calls\\\"].sfOpp }}\"\n      },\n      \"credentials\": {\n        \"salesforceOAuth2Api\": {\n          \"id\": \"Ykybxuyh0jK0o3qH\",\n          \"name\": \"Angel SF Creds v3\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"793127ea-d1c7-4f29-a536-c87ece9d6601\",\n      \"name\": \"Get account data\",\n      \"type\": \"n8n-nodes-base.salesforce\",\n      \"position\": [\n        1700,\n        260\n      ],\n      \"parameters\": {\n        \"resource\": \"account\",\n        \"accountId\": \"={{ $json.AccountId }}\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"salesforceOAuth2Api\": {\n          \"id\": \"Ykybxuyh0jK0o3qH\",\n          \"name\": \"Angel SF Creds v3\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"249ef11d-47b3-415c-aac0-13437c1fd5c8\",\n      \"name\": \"Extract Call Data\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        260,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"body.calls\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a572d7e8-6613-4f46-8abf-9a254f22cfc1\",\n      \"name\": \"Merge call and transcript Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        540,\n        -120\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1bcbafc1-5ef5-43a4-af2a-9689888fc086\",\n      \"name\": \"Aggregate Gong Call Transcript\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1720,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"gongData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"df307a52-512d-4397-8d22-a8a51a06fe21\",\n      \"name\": \"Get External Attendees Emails\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1280,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0a813814-2e7d-40e0-961f-ba59baf5ece5\",\n              \"name\": \"externalAttendees\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a4c7450e-5ad6-4e2f-ab72-0f56ae1390c1\",\n      \"name\": \"Combine Salesforce Opp Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2060,\n        100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"8c201ee7-16f7-4c05-8f6c-d3543c4445e0\",\n      \"name\": \"Aggregate Salesforce data\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        2260,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"sfOpp\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"735173b9-cec1-43b3-94c5-13dc368473dd\",\n      \"name\": \"Merge Enriched Transcript Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2520,\n        -100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Get Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract SF Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get account data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join Transcript to String\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get account data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract SF Opp Data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join Affiliation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join conversation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Call Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge call and transcript Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Join conversation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get External Attendees Emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Aggregate Gong Call Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract SF Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Salesforce Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract SF Opp Data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Salesforce Opp Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Retrieve detailed call data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Salesforce data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Enriched Transcript Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Join Transcript to String\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge call and transcript Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Salesforce Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate Salesforce data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve detailed call data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Call Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get External Attendees Emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Gong Call Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Enriched Transcript Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Enriched Transcript Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Isolate Notion Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge call and transcript Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join Affiliation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.salesforce",
      "n8n-nodes-base.salesforce",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.set",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.merge"
    ],
    "trigger": "execute workflow trigger"
  }
}