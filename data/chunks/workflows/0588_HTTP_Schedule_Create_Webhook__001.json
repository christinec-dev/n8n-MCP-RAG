{
  "source": "0588_HTTP_Schedule_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"7858a8e25b8fc4dae485c1ef345e6fe74effb1f5060433ef500b4c186c965c18\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"4a82b490-3550-4700-8e9a-5ae1ef7c327f\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -100,\n        600\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"seconds\",\n              \"secondsInterval\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bfe180f2-329c-4d00-9d93-3a87d694cb4e\",\n      \"name\": \"Get Auth Token\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        720,\n        1080\n      ],\n      \"parameters\": {\n        \"url\": \"https://webhook.site/token\",\n        \"method\": \"POST\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"26089f68-9d3c-4abd-8541-1d63a8a303c1\",\n      \"name\": \"Unprocessed Requests\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1420,\n        680\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let filter_method = \\\"POST\\\"\\nlet last_processed = $json.value ? $json.value : 0\\nlet data = $json.data\\n\\nfunction dateToTime(datetime){\\n  return new Date(datetime.replace(\\\" \\\", \\\"T\\\") + \\\"Z\\\").getTime()\\n}\\n\\n//Convert datetimes to timestamps\\ndata.forEach(datum=>{datum.created_at = dateToTime(datum.created_at)})\\n\\n//Filter all new POST requests\\nreturn data.filter(datum=>!last_processed || datum.created_at > last_processed).filter(datum=>!filter_method || datum.method==filter_method)\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"00a5c01c-0cc1-4a56-9b5b-b90cc778ee36\",\n      \"name\": \"Get Latest Requests\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1060,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"=https://webhook.site/token/{{ $json.value }}/requests\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"42fbb0c3-34c9-4d97-8761-1b9c84c2f8f7\",\n      \"name\": \"POST to n8n\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2000,\n        680\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Local Webhook Address').first().json.webhook }}\",\n        \"body\": \"={{ $('Unprocessed Requests').item.json.content }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"raw\",\n        \"rawContentType\": \"=application/json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fd38a00e-2d7f-4621-8f18-47d1770ef3ac\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1220,\n        680\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"includeUnpaired\": true\n        },\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"ef347c09-9870-42db-9109-934277290e0b\",\n      \"name\": \"Local Webhook Address\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        160,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3c53386d-23a8-4c8a-b5e9-dfbb755e2be1\",\n              \"name\": \"webhook\",\n              \"type\": \"string\",\n              \"value\": \"http://localhost:5678/webhook/66210723-bd48-473c-8f8d-73d39d5012db\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"89baa16d-4a06-4f98-9735-9cc9fda5ff09\",\n      \"name\": \"Latest Update Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1600,\n        680\n      ],\n      \"parameters\": {\n        \"jsCode\": \"var datetimes = $('Unprocessed Requests').all().map(x=>x.json.created_at)\\nreturn {last_time: Math.max(...datetimes)}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c826677d-317f-4ad4-959d-153862de4ff7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        620,\n        980\n      ],\n      \"parameters\": {\n        \"width\": 460.2964713549969,\n        \"height\": 288.34663983291097,\n        \"content\": \"## 1. Retrieve existing or get new auth token for webhook.site\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f4bc9a8c-d9dc-4969-9251-ce892a5ed41e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1080,\n        517.8563272190441\n      ],\n      \"parameters\": {\n        \"width\": 483.2839292355176,\n        \"height\": 384.1277143350834,\n        \"content\": \"## 2. Check if any new requests to webhook that came later than the last checked request\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adaf19be-cb2f-4727-9881-1a3e4098c528\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1608.5062710597388,\n        518.9281636095216\n      ],\n      \"parameters\": {\n        \"width\": 395.16534069351894,\n        \"height\": 380.2964713549969,\n        \"content\": \"## 3. Relay the request to the local n8n workflow set in *Local Webhook Address*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4e7add8c-1e95-4ebb-b7c8-35cee3cdeed5\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -760,\n        340\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 566.9804381508956,\n        \"height\": 859.1365566530386,\n        \"content\": \"# Public Webhook Relay\\n## How it Works\\nUtilizes webhook.site to receive public webhook requests and relays them to your local n8n workflow\\n\\n## How to Use\\n- To use with local key-value store:\\n Go to settings > community nodes and enter ```@horka.tv/n8n-nodes-storage-kv``` to install the key-value store node\\n- To use with a different storage method:\\n Replace the four key-value nodes with a temporary storage option of your choice (Airtable, Notion, Firebase, etc). This is required to save data between runs.\\n- Set **Schedule Trigger** with a polling interval (default is every 10 seconds).\\n- Set your local workflow address in Local Webhook Address.\\n\\n## How to Test\\n- Set the workflow to *Active*.\\n- After workflow executes at least once, you can check the input to **Get Latest Requests** for your auth token.\\n- Run this command: ```curl -X POST -H \\\"Content-Type: application/json\\\" -d '{\\\"foo\\\":\\\"bar\\\"}'  https://webhook.site/[THE AUTH TOKEN YOU JUST GOT]```\\n- Now check **Executions** and confirm that the workflow ran all the way to the end. Confirm in **Unprocessed Requests** that your data was retrieved (data[0].content should be equal to {\\\"foo\\\":\\\"bar\\\"})\\n- Now check your other local workflow and confirm that it was triggered with the correct data packet ```{\\\"foo\\\":\\\"bar\\\"}```.\\n- *You're done!*\\n\\n## Caveats\\nAt present, the relay expects a POST with form/json data. If you wish to relay raw data or GET requests, please alter the **Unprocessed Requests** and **POST to n8n** nodes accordingly.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5d8db2a1-569e-47c0-99a1-d66cb8b86897\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        40,\n        608.688533362355\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 304.23688498154337,\n        \"height\": 264.4911255434983,\n        \"content\": \"### 0. Set this to your local workflow address (Production URL or Test URL in your Workflow Trigger node)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e728e8fe-1a7d-4f44-96b8-7344b70b0452\",\n      \"name\": \"Store Auth Token\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        880,\n        1080\n      ],\n      \"parameters\": {\n        \"key\": \"auth_token\",\n        \"value\": \"={{ $json.uuid }}\",\n        \"fileName\": \"savefile\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c19ff08-d6ed-4874-9c1a-69e92b25138a\",\n      \"name\": \"Store Last Processed\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        1800,\n        680\n      ],\n      \"parameters\": {\n        \"key\": \"last_processed\",\n        \"value\": \"={{ $json.last_time }}\",\n        \"fileName\": \"savefile\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea927186-6147-42c7-8873-029616bdbe6d\",\n      \"name\": \"Retrieve Auth Token\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        380,\n        860\n      ],\n      \"parameters\": {\n        \"key\": \"auth_token\",\n        \"fileName\": \"savefile\",\n        \"operation\": \"read\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f217889c-7104-4183-8adb-4459f6cdc3d6\",\n      \"name\": \"Retrieve Last Processed\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        680,\n        620\n      ],\n      \"parameters\": {\n        \"key\": \"last_processed\",\n        \"fileName\": \"savefile\",\n        \"operation\": \"read\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"12293fc3-8964-40da-8326-85c36dade0df\",\n      \"name\": \"If Auth Token Exists\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        580,\n        860\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"4356f226-da36-418b-957d-880872ddc420\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.value }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Unprocessed Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Local Webhook Address\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Retrieve Last Processed\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Latest Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Latest Update Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store Last Processed\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Latest Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Retrieve Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Auth Token Exists\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Auth Token Exists\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Latest Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store Last Processed\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"POST to n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Unprocessed Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Latest Update Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Local Webhook Address\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Retrieve Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve Last Processed\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
      "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
      "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
      "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
      "n8n-nodes-base.if"
    ],
    "trigger": "schedule trigger"
  }
}