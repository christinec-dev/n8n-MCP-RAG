{
  "source": "1301_Code_Extractfromfile_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"Agn9dzf5YTqcmQGN\",\n  \"meta\": {\n    \"instanceId\": \"8029058e18ae4ed6081000c1270d96039ad05959052aa2034dd96a215849bcf7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Amazon Ads AI Optimization\",\n  \"tags\": [\n    {\n      \"id\": \"vjZ7QzTW2i7StzqX\",\n      \"name\": \"AI Flow\",\n      \"createdAt\": \"2025-04-10T00:32:55.235Z\",\n      \"updatedAt\": \"2025-04-10T00:32:55.235Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"0286c917-d771-4835-a5f8-71f79a5e59e8\",\n      \"name\": \"List Files\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -100,\n        -800\n      ],\n      \"parameters\": {\n        \"filter\": {\n          \"folderId\": {\n            \"__rl\": true,\n            \"mode\": \"list\",\n            \"value\": \"\",\n            \"cachedResultUrl\": \"\",\n            \"cachedResultName\": \"<choose report folder>\"\n          }\n        },\n        \"options\": {},\n        \"resource\": \"fileFolder\",\n        \"searchMethod\": \"query\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"UPKjIF2z8RkkmP21\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"7d9b0c0a-86ee-4aae-8d73-66f409b0a57f\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1620,\n        -540\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o\",\n          \"cachedResultName\": \"gpt-4o\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"qszlkCg3ypMJEWvt\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d3d58b0a-3107-4525-92a8-d54332e9a8a5\",\n      \"name\": \"is XLSX\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        540,\n        -800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"820b48a1-676d-400b-894f-3b3a5203eca7\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \".xlsx\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"884e4a08-3b19-4485-aba7-c69887607b82\",\n      \"name\": \"Get File\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        100,\n        -800\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.id }}\"\n        },\n        \"options\": {\n          \"binaryPropertyName\": \"data\",\n          \"googleFileConversion\": {\n            \"conversion\": {}\n          }\n        },\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"UPKjIF2z8RkkmP21\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"c72fde38-de38-4734-a7e8-aa70e8638cad\",\n      \"name\": \"Merge XLSX and CSV\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1200,\n        -800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"cd23e23c-9bb7-4b8d-90ab-8917783cf1ab\",\n      \"name\": \"Format Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1420,\n        -800\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const result = {};\\n\\nfor (const item of items) {\\n  const fileName = item.json.fileName || item.json.name || 'unknown_file';\\n  const baseName = fileName\\n    .split('.')[0]\\n    .replace(/\\\\s+/g, '_')\\n    .toLowerCase()\\n    .replace(/\\\\s*\\\\(\\\\d+\\\\)$/, '')\\n    .replace(/_+$/, '')\\n    .trim();\\n\\n  // regex → result key\\n  const map = [\\n    { key: 'search_terms', regex: /search_term/ },\\n    { key: 'campaigns',    regex: /campaign/     },\\n    { key: 'targeting',    regex: /targeting/   },\\n    { key: 'placement',    regex: /placement/   },\\n    { key: 'budgets',      regex: /budget/      },\\n  ];\\n\\n  const entry = map.find(m => m.regex.test(baseName));\\n  const mappedKey = entry ? entry.key : null;\\n\\n  console.log('fileName:', fileName);\\n  console.log('baseName:', baseName);\\n  console.log('mappedKey:', mappedKey);\\n\\n  if (!mappedKey) {\\n    throw new Error(`${fileName} → ${baseName} → Unrecognized file name structure`);\\n  }\\n  result[mappedKey] = result[mappedKey] || [];\\n  result[mappedKey].push(item.json);\\n}\\n\\nreturn [{ json: result }];\\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"02172577-d867-45a4-96ea-eb105169deff\",\n      \"name\": \"Set fileName\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        320,\n        -800\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"dotNotation\": true,\n          \"ignoreConversionErrors\": false\n        },\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a467fabb-d7d0-482d-8a6a-afcd97cc0d8c\",\n              \"name\": \"fileName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.name }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"31db008f-20e4-4fe3-a9d0-1815b3802690\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -140,\n        -1040\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 180,\n        \"height\": 200,\n        \"content\": \"## Change\\nChoose the \\\"folder\\\" in the filter options to the folder containing your Ad reports\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0ba8c273-8369-4009-9b93-b0fb243a3c85\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1640,\n        -1000\n      ],\n      \"parameters\": {\n        \"width\": 260,\n        \"content\": \"## AI Analysis\\nUses GPT-4o to process the bundled reports and generate optimization instructions.\\nPasses system instructions and cleaned data as input.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"451bb016-1766-4688-aafc-75937e0d5c3f\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        -580\n      ],\n      \"parameters\": {\n        \"width\": 540,\n        \"height\": 700,\n        \"content\": \"## Amazon Ads Report Scheduling Instructions\\nTo run this workflow, schedule the following Sponsored Products reports in the Amazon Ads Console:\\n\\nUse \\\"Detailed\\\" for:\\n\\nSearch Term Report → Sponsored_Products_Search_Term_Detailed_L30\\n\\nTargeting Report → Sponsored_Products_Targeting_Detailed_L30\\n\\nUse \\\"Summary\\\" for:\\n\\nCampaign Report → Sponsored_Products_Campaign_L30\\n\\nPlacement Report → Sponsored_Products_Placement_L30\\n\\nBudget Report → Sponsored_Products_Budget_L30\\n\\nShared settings for all reports:\\n\\nDate Range: Last 30 Days\\n\\nFrequency: Daily\\n\\nFormat: .xlsx or .csv\\n\\nDelivery: Email + Console Download\\n\\nMake sure filenames match expectations so the workflow can route them correctly.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a671a4f1-05b0-4d7c-9cc1-8c2838593e34\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        -580\n      ],\n      \"parameters\": {\n        \"width\": 400,\n        \"height\": 520,\n        \"content\": \"## Report Delivery\\n\\nHow to get reports into Google Drive\\n\\nUse one of the following:\\n\\n📥 Manual Upload – Download emailed reports and move them to your Drive folder\\n\\n🤖 Automation – Use n8n to watch Gmail for no-reply@amazon.com, extract attachments, and upload to Drive\\n\\n💻 Drive Sync Folder – Use a local folder synced to Google Drive with rules for report types\\n\\nReports must match expected filenames so the flow can identify and classify them.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63a7f391-2bc7-41f9-a53f-e742950c60bf\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        -580\n      ],\n      \"parameters\": {\n        \"width\": 360,\n        \"height\": 520,\n        \"content\": \"## Upgrade! 🚀\\n\\nApply for an Amazon Advertising API developer account to unlock full automation:\\n\\nGenerate reports programmatically via the Reports API\\n\\nFetch report files directly into n8n using HTTP or custom nodes\\n\\nEliminate email + Drive dependency entirely\\n\\n🔗 https://advertising.amazon.com/API/docs/en-us/\\n\\nOnce approved, you can schedule report generation and download all required data securely and automatically.\\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e5a24705-0ad5-4629-b183-d279bdca8b29\",\n      \"name\": \"Preserve File Name\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        980,\n        -900\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"d6883fe9-d04f-4c86-bc9a-f4dd526afca2\",\n              \"name\": \"fileName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('is XLSX').item.json.fileName }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3c315a0c-a89e-490a-9a82-e3d96d2b94c7\",\n      \"name\": \"Email Optimizations\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        2016,\n        -800\n      ],\n      \"webhookId\": \"b9d7c1a9-a1a3-4b97-97c9-a272f0e97127\",\n      \"parameters\": {\n        \"sendTo\": \"={{ $('Email Options').first().json.send_to }}\",\n        \"message\": \"={{\\n  (() => {\\n   let raw = $node[\\\"AI Analyze\\\"].json[\\\"text\\\"];\\n\\n    // 🔧 Remove triple backticks and optional \\\"json\\\" tag\\n    raw = raw.replace(/^```json\\\\s*/i, \\\"\\\").replace(/```$/, \\\"\\\").trim();\\n\\n    let data;\\n\\n    try {\\n      data = JSON.parse(raw);\\n    } catch (err) {\\n      return `<p><strong>❌ Failed to parse AI output.</strong><br>${err.message}</p>`;\\n    }\\n\\n    let msg = \\\"<h2>Amazon Ads Optimization Instructions</h2>\\\";\\n\\n    // Optional Summary Totals\\n    const totalSpend = (data.campaign_adjustments || []).reduce((sum, c) => sum + (c.projected_daily_spend_usd || 0), 0);\\n    const totalSales = (data.campaign_adjustments || []).reduce((sum, c) => sum + (c.projected_daily_sales_usd || 0), 0);\\n    msg += `<p><strong>Total Budget Increase Recommended:</strong><br>`;\\n    msg += `Estimated daily spend: <strong>$${totalSpend.toFixed(2)}</strong><br>`;\\n    msg += `Estimated daily sales: <strong>$${totalSales.toFixed(2)}</strong></p>`;\\n\\n    // Campaign Adjustments\\n    msg += \\\"<h3>Campaign Adjustments:</h3><ul>\\\";\\n    (data.campaign_adjustments || []).forEach(c => {\\n      msg += `<li><strong>${c.campaign_name}</strong><ul>`;\\n      if (c.default_bid_multiplier !== undefined) {\\n        const percent = Math.round((1 - c.default_bid_multiplier) * 100);\\n        msg += `<li>Default bid × ${c.default_bid_multiplier} (<em>–${percent}%</em>)</li>`;\\n      }\\n      if (c.bid_adjustments) {\\n        msg += \\\"<li>Bid adjustments:<ul>\\\";\\n        msg += `<li>Top of Search: ${c.bid_adjustments.top_of_search ?? 0}%</li>`;\\n        msg += `<li>Rest of Search: ${c.bid_adjustments.rest_of_search ?? 0}%</li>`;\\n        msg += `<li>Product pages: ${c.bid_adjustments.product_pages ?? 0}%</li>`;\\n        msg += \\\"</ul></li>\\\";\\n      }\\n      if (c.budget_change?.action !== \\\"none\\\") {\\n        msg += `<li>Budget: ${c.budget_change.action} by ${c.budget_change.percent}%</li>`;\\n      }\\n      if (c.projected_daily_spend_usd && c.projected_daily_sales_usd) {\\n        msg += `<li>Est. daily spend: $${c.projected_daily_spend_usd.toFixed(2)}</li>`;\\n        msg += `<li>Est. daily sales: $${c.projected_daily_sales_usd.toFixed(2)}</li>`;\\n        if (c.estimated_acos_percent !== undefined) {\\n          msg += `<li>ACoS: ${c.estimated_acos_percent}%</li>`;\\n        }\\n        if (c.estimated_roas_multiple !== undefined) {\\n          const color = c.estimated_roas_multiple < 1.0 ? 'red' : 'green';\\n          msg += `<li>ROAS: <span style=\\\"color:${color}\\\">${c.estimated_roas_multiple.toFixed(2)}x</span></li>`;\\n        }\\n      }\\n      msg += \\\"</ul></li>\\\";\\n    });\\n    msg += \\\"</ul>\\\";\\n\\n    // Keyword Recommendations\\n    if ((data.keyword_recommendations?.add_exact?.length || 0) > 0 ||\\n        (data.keyword_recommendations?.negative?.length || 0) > 0) {\\n      msg += \\\"<h3>Keyword Recommendations:</h3><ul>\\\";\\n      (data.keyword_recommendations.add_exact || []).forEach(k => {\\n        msg += `<li>Add exact: \\\"<strong>${k.term}</strong>\\\" in <em>${k.campaign_name} / ${k.ad_group_name}</em> at <strong>$${k.suggested_bid}</strong></li>`;\\n      });\\n      (data.keyword_recommendations.negative || []).forEach(n => {\\n        if (typeof n === 'string') {\\n          msg += `<li>Negative: \\\"<strong>${n}</strong>\\\"</li>`;\\n        } else {\\n          msg += `<li>Negative: \\\"<strong>${n.term}</strong>\\\" in <em>${n.campaign_name || 'Unspecified Campaign'}</em></li>`;\\n        }\\n      });\\n      msg += \\\"</ul>\\\";\\n    }\\n\\n    // Targeting Recommendations\\n    if ((data.targeting_recommendations || []).length > 0) {\\n      msg += \\\"<h3>Targeting Recommendations:</h3><ul>\\\";\\n      data.targeting_recommendations.forEach(t => {\\n        const valueText = t.value ? ` by ${t.value}` : \\\"\\\";\\n        msg += `<li>${t.target} in <em>${t.campaign_name} / ${t.ad_group_name}</em>: <strong>${t.action}</strong>${valueText}</li>`;\\n      });\\n      msg += \\\"</ul>\\\";\\n    }\\n\\n    return msg;\\n  })()\\n}}\\n\",\n        \"options\": {},\n        \"subject\": \"={{ $('Email Options').first().json.subject }}\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"6m7O3IpXy4mCRogW\",\n          \"name\": \"Brian Gmail\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"f4fc0a70-2df9-4b7b-b60c-856b1b74ead7\",\n      \"name\": \"Extract XLSX Data\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        760,\n        -900\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"xlsx\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d0618a5b-1995-474d-a969-38e856b1b91a\",\n      \"name\": \"Extract CSV Data\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        760,\n        -700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"67f9d0a2-2f34-416a-bc11-ef776e6e4ab3\",\n      \"name\": \"Preserve CSV File Name\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        980,\n        -700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"d6883fe9-d04f-4c86-bc9a-f4dd526afca2\",\n              \"name\": \"fileName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('is XLSX').item.json.fileName }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"818205c9-0fe9-4fe6-8556-657f087ba7b9\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -500,\n        -800\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1612753d-0b7f-4ae5-9ec0-8ad39f1003b1\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -580,\n        -1040\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"content\": \"## Trigger\\nYou may replace this with a scheduled event or poll the folder for changes.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"158da856-b682-4f98-afcc-4fa12b978db0\",\n      \"name\": \"Email Options\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -300,\n        -800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"60c2189a-2ca3-43ac-bffc-371bbc3c123b\",\n              \"name\": \"send_to\",\n              \"type\": \"string\",\n              \"value\": \"<enter send to email address>\"\n            },\n            {\n              \"id\": \"c6f588b3-b8b9-4a83-817b-a68de36d2570\",\n              \"name\": \"subject\",\n              \"type\": \"string\",\n              \"value\": \"<enter the email subject for report emails>\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4f1f251e-5cfb-468d-9531-9c2ba2c875f6\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -320,\n        -1040\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 160,\n        \"content\": \"## Change!\\nEdit these email options.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ca2f4a7c-5aa9-4f6a-bc04-aedce5e0aaed\",\n      \"name\": \"AI Analyze\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1640,\n        -800\n      ],\n      \"parameters\": {\n        \"text\": \"={{JSON.stringify($json)}}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"You are an Amazon Ads Optimization Assistant. You will receive five structured datasets from Sponsored Products reports:\\n- search_terms\\n- campaigns\\n- targeting\\n- placement\\n- budgets\\n\\nYour goal is to generate precise performance recommendations for bid strategy, targeting, and budget scaling.\\n\\n---\\n\\n1. Campaign Adjustments:\\nFor each campaign, return:\\n- campaign_name (string)\\n- default_bid_multiplier (float, optional — only if bid should change)\\n- bid_adjustments: { top_of_search, rest_of_search, product_pages } (percentages)\\n- budget_change: { action: increase | decrease | none, percent: float }\\n- projected_daily_spend_usd (float)\\n- projected_daily_sales_usd (float)\\n- estimated_acos_percent (float)\\n- estimated_roas_multiple (float)\\n\\nBase projections on historical 30-day data. If a budget increase is recommended, scale projected spend and sales proportionally. Return NaN only if data is insufficient.\\n\\n---\\n\\n2. Keyword Recommendations:\\nRecommend at least 5 exact-match keywords to add. Each must include:\\n- term\\n- campaign_name\\n- ad_group_name\\n- suggested_bid (USD)\\n\\nAlso return at least 3 negative keywords:\\n- { term: \\\"...\\\", campaign_name?: \\\"...\\\" }\\n\\nDo not return keyword recommendations that lack campaign and ad group names.\\n\\n---\\n\\n3. Targeting Recommendations:\\nRecommend at least 3 targets to pause or increase bids. Return:\\n- target (ASIN, keyword, or match group)\\n- campaign_name\\n- ad_group_name\\n- action: \\\"pause\\\" or \\\"increase_bid\\\"\\n- value: float (if increasing bid)\\n\\n---\\n\\nRespond ONLY with a JSON object in this exact format. Do NOT include backticks, code blocks, or explanations:\\n\\n{\\n  \\\"campaign_adjustments\\\": [...],\\n  \\\"keyword_recommendations\\\": {\\n    \\\"add_exact\\\": [...],\\n    \\\"negative\\\": [...]\\n  },\\n  \\\"targeting_recommendations\\\": [...]\\n}\\n\\n\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.6\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"286aae2a-f8df-489d-9f03-89d0b50b1800\",\n  \"connections\": {\n    \"is XLSX\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract XLSX Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Extract CSV Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set fileName\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Analyze\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Email Optimizations\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List Files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Analyze\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set fileName\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"is XLSX\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Email Options\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List Files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract CSV Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Preserve CSV File Name\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract XLSX Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Preserve File Name\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Analyze\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge XLSX and CSV\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Preserve File Name\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge XLSX and CSV\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Preserve CSV File Name\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge XLSX and CSV\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Email Options\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.googleDrive",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.if",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.set",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.chainLlm"
    ],
    "trigger": null
  }
}