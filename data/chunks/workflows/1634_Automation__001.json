{
  "source": "1634_Automation.json",
  "index": 1,
  "content": "{\n  \"\\\"meta\\\"\": \"{\",\n  \"\\\"instanceId\\\"\": \"\\\"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\\\"\",\n  \"\\\"nodes\\\"\": \"[\",\n  \"\\\"id\\\"\": \"\\\"39191834-ecc2-46f0-a31a-0a7e9c47ac5d\\\",\",\n  \"\\\"name\\\"\": \"\\\"Sticky Note8\\\",\",\n  \"\\\"type\\\"\": \"\\\"ai_textSplitter\\\",\",\n  \"\\\"position\\\"\": \"[\",\n  \"\\\"parameters\\\"\": \"{\",\n  \"\\\"typeVersion\\\"\": \"1\",\n  \"\\\"url\\\"\": \"\\\"=http://qdrant:6333/collections/hello_fresh/points/recommend/groups\\\",\",\n  \"\\\"options\\\"\": \"{},\",\n  \"\\\"jsCode\\\"\": \"\\\"const pageData = JSON.parse($input.first().json.data)\\\\nreturn pageData.props.pageProps.ssrPayload.courses.slice(0, 10);\\\"\",\n  \"\\\"trimValues\\\"\": \"false,\",\n  \"\\\"cleanUpText\\\"\": \"true\",\n  \"\\\"operation\\\"\": \"\\\"extractHtmlContent\\\",\",\n  \"\\\"extractionValues\\\"\": \"{\",\n  \"\\\"values\\\"\": \"[\",\n  \"\\\"key\\\"\": \"\\\"instructions\\\",\",\n  \"\\\"cssSelector\\\"\": \"\\\"[data-test-id=\\\\\\\"instructions\\\\\\\"]\\\",\",\n  \"\\\"assignments\\\"\": \"[\",\n  \"\\\"value\\\"\": \"\\\"hello_fresh\\\",\",\n  \"\\\"credentials\\\"\": \"{\",\n  \"\\\"mistralCloudApi\\\"\": \"{\",\n  \"\\\"metadata\\\"\": \"{\",\n  \"\\\"metadataValues\\\"\": \"[\",\n  \"\\\"jsonData\\\"\": \"\\\"={{ $json.data }}\\\",\",\n  \"\\\"jsonMode\\\"\": \"\\\"expressionData\\\"\",\n  \"\\\"mode\\\"\": \"\\\"list\\\",\",\n  \"\\\"combinationMode\\\"\": \"\\\"mergeByPosition\\\"\",\n  \"\\\"webhookId\\\"\": \"\\\"e86d8ae4-3b0d-4c40-9d12-a11d6501a043\\\",\",\n  \"\\\"skipSelectors\\\"\": \"\\\"img,a\\\"\",\n  \"\\\"fields\\\"\": \"{\",\n  \"\\\"stringValue\\\"\": \"\\\"={{ $now.year }}-W{{ $now.weekNumber }}\\\"\",\n  \"\\\"schemaType\\\"\": \"\\\"manual\\\",\",\n  \"\\\"workflowId\\\"\": \"\\\"={{ $workflow.id }}\\\",\",\n  \"\\\"description\\\"\": \"\\\"Call this tool to get a recipe recommendation. Pass in the following params as a json object:\\\\n* positives - a description of what the user wants to cook. This could be ingredients, flavours, utensils available, number of diners, type of meal etc.\\\\n* negatives - a description of what the user wants to avoid in the recipe. This could be flavours to avoid, allergen considerations, conflicts with theme of meal etc.\\\",\",\n  \"\\\"inputSchema\\\"\": \"\\\"{\\\\n\\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n\\\\\\\"properties\\\\\\\": {\\\\n\\\\t\\\\\\\"positive\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"a description of what the user wants to cook. This could be ingredients, flavours, utensils available, number of diners, type of meal etc.\\\\\\\"\\\\n\\\\t},\\\\n \\\\\\\"negative\\\\\\\": {\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n \\\\\\\"description\\\\\\\": \\\\\\\"a description of what the user wants to avoid in the recipe. This could be flavours to avoid, allergen considerations, conflicts with theme of meal etc.\\\\\\\"\\\\n }\\\\n}\\\\n}\\\",\",\n  \"\\\"specifyInputSchema\\\"\": \"true\",\n  \"\\\"model\\\"\": \"\\\"mistral-large-2402\\\",\",\n  \"\\\"amount\\\"\": \"1.1\",\n  \"\\\"method\\\"\": \"\\\"POST\\\",\",\n  \"\\\"sendBody\\\"\": \"true,\",\n  \"\\\"authentication\\\"\": \"\\\"predefinedCredentialType\\\",\",\n  \"\\\"bodyParameters\\\"\": \"{\",\n  \"\\\"nodeCredentialType\\\"\": \"\\\"qdrantApi\\\"\",\n  \"\\\"qdrantApi\\\"\": \"{\",\n  \"\\\"language\\\"\": \"\\\"python\\\",\",\n  \"\\\"pythonCode\\\"\": \"\\\"import sqlite3\\\\ncon = sqlite3.connect(\\\\\\\"hello_fresh_1.db\\\\\\\")\\\\n\\\\ncur = con.cursor()\\\\ncur.execute(\\\\\\\"CREATE TABLE IF NOT EXISTS recipes (id TEXT PRIMARY KEY, name TEXT, data TEXT, cuisine TEXT, category TEXT, tag TEXT, week TEXT);\\\\\\\")\\\\n\\\\nfor item in _input.all():\\\\n cur.execute('INSERT OR REPLACE INTO recipes VALUES(?,?,?,?,?,?,?)', (\\\\n item.json.id,\\\\n item.json.name,\\\\n item.json.data,\\\\n ','.join(item.json.cuisine),\\\\n item.json.category,\\\\n ','.join(item.json.tag),\\\\n item.json.week\\\\n ))\\\\n\\\\ncon.commit()\\\\ncon.close()\\\\n\\\\nreturn [{ \\\\\\\"affected_rows\\\\\\\": len(_input.all()) }]\\\"\",\n  \"\\\"color\\\"\": \"7,\",\n  \"\\\"width\\\"\": \"213.30551928619226,\",\n  \"\\\"height\\\"\": \"332.38559808882246,\",\n  \"\\\"content\\\"\": \"\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n### \\ud83d\\udea8Configure Your Qdrant Connection\\\\n* Be sure to enter your endpoint address\\\"\",\n  \"\\\"systemMessage\\\"\": \"\\\"=You are a recipe bot for the company, \\\\\\\"Hello fresh\\\\\\\". You will help the user choose which Hello Fresh recipe to choose from this week's menu. The current week is {{ $now.year }}-W{{ $now.weekNumber }}.\\\\nDo not recommend any recipes other from the current week's menu. If there are no recipes to recommend, please ask the user to visit the website instead https://hellofresh.com.\\\"\",\n  \"\\\"qdrantCollection\\\"\": \"{\",\n  \"\\\"__rl\\\"\": \"true,\",\n  \"\\\"cachedResultName\\\"\": \"\\\"hello_fresh\\\"\",\n  \"\\\"pinData\\\"\": \"{},\",\n  \"\\\"connections\\\"\": \"{\",\n  \"\\\"Get Recipe\\\"\": \"{\",\n  \"\\\"main\\\"\": \"[\",\n  \"\\\"node\\\"\": \"\\\"Default Data Loader\\\",\",\n  \"\\\"index\\\"\": \"0\",\n  \"\\\"Chat Trigger\\\"\": \"{\",\n  \"\\\"Prepare Documents\\\"\": \"{\",\n  \"\\\"Default Data Loader\\\"\": \"{\",\n  \"\\\"ai_document\\\"\": \"[\",\n  \"\\\"Extract Server Data\\\"\": \"{\",\n  \"\\\"Get Course Metadata\\\"\": \"{\",\n  \"\\\"Get Recipes From DB\\\"\": \"{\",\n  \"\\\"Get This Week's Menu\\\"\": \"{\",\n  \"\\\"Qdrant Recommend API\\\"\": \"{\",\n  \"\\\"ai_tool\\\"\": \"[\",\n  \"\\\"Wait for Rate Limits\\\"\": \"{\",\n  \"\\\"Merge Course & Recipe\\\"\": \"{\",\n  \"\\\"Extract Recipe Details\\\"\": \"{\",\n  \"\\\"Get Mistral Embeddings\\\"\": \"{\",\n  \"\\\"Embeddings Mistral Cloud\\\"\": \"{\",\n  \"\\\"ai_embedding\\\"\": \"[\",\n  \"\\\"Execute Workflow Trigger\\\"\": \"{\",\n  \"\\\"Mistral Cloud Chat Model\\\"\": \"{\",\n  \"\\\"ai_languageModel\\\"\": \"[\",\n  \"\\\"Use Qdrant Recommend API\\\"\": \"{\",\n  \"\\\"Extract Available Courses\\\"\": \"{\",\n  \"\\\"When clicking \\\\\\\"Test workflow\\\\\\\"\\\"\": \"{\",\n  \"\\\"Recursive Character Text Splitter\\\"\": \"{\",\n  \"\\\"ai_textSplitter\\\"\": \"[\"\n}",
  "metadata": {
    "node_types": [],
    "trigger": null
  }
}