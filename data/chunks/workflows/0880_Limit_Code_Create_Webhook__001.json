{
  "source": "0880_Limit_Code_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"=\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"bdc398f0-a882-4fbe-ac37-7ca7e15a1081\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2080,\n        -200\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 340,\n        \"content\": \"![Tutorial](https://www.samirsaci.com/content/images/2025/04/temp-8.png)\\n[ðŸŽ¥ Check My Tutorial](https://www.youtube.com/watch?v=LwTIro6Rapk)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d132a584-770e-438c-bd98-28a9c1afa780\",\n      \"name\": \"When clicking â€˜Test workflowâ€™\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        1000,\n        120\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d51eec9d-a177-4f5e-89e5-c73b6109f5ce\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        2100,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"41da741b-1c1d-4d41-9a96-85cadacd1c8e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1000,\n        -200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1040,\n        \"height\": 460,\n        \"content\": \"### 1. First Block: audit the page to extract all the images with their respective alternative text\\nThis workflow sends an HTTP request to collect the HTML processed by the Javascript node to list all the images in the page with their alternative texts. The results are saved in a Google Sheet.\\n\\n#### How to setup?\\n- **Set your page link** in the first node\\n- **Record the results in a Google Sheet Node**:\\n   1. Add your Google Sheet API credentials to access the Google Sheet file\\n   2. Select the file using the list, an URL or an ID\\n   3. Select the sheet in which you want to record your working sessions\\n   4. Map the fields\\n  [Learn more about the Google Sheet Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e7a269cd-a2da-4ea9-9ec8-c023c45b9e96\",\n      \"name\": \"Page Link\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1200,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e69e5e68-5cd1-4f81-a940-2e5202d5589b\",\n              \"name\": \"url\",\n              \"type\": \"string\",\n              \"value\": \"https://www.samirsaci.com/sustainable-business-strategy-with-data-analytics/\"\n            },\n            {\n              \"id\": \"8839ac43-5d6a-4656-b555-714f836fc687\",\n              \"name\": \"baseUrl\",\n              \"type\": \"string\",\n              \"value\": \"https://www.samirsaci.com\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6e6b7801-1f4c-4d00-826d-184dff58cee1\",\n      \"name\": \"Download Results\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1440,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"=\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"=\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"1a137755-3f14-4881-93a5-db7f8678fa0d\",\n      \"name\": \"altLength < 50\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1660,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"a3b0ca70-0496-4966-94fd-f2927ce02ba9\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"lt\"\n              },\n              \"leftValue\": \"={{ $json.altLength }}\",\n              \"rightValue\": 100\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"60ea3935-313e-4d16-a8b8-a2fe7da8df82\",\n      \"name\": \"Limit records\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        1880,\n        560\n      ],\n      \"parameters\": {\n        \"maxItems\": 5\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5785deb6-1bf4-40a6-b556-42aad4c01c83\",\n      \"name\": \"Generate altText\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        2320,\n        560\n      ],\n      \"parameters\": {\n        \"text\": \"Please generate the alternative text (alt text) for this image under 150 characters.\\t\",\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-2024-05-13\",\n          \"cachedResultName\": \"GPT-4O-2024-05-13\"\n        },\n        \"options\": {\n          \"maxTokens\": 150\n        },\n        \"resource\": \"image\",\n        \"imageUrls\": \"={{ $('altLength < 50').item.json.src }}\",\n        \"operation\": \"analyze\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"86051a7f-e91a-4913-9c19-772673ff6306\",\n      \"name\": \"Update Results\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        2540,\n        640\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"page\": \"=\",\n            \"index\": \"={{ $('Loop Over Items').item.json.index }}\",\n            \"newAlt\": \"={{ $json.content }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"index\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"index\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"page\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"page\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"src\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"src\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"alt\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"alt\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"altLength\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"altLength\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"newAlt\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"newAlt\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"row_number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"row_number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"index\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"update\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"=\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"b1ab97f7-a89e-40c8-ada3-22fcc6da2dcd\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1000,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1920,\n        \"height\": 520,\n        \"content\": \"### 2. SecondBlock: generate alternative text for the image with altLength < 50\\nThis workflow sends an HTTP request to collect the HTML processed by the Javascript node to list all the images in the page with their alternative texts. The results are saved in a Google Sheet.\\n\\n#### How to setup?\\n- **Set your page link** in the first node\\n- **Record the results in a Google Sheet Node**:\\n   1. Add your Google Sheet API credentials to access the Google Sheet file\\n   2. Select the file using the list, an URL or an ID\\n   3. Select the sheet in which you want to record your working sessions\\n   4. Map the fields\\n  [Learn more about the Google Sheet Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c1bf1dcf-6789-43dd-9f15-29895c30fd23\",\n      \"name\": \"Store Results\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1860,\n        120\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"alt\": \"={{ $json.alt }}\",\n            \"src\": \"={{ $json.src }}\",\n            \"page\": \"={{ $('Page Link').item.json.url }}\",\n            \"index\": \"={{ $json.index }}\",\n            \"altLength\": \"={{ $json.altLength }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"index\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"index\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"page\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"page\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"src\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"src\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"alt\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"alt\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"altLength\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"altLength\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"newAlt\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"newAlt\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"=\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"fe71094e-3a22-4cda-90ad-4174258a9086\",\n      \"name\": \"Download HTML\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1420,\n        120\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"405fe4cf-5271-465c-8e2a-1f5d024228b6\",\n      \"name\": \"Get Images urls with altText\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1640,\n        120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const html = $input.first().json.data;\\nconst baseUrl = $('Page Link').first().json.baseUrl;\\n\\nconst imgTagRegex = /<img\\\\b[^>]*>/gi;\\nconst altAttrRegex = /alt\\\\s*=\\\\s*[\\\"']([^\\\"']*)[\\\"']/i;\\nconst srcAttrRegex = /src\\\\s*=\\\\s*[\\\"']([^\\\"']*)[\\\"']/i;\\n\\nconst imageTags = html.match(imgTagRegex) || [];\\n\\nconst results = imageTags.map((tag, index) => {\\n  const altMatch = tag.match(altAttrRegex);\\n  const srcMatch = tag.match(srcAttrRegex);\\n\\n  let alt = altMatch ? altMatch[1] : '[No alt text]';\\n  let src = srcMatch ? srcMatch[1] : '[No src]';\\n\\n  // If src is relative, manually join with baseUrl\\n  if (src !== '[No src]' && !src.startsWith('http')) {\\n    if (baseUrl.endsWith('/') && src.startsWith('/')) {\\n      src = baseUrl + src.slice(1);\\n    } else if (!baseUrl.endsWith('/') && !src.startsWith('/')) {\\n      src = baseUrl + '/' + src;\\n    } else {\\n      src = baseUrl + src;\\n    }\\n  }\\n\\n  return {\\n    index: index + 1,\\n    src,\\n    alt,\\n    altLength: alt.length,\\n  };\\n});\\n\\nreturn results.map(item => ({ json: item }));\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Page Link\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Images urls with altText\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limit records\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"altLength < 50\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit records\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Generate altText\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"altLength < 50\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate altText\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Images urls with altText\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking â€˜Test workflowâ€™\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Page Link\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Download Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.if",
      "n8n-nodes-base.limit",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code"
    ],
    "trigger": null
  }
}