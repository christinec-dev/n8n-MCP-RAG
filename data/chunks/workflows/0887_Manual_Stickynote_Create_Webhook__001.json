{
  "source": "0887_Manual_Stickynote_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"96b96d0aa1e4ff5d5b6779332b149e3ef3364191562d79083d0309cf3ddfa53e\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"0e78a29e-87ba-4665-84c1-a413c45e25dc\",\n      \"name\": \"When clicking ‚ÄòTest workflow‚Äô\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -420,\n        -40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe7b054a-e0c9-4642-a97f-6bec60a1ec55\",\n      \"name\": \"Edit Image (OpenAI)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        500,\n        -40\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/images/edits\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"image\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"data\"\n            },\n            {\n              \"name\": \"prompt\",\n              \"value\": \"add a mask with horns\"\n            },\n            {\n              \"name\": \"model\",\n              \"value\": \"gpt-image-1\"\n            },\n            {\n              \"name\": \"n\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"size\",\n              \"value\": \"1024x1024\"\n            },\n            {\n              \"name\": \"quality\",\n              \"value\": \"high\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"JyI0PkPec1FrpMkt\",\n          \"name\": \"OpenAi AIFB account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1e1df05c-d8f9-4033-87ee-70be344ab961\",\n      \"name\": \"Create image call\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -120,\n        -40\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/images/generations\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"model\",\n              \"value\": \"gpt-image-1\"\n            },\n            {\n              \"name\": \"prompt\",\n              \"value\": \"A cute red panda like dark super hero\"\n            },\n            {\n              \"name\": \"n\",\n              \"value\": \"={{Number(1)}}\"\n            },\n            {\n              \"name\": \"size\",\n              \"value\": \"1024x1024\"\n            },\n            {\n              \"name\": \"moderation\",\n              \"value\": \"low\"\n            },\n            {\n              \"name\": \"background\",\n              \"value\": \"auto\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"JyI0PkPec1FrpMkt\",\n          \"name\": \"OpenAi AIFB account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4c44da91-0d12-4e7f-bc89-5accddd837d7\",\n      \"name\": \"Convert json binary to File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        200,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"name_example\",\n          \"mimeType\": \"image/png\"\n        },\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data[0].b64_json\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3b8936b7-f0a2-4776-b10a-f06ceb9af31d\",\n      \"name\": \"Convert json binary to File final\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        820,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"\",\n          \"mimeType\": \"image/png\"\n        },\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data[0].b64_json\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3d3238d5-6040-4b74-8e6a-9e1e64198099\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -500,\n        -200\n      ],\n      \"parameters\": {\n        \"height\": 320,\n        \"content\": \"### üß™ Manual Trigger\\nStarts the workflow manually. Ideal for testing and debugging purposes.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c3378100-f688-4199-a038-83b9220afa91\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -200,\n        -320\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 280,\n        \"height\": 440,\n        \"content\": \"### üé® Image Generation (OpenAI)\\nSends a POST request to the OpenAI `/v1/images/generations` endpoint.\\n\\n- Uses `gpt-image-1` model\\n- Generates an image from a given prompt\\n- Returns a base64-encoded image (`b64_json`)\\n\\nüìå Output: `data[0].b64_json`\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82a880de-74de-44e5-8448-f487c9376d0e\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        -200\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 280,\n        \"height\": 320,\n        \"content\": \"### üßæ Convert base64 to File\\nConverts the `b64_json` field into a binary PNG file to use in the next step.\\n\\nüì§ Output: Binary image under the `data` field\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"42ccb29f-b820-4791-9683-4eb0f00ff2d3\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        420,\n        -320\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 280,\n        \"height\": 440,\n        \"content\": \"### ‚úèÔ∏è Image Editing (OpenAI)\\nSends the binary image to OpenAI‚Äôs `/v1/images/edits` endpoint with a descriptive prompt.\\n\\n- Model: `gpt-image-1`\\n- Format: `multipart/form-data`\\n- Requires a real file (not base64)\\n- Supports optional `mask` input\\n\\nüì• Input: Binary image from `data`\\nüì§ Output: Edited image in `b64_json`\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c8846ab-b3f2-4c7c-9283-5a40a55b816d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        740,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 280,\n        \"height\": 360,\n        \"content\": \"### üßæ Final Conversion (base64 ‚Üí File)\\nConverts the edited image (`b64_json`) into a downloadable or previewable PNG file.\\n\\nüì§ Output: Final binary image\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b2533f8-b7aa-4499-970e-9b0546b73c0e\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1240,\n        -860\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 700,\n        \"height\": 980,\n        \"content\": \"## üß† Image AI Workflow Overview\\n\\nThis workflow uses OpenAI's image generation and editing APIs with the `gpt-image-1` model.\\n\\n### üîë Requirements:\\n- You **must use your own OpenAI API key** from https://platform.openai.com/account/api-keys\\n- Create a credential in n8n called `OpenAi AIFB account` (or use your own name)\\n\\n---\\n\\n### üí∞ Cost Warning:\\n- This model is **powerful but expensive**.\\n- Each image costs **$0.020 to $0.190** depending on resolution and type.\\n- Always monitor your usage via the [OpenAI dashboard](https://platform.openai.com/account/usage)\\n\\n---\\n\\n### üîç Why use `gpt-image-1`?\\n- Unmatched **semantic control**: you can edit specific parts of images with detailed prompts.\\n- Supports **multiple input images**, coherent edits, and future multi-modal tasks.\\n- Editing works with or without a transparency `mask`.\\n\\n---\\n\\n### üîß Suggested Nodes to Expand Workflow:\\n- **Webhook** (trigger via your frontend or app)\\n- **Telegram / Slack** (prompt image generation from chat)\\n- **Set node** (inject dynamic prompts or user context)\\n- **IF / Switch** (change behavior depending on prompt type)\\n- **Merge** (combine multiple image generations)\\n- **HTTP Request** (send generated images to external APIs or CMS)\\n\\n---\\n\\n### üí° Example Use Cases:\\n- Marketing teams: generate product visuals on demand\\n- Designers: edit and re-style illustrations without Photoshop\\n- E-commerce: dynamic generation of themed mockups\\n- Content creators: create blog and social thumbnails in bulk\\n\\n---\\n\\n> ‚ö†Ô∏è Don't forget to add rate limiting or batch controls if generating large volumes!\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Create image call\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert json binary to File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Image (OpenAI)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert json binary to File final\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert json binary to File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Image (OpenAI)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‚ÄòTest workflow‚Äô\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create image call\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.convertToFile",
      "n8n-nodes-base.convertToFile",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}