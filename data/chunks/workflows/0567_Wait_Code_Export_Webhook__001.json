{
  "source": "0567_Wait_Code_Export_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"23GPrqZjHnIVvTEa\",\n  \"meta\": {\n    \"instanceId\": \"[instance id auto generated]\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Backup n8n Workflows to Bitbucket\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b3363b9d-ea6e-47b7-99f9-f48a21805886\",\n      \"name\": \"Calculate Wait Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1400,\n        -260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get all input items and ensure we have data\\nif ($input.all().length === 0 || !$input.all()[0].headers) {\\n  // If no headers available, return default wait time\\n  return { waitTime: 1 };\\n}\\n\\n// Check rate limit headers from previous request\\nconst headers = $input.all()[0].headers;\\nlet waitTime = 1; // Default 1 second\\n\\n// Check if we have rate limit information (safely)\\nconst remaining = parseInt(headers['x-ratelimit-remaining']) || null;\\nconst reset = parseInt(headers['x-ratelimit-reset']) || null;\\n\\n// Only adjust wait time if we have valid rate limit info\\nif (remaining !== null && reset !== null) {\\n  // If we're running low on requests, calculate a longer wait time\\n  if (remaining < 100) {\\n    // Calculate seconds until reset\\n    const now = Math.floor(Date.now() / 1000);\\n    const timeUntilReset = reset - now;\\n    \\n    // Spread remaining requests over time until reset\\n    // Add 10% buffer to be safe\\n    waitTime = Math.ceil((timeUntilReset / remaining) * 1.1);\\n  } else if (remaining < 500) {\\n    // Start slowing down earlier\\n    waitTime = 2;\\n  }\\n}\\n\\n// Cap maximum wait time at 30 seconds\\nwaitTime = Math.min(waitTime, 30);\\n\\nreturn { waitTime };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3cbc2287-b36f-4839-87b7-be4a7eadcf79\",\n      \"name\": \"Run Daily at 2 AM\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -120,\n        -20\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"09b396aa-61e8-4631-8aae-7126fbd609e6\",\n      \"name\": \"Get All Workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        320,\n        -20\n      ],\n      \"parameters\": {\n        \"filters\": {},\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"[n8n-api-credential-id]\",\n          \"name\": \"n8n Development Environment\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c46b50cd-432f-4714-ac68-b6f92663b592\",\n      \"name\": \"Loop Workflows\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        540,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2a27e85d-51c0-4f45-a7d6-6422fc8a439b\",\n      \"name\": \"Get Existing Worfklow from Bitbucket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        780,\n        -20\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src/main/{{ $json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"[bitbucket-credential-id]\",\n          \"name\": \"Bitbucket\"\n        }\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"eeb52f03-dd60-46ae-ad86-1cabf7f6c20f\",\n      \"name\": \"New or Changed?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        980,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": false,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"2d5da90e-0f1d-436b-84d4-d82deaaa4b58\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.error.status }}\",\n              \"rightValue\": 404\n            },\n            {\n              \"id\": \"b7b9a48d-8954-4cc4-bf7a-ab30439ad930\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $('Get Existing Worfklow from Bitbucket').item.json.data }}\",\n              \"rightValue\": \"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"04400827-d331-4ee2-8a67-1238ea2dc969\",\n      \"name\": \"Upload Workflow to Bitbucket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1200,\n        -260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {\n              \"maxRedirects\": 5\n            }\n          },\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        },\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"message\",\n              \"value\": \"={{ $('Loop Workflows').item.json.name + ' [' + $now.format('yyyy-MM-dd HH:mm:ss') +']' }}\"\n            },\n            {\n              \"name\": \"={{ $('Loop Workflows').item.json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\n              \"value\": \"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/x-www-form-urlencoded\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"[bitbucket-credential-id]\",\n          \"name\": \"Bitbucket\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5f198366-3bcf-4a96-ae60-da7cc9403a6f\",\n      \"name\": \"Wait to Avoid Rate Limiting\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        1620,\n        -20\n      ],\n      \"webhookId\": \"793d7525-d166-4487-a71f-d48da7c66662\",\n      \"parameters\": {\n        \"amount\": \"={{ $json.waitTime || 1 }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"adc37b33-c5af-4a44-ba87-9806efe25603\",\n      \"name\": \"Set Bitbucket Workspace & Repository\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        100,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"37f2ddba-188d-4bc1-98b3-5c5fa31d2d62\",\n              \"name\": \"WorkspaceSlug\",\n              \"type\": \"string\",\n              \"value\": \"[workspace-slug]\"\n            },\n            {\n              \"id\": \"303f25f0-bba8-4977-8f4f-33961e2e7e8c\",\n              \"name\": \"RepositorySlug\",\n              \"type\": \"string\",\n              \"value\": \"[repository-slug]\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f21887f2-e885-42c6-a934-4f7617e267dd\",\n  \"connections\": {\n    \"Loop Workflows\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Get Existing Worfklow from Bitbucket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"New or Changed?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload Workflow to Bitbucket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait to Avoid Rate Limiting\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run Daily at 2 AM\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Bitbucket Workspace & Repository\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculate Wait Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait to Avoid Rate Limiting\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait to Avoid Rate Limiting\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload Workflow to Bitbucket\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculate Wait Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Existing Worfklow from Bitbucket\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"New or Changed?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Bitbucket Workspace & Repository\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.code",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.if",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}