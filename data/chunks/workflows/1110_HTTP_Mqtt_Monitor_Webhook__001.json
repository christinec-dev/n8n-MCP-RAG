{
  "source": "1110_HTTP_Mqtt_Monitor_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"6pOGYw5O3iOY1Gc6\",\n  \"meta\": {\n    \"instanceId\": \"7221598654c32899e94731aab144bdcd338735c2ac218dc0873131caa0be0ef8\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Remote IOT Sensor monitoring via MQTT and InfluxDB\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"4997f226-f236-4d27-bea4-904744d9ff07\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -700,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 120,\n        \"content\": \"MQTT trigger subscribed to a topic called wokwi-weather via a Mosquitto MQTT broker. The trigger receives the temperature and humidity payloads from a DHT22 sensor connected to a remote ESP32 microcontroller \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9d4f1da6-fda3-4312-a6b1-bd0ac499dde7\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        -360\n      ],\n      \"parameters\": {\n        \"height\": 100,\n        \"content\": \"Javascript code to extract the temperature and humidity values to ensure correct JSON format for the database\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d8f01dba-5019-457e-8c1a-99c802282fdf\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 260,\n        \"height\": 120,\n        \"content\": \"HTTP request node posts temperature and humidity data from the DHT22 sensor to the InfluxDB data bucket running on a local host http://localhost:8086\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"020858a6-7771-4322-8eb6-b83e99b3563d\",\n      \"name\": \"Remote Sensor MQTT Trigger\",\n      \"type\": \"n8n-nodes-base.mqttTrigger\",\n      \"position\": [\n        -580,\n        -220\n      ],\n      \"parameters\": {\n        \"topics\": \"wokwi-weather\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"mqtt\": {\n          \"id\": \"xtd75tjk1hKlQOba\",\n          \"name\": \"MQTT account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51e6f59f-9b93-4121-8db4-7f47b929fdf5\",\n      \"name\": \"Data ingest to InfluxDB bucket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        200,\n        -220\n      ],\n      \"parameters\": {\n        \"url\": \"http://localhost:8086/api/v2/write?orgID=<Organization ID>&bucket=<InfluxDB bucket name>&precision=s\",\n        \"body\": \"={{ $json.payload }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"raw\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"Token  <API Token value generated in InfluxDB>\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"6abe1212-b128-492f-b485-401a4315fcbc\",\n      \"name\": \"Payload data preparation node\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -180,\n        -220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Try to parse the incoming message as JSON\\nlet data;\\ntry {\\n  data = JSON.parse($json.message); // $json.message is expected to be a JSON string\\n} catch (e) {\\n  // If parsing fails, throw an error\\n  throw new Error(\\\"Invalid JSON in MQTT message\\\");\\n}\\n\\n// Get the topic from the input, or use a default value\\nconst topic = $json.topic || \\\"unknown-topic\\\";\\n\\n// Make sure humidity and temp are numbers\\nif (typeof data.humidity !== \\\"number\\\" || typeof data.temp !== \\\"number\\\") {\\n  throw new Error(\\\"Missing or invalid humidity/temp in MQTT message\\\");\\n}\\n\\n// Create a formatted string like: \\\"topic_name humidity=45,temp=22\\\"\\nconst line = `${topic} humidity=${data.humidity},temp=${data.temp}`;\\n\\n// Return the result in the expected format\\nreturn [\\n  {\\n    json: {\\n      payload: line\\n    }\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"d1311dca-5edf-4f14-86b9-629937cd3416\",\n  \"connections\": {\n    \"Remote Sensor MQTT Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Payload data preparation node\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Payload data preparation node\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Data ingest to InfluxDB bucket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.mqttTrigger",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code"
    ],
    "trigger": "remote sensor mqtt trigger"
  }
}