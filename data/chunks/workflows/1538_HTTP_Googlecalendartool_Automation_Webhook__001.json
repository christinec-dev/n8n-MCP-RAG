{
  "source": "1538_HTTP_Googlecalendartool_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"Z5OgwYfK4reCTv9y\",\n  \"meta\": {\n    \"instanceId\": \"c59c4acfed171bdc864e7c432be610946898c3ee271693e0303565c953d88c1d\"\n  },\n  \"name\": \"LINE Assistant with Google Calendar and Gmail Integration\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"9e1e1c11-f406-47de-8f65-9669cf078d3d\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -1140,\n        120\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.body.events[0].message.text }}\",\n        \"options\": {\n          \"systemMessage\": \"=You are a helpful assistant.\\n\\nHere is the current date {{ $now }}\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"fa722820-8804-47da-bb21-02c0d2b5d665\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        -1020,\n        580\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"={{ $json.body.events[0].source.userId }}\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"5149b91a-5934-4037-a444-dfdb93d0cd16\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -1180,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"211a120d-d65f-4708-adc2-66dc8f4a40d6\",\n      \"name\": \"Wikipedia\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\",\n      \"position\": [\n        -360,\n        380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0e03137d-0300-47a4-bbd8-03c87c93d6e2\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        -780,\n        120\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\",\n          \"cachedResultName\": \"GPT-4O-MINI\"\n        },\n        \"options\": {},\n        \"messages\": {\n          \"values\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"Your task is to extract and condense the answer into an easily readable format. Don't provide a link or details such as \\\"\\u0e14\\u0e39\\u0e40\\u0e1e\\u0e34\\u0e48\\u0e21\\u0e40\\u0e15\\u0e34\\u0e21\\\" or \\\"\\u0e14\\u0e39\\u0e23\\u0e32\\u0e22\\u0e25\\u0e30\\u0e40\\u0e2d\\u0e35\\u0e22\\u0e14\\u0e44\\u0e14\\u0e49\\u0e17\\u0e35\\u0e48\\u0e19\\u0e35\\u0e48.\\\"\"\n            },\n            {\n              \"content\": \"={{ $json.output }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"8c6e96bc-aa9d-44d1-b7ce-6bb85b175cf1\",\n      \"name\": \"Switch Between Text and Others\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -1820,\n        640\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Line Receiving').item.json.body.events[0].message.type }}\",\n                    \"rightValue\": \"text\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"721a5e5e-3a9a-435e-9302-03ca7cf64fb7\",\n      \"name\": \"Line Receiving\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -2320,\n        560\n      ],\n      \"webhookId\": \"********-****-****-****-************\",\n      \"parameters\": {\n        \"path\": \"linechatbotagent\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2b47f8f1-a501-4204-9221-c838edfceae7\",\n      \"name\": \"Error Handling from AI Response\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -220,\n        100\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"exists\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.message.content }}\",\n                    \"rightValue\": \"={{ $json.output }}\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"99218c08-5ec7-44b9-a795-e98f1ec4aab3\",\n      \"name\": \"Text Cleansing\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"********-****-****-****-************\",\n              \"name\": \"message.content\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.message.content.replaceAll(\\\"\\\\n\\\",\\\"\\\\\\\\n\\\").replaceAll(\\\"\\\\n\\\",\\\"\\\").removeMarkdown().removeTags().replaceAll('\\\"',\\\"\\\") }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"39476f44-9dc7-4c72-a857-9e79f85ccd72\",\n      \"name\": \"Line Answering (Error Case)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        760,\n        680\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.line.me/v2/bot/message/reply\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"replyToken\\\": \\\"{{ $('Line Receiving').item.json.body.events[0].replyToken }}\\\",\\n \\\"messages\\\": [\\n {\\n \\\"type\\\": \\\"text\\\",\\n \\\"text\\\": \\\"\\u0e01\\u0e23\\u0e38\\u0e13\\u0e32\\u0e2a\\u0e48\\u0e07\\u0e2d\\u0e22\\u0e48\\u0e32\\u0e07\\u0e2d\\u0e37\\u0e48\\u0e19\\u0e40\\u0e16\\u0e2d\\u0e30\\u0e19\\u0e30\\u0e40\\u0e15\\u0e07\\u0e2d\\u0e31\\u0e27\\\"\\n }\\n ]}\",\n        \"sendBody\": true,\n        \"jsonHeaders\": \"{\\n\\\"Authorization\\\": \\\"Bearer ****************************************\\\",\\n\\\"Content-Type\\\": \\\"application/json\\\"\\n}\",\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"specifyHeaders\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"a7f8837d-c21b-457d-ad8b-b0b69e3c1ba7\",\n      \"name\": \"Line Answering (Ordinary Case)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        600,\n        120\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.line.me/v2/bot/message/reply\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"replyToken\\\": \\\"{{ $('Line Receiving').item.json.body.events[0].replyToken }}\\\",\\n \\\"messages\\\": [\\n {\\n \\\"type\\\": \\\"text\\\",\\n \\\"text\\\": \\\"{{ $json.message.content }}\\\"\\n }\\n ]}\",\n        \"sendBody\": true,\n        \"jsonHeaders\": \"{\\n\\\"Authorization\\\": \\\"Bearer ****************************************\\\",\\n\\\"Content-Type\\\": \\\"application/json\\\"\\n}\",\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"specifyHeaders\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3280f331-0130-41c2-a581-14feccf76514\",\n      \"name\": \"Google Calendar Create\",\n      \"type\": \"n8n-nodes-base.googleCalendarTool\",\n      \"position\": [\n        -640,\n        400\n      ],\n      \"parameters\": {\n        \"end\": \"= {{ $fromAI(\\\"createenddate\\\",\\\"end date and time to create event\\\") }}\",\n        \"start\": \"= {{ $fromAI(\\\"createstartdate\\\",\\\"start date and time to create event\\\") }}\",\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"***********@gmail.com\",\n          \"cachedResultName\": \"***********@gmail.com\"\n        },\n        \"additionalFields\": {\n          \"summary\": \"={{ $fromAI(\\\"event_name\\\",\\\"Name of an Event\\\") }}\"\n        }\n      },\n      \"credentials\": {\n        \"googleCalendarOAuth2Api\": {\n          \"id\": \"0PzHsuCKdTBU5E2Q\",\n          \"name\": \"Google Calendar account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"7701895f-9781-41b9-aa80-8440e4e9cbd3\",\n      \"name\": \"Google Calendar Read\",\n      \"type\": \"n8n-nodes-base.googleCalendarTool\",\n      \"position\": [\n        -880,\n        580\n      ],\n      \"parameters\": {\n        \"limit\": 5,\n        \"options\": {\n          \"timeMax\": \"={{ $fromAI(\\\"enddate\\\",\\\"end date user mentioned about\\\") }}\",\n          \"timeMin\": \"={{ $fromAI(\\\"startdate\\\",\\\"start date user mentioned about\\\") }}\"\n        },\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"***********@gmail.com\",\n          \"cachedResultName\": \"***********@gmail.com\"\n        },\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"googleCalendarOAuth2Api\": {\n          \"id\": \"0PzHsuCKdTBU5E2Q\",\n          \"name\": \"Google Calendar account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"881daa7f-cf9a-4d1f-8235-55d206925ac0\",\n      \"name\": \"Gmail Read\",\n      \"type\": \"n8n-nodes-base.gmailTool\",\n      \"position\": [\n        -700,\n        560\n      ],\n      \"webhookId\": \"********-****-****-****-************\",\n      \"parameters\": {\n        \"limit\": 5,\n        \"filters\": {\n          \"receivedAfter\": \"={{ $fromAI(\\\"receiveddate\\\",\\\"the date email received\\\") }}\"\n        },\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"cZmU8EQya5OtXVgQ\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Line Receiving\": [\n      {\n        \"json\": {\n          \"body\": {\n            \"events\": [\n              {\n                \"mode\": \"active\",\n                \"type\": \"message\",\n                \"source\": {\n                  \"type\": \"user\",\n                  \"userId\": \"****************************************\"\n                },\n                \"message\": {\n                  \"id\": \"539986086979174564\",\n                  \"text\": \"\",\n                  \"type\": \"text\",\n                  \"quoteToken\": \"****************************************\"\n                },\n                \"timestamp\": 1734688093030,\n                \"replyToken\": \"********************************\",\n                \"webhookEventId\": \"01JFHQFD2KQE4BA5VVW32YDBZV\",\n                \"deliveryContext\": {\n                  \"isRedelivery\": false\n                }\n              }\n            ],\n            \"destination\": \"****************************************\"\n          },\n          \"query\": {},\n          \"params\": {},\n          \"headers\": {\n            \"host\": \"n8n-9pul.onrender.com\",\n            \"cf-ray\": \"****************\",\n            \"rndr-id\": \"****************\",\n            \"cdn-loop\": \"cloudflare; loops=1; subreqs=1\",\n            \"cf-ew-via\": \"15\",\n            \"cf-worker\": \"onrender.com\",\n            \"cf-visitor\": \"{\\\"scheme\\\":\\\"https\\\"}\",\n            \"user-agent\": \"LineBotWebhook/2.0\",\n            \"cf-ipcountry\": \"JP\",\n            \"content-type\": \"application/json; charset=utf-8\",\n            \"content-length\": \"619\",\n            \"true-client-ip\": \"***.***.***.**\",\n            \"accept-encoding\": \"gzip, br\",\n            \"x-forwarded-for\": \"***.***.***.***, ***.***.***.**\",\n            \"x-request-start\": \"1734688093431195\",\n            \"cf-connecting-ip\": \"***.***.***.**\",\n            \"render-proxy-ttl\": \"4\",\n            \"x-line-signature\": \"****************************************\",\n            \"x-forwarded-proto\": \"https\"\n          },\n          \"webhookUrl\": \"https://n8n-9pul.onrender.com/webhook/linechatbotagent\",\n          \"executionMode\": \"production\"\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"14065639-6706-4161-9380-4f4dde6eb501\",\n  \"connections\": {\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Error Handling from AI Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wikipedia\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gmail Read\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Line Receiving\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch Between Text and Others\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Text Cleansing\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Line Answering (Ordinary Case)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Calendar Read\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Calendar Create\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch Between Text and Others\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Line Answering (Error Case)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Handling from AI Response\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Text Cleansing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Line Answering (Error Case)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.toolWikipedia",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.googleCalendarTool",
      "n8n-nodes-base.googleCalendarTool",
      "n8n-nodes-base.gmailTool"
    ],
    "trigger": null
  }
}