{
  "source": "1464_HTTP_Stickynote_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"GToc9QTzJY1h1w3y\",\n  \"meta\": {\n    \"instanceId\": \"cba4a4a2eb5d7683330e2944837278938831ed3c042e20da6f5049c07ad14798\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"AI-Powered Research with Jina AI Deep Search\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"c76a7993-e7b1-426e-bcb4-9a18d9c72b83\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -820,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 740,\n        \"height\": 760,\n        \"content\": \"\\n# **🚀 Developed by Leonard van Hemert**  \\n\\nThank you for using **FREE: Open Deep Research 2.0**! 🎉  \\n\\nThis workflow was created to **democratize AI-powered research** and make advanced **automated knowledge discovery** available to **everyone**, without **API restrictions** or **cost barriers**.  \\n\\nIf you find this useful, feel free to **connect with me on LinkedIn** and stay updated on my latest AI & automation projects!  \\n\\n🔗 **Follow me on LinkedIn**: [Leonard van Hemert](https://www.linkedin.com/in/leonard-van-hemert/)  \\n\\nI truly appreciate the support from the **n8n community**, and I can’t wait to see how you use and improve this workflow! 🚀  \\n\\nHappy researching,  \\n**Leonard van Hemert** 💡\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5620b6b5-1485-43a8-9acd-3368147bd742\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        -140\n      ],\n      \"parameters\": {\n        \"width\": 740,\n        \"height\": 300,\n        \"content\": \"## 🚀 **FREE: Open Deep Research 2.0**  \\nFully automated **AI-powered research workflow** using **Jina AI’s DeepSearch** to generate structured, fact-based reports—**no API key required!**  \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dbe1cc91-34b4-4e5b-b404-dd86f47d1ebf\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 740,\n        \"height\": 440,\n        \"content\": \"## 🧠 **How This Workflow Works**  \\n\\nThis workflow automates **deep research and report generation** using **Jina AI's DeepSearch API**, making **advanced knowledge discovery accessible for free**.  \\n\\n1️⃣ **User Input → AI Research**  \\n- A user **enters a research query** via chat.  \\n- The workflow **sends the query** to **Jina AI’s DeepSearch API** for **in-depth analysis**.  \\n\\n2️⃣ **AI-Powered Insights**  \\n- DeepSearch **retrieves** and **analyzes** relevant information.  \\n- The response includes **key insights, structured analysis, and sources**.  \\n\\n3️⃣ **Markdown Formatting & Cleanup**  \\n- The response **passes through a Code Node** that extracts, cleans, and **formats** the AI-generated insights into **readable Markdown output**.  \\n- URLs are properly formatted, footnotes are structured, and the report is easy to read.  \\n\\n4️⃣ **Final Output**  \\n- The final, **well-structured research report** is ready for use, **fully automated and free of charge!**  \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"42fd2f04-7d83-44c9-a41b-48860efbcf79\",\n      \"name\": \"Jina AI DeepSearch Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://deepsearch.jina.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"jina-deepsearch-v1\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an advanced AI researcher that provides precise, well-structured, and insightful reports based on deep analysis. Your responses are factual, concise, and highly relevant.\\\"\\n    },\\n    {\\n      \\\"role\\\": \\\"assistant\\\",\\n      \\\"content\\\": \\\"Hi, how can I help you?\\\"\\n    },\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"Provide a deep and insightful analysis on: \\\\\\\"{{ $json.chatInput }}\\\\\\\". Ensure the response is well-structured, fact-based, and directly relevant to the topic, with no unnecessary information.\\\"\\n    }\\n  ],\\n  \\\"stream\\\": true,\\n  \\\"reasoning_effort\\\": \\\"low\\\"\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1b7b3bbe-2068-4d3a-a962-134bbb6ee516\",\n      \"name\": \"User Research Query Input\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"webhookId\": \"8a4b05af-cd63-4692-9924-e35aaed5f077\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"218cbfe2-78de-4b00-875a-51761ac9f5c7\",\n      \"name\": \"Format & Clean AI Response\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        440,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function extractAndFormatMarkdown(input) {\\n    let extractedContent = [];\\n\\n    // Extract raw data string from n8n input\\n    let rawData = input.first().json.data;\\n\\n    // Split into individual JSON strings\\n    let jsonStrings = rawData.split(\\\"\\\\n\\\\ndata: \\\").map(s => s.replace(/^data: /, ''));\\n\\n    let lastContent = \\\"\\\";\\n    \\n    // Reverse loop to find the last \\\"content\\\" field\\n    for (let i = jsonStrings.length - 1; i >= 0; i--) {\\n        try {\\n            let parsedChunk = JSON.parse(jsonStrings[i]);\\n\\n            if (parsedChunk.choices && parsedChunk.choices.length > 0) {\\n                for (let j = parsedChunk.choices.length - 1; j >= 0; j--) {\\n                    let choice = parsedChunk.choices[j];\\n\\n                    if (choice.delta && choice.delta.content) {\\n                        lastContent = choice.delta.content.trim();\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            if (lastContent) break; // Stop once the last content is found\\n        } catch (error) {\\n            console.error(\\\"Failed to parse JSON string:\\\", jsonStrings[i], error);\\n        }\\n    }\\n\\n    // Clean and format Markdown\\n    lastContent = lastContent.replace(/\\\\[\\\\^(\\\\d+)\\\\]: (.*?)\\\\n/g, \\\"[$1]: $2\\\\n\\\");  // Format footnotes\\n    lastContent = lastContent.replace(/\\\\[\\\\^(\\\\d+)\\\\]/g, \\\"[^$1]\\\");  // Inline footnotes\\n    lastContent = lastContent.replace(/(https?:\\\\/\\\\/[^\\\\s]+)(?=[^]]*\\\\])/g, \\\"<$1>\\\");  // Format links\\n\\n    // Return formatted content as an array of objects (n8n expects this format)\\n    return [{ text: lastContent.trim() }];\\n}\\n\\n// Execute function and return formatted output\\nreturn extractAndFormatMarkdown($input);\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e03d69b5-3304-4f28-b99f-970d6fd1225b\",\n  \"connections\": {\n    \"User Research Query Input\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Jina AI DeepSearch Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format & Clean AI Response\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Jina AI DeepSearch Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format & Clean AI Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "n8n-nodes-base.code"
    ],
    "trigger": null
  }
}