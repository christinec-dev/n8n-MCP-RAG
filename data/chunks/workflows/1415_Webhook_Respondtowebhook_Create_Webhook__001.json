{
  "source": "1415_Webhook_Respondtowebhook_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"eXiaTDyKfXpMeyLh\",\n  \"meta\": {\n    \"instanceId\": \"f4f5d195bb2162a0972f737368404b18be694648d365d6c6771d7b4909d28167\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Dynamically generate HTML page from user request using OpenAI Structured Output\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b1d9659f-4cd0-4f87-844d-32b2af1dcf13\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        2160,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseHeaders\": {\n            \"entries\": [\n              {\n                \"name\": \"Content-Type\",\n                \"value\": \"text/html; charset=UTF-8\"\n              }\n            ]\n          }\n        },\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json.html }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5ca8ad3e-7702-4f07-af24-d38e94fdc4ec\",\n      \"name\": \"Open AI - Using Structured Output\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1240,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n \\\"model\\\": \\\"gpt-4o-2024-08-06\\\",\\n \\\"messages\\\": [\\n {\\n \\\"role\\\": \\\"system\\\",\\n \\\"content\\\": \\\"You are a user interface designer and copy writter. Your job is to help users visualize their website ideas. You design elegant and simple webs, with professional text. You use Tailwind framework\\\"\\n },\\n {\\n \\\"role\\\": \\\"user\\\",\\n \\\"content\\\": \\\"{{ $json.query.query }}\\\"\\n }\\n ],\\n \\\"response_format\\\":\\n{\\n \\\"type\\\": \\\"json_schema\\\",\\n \\\"json_schema\\\": {\\n \\\"name\\\": \\\"ui\\\",\\n \\\"description\\\": \\\"Dynamically generated UI\\\",\\n \\\"strict\\\": true,\\n \\\"schema\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"type\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The type of the UI component\\\",\\n \\\"enum\\\": [\\n \\\"div\\\",\\n \\\"span\\\",\\n \\\"a\\\",\\n \\\"p\\\",\\n \\\"h1\\\",\\n \\\"h2\\\",\\n \\\"h3\\\",\\n \\\"h4\\\",\\n \\\"h5\\\",\\n \\\"h6\\\",\\n \\\"ul\\\",\\n \\\"ol\\\",\\n \\\"li\\\",\\n \\\"img\\\",\\n \\\"button\\\",\\n \\\"input\\\",\\n \\\"textarea\\\",\\n \\\"select\\\",\\n \\\"option\\\",\\n \\\"label\\\",\\n \\\"form\\\",\\n \\\"table\\\",\\n \\\"thead\\\",\\n \\\"tbody\\\",\\n \\\"tr\\\",\\n \\\"th\\\",\\n \\\"td\\\",\\n \\\"nav\\\",\\n \\\"header\\\",\\n \\\"footer\\\",\\n \\\"section\\\",\\n \\\"article\\\",\\n \\\"aside\\\",\\n \\\"main\\\",\\n \\\"figure\\\",\\n \\\"figcaption\\\",\\n \\\"blockquote\\\",\\n \\\"q\\\",\\n \\\"hr\\\",\\n \\\"code\\\",\\n \\\"pre\\\",\\n \\\"iframe\\\",\\n \\\"video\\\",\\n \\\"audio\\\",\\n \\\"canvas\\\",\\n \\\"svg\\\",\\n \\\"path\\\",\\n \\\"circle\\\",\\n \\\"rect\\\",\\n \\\"line\\\",\\n \\\"polyline\\\",\\n \\\"polygon\\\",\\n \\\"g\\\",\\n \\\"use\\\",\\n \\\"symbol\\\"\\n]\\n },\\n \\\"label\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The label of the UI component, used for buttons or form fields\\\"\\n },\\n \\\"children\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"description\\\": \\\"Nested UI components\\\",\\n \\\"items\\\": {\\n \\\"$ref\\\": \\\"#\\\"\\n }\\n },\\n \\\"attributes\\\": {\\n \\\"type\\\": \\\"array\\\",\\n \\\"description\\\": \\\"Arbitrary attributes for the UI component, suitable for any element using Tailwind framework\\\",\\n \\\"items\\\": {\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"name\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The name of the attribute, for example onClick or className\\\"\\n },\\n \\\"value\\\": {\\n \\\"type\\\": \\\"string\\\",\\n \\\"description\\\": \\\"The value of the attribute using the Tailwind framework classes\\\"\\n }\\n },\\n \\\"additionalProperties\\\": false,\\n \\\"required\\\": [\\\"name\\\", \\\"value\\\"]\\n }\\n }\\n },\\n \\\"required\\\": [\\\"type\\\", \\\"label\\\", \\\"children\\\", \\\"attributes\\\"],\\n \\\"additionalProperties\\\": false\\n }\\n }\\n}\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"WqzqjezKh8VtxdqA\",\n          \"name\": \"OpenAi account - Baptiste\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"24e5ca73-a3b3-4096-8c66-d84838d89b0c\",\n      \"name\": \"OpenAI - JSON to HTML\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1420,\n        380\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\",\n          \"cachedResultName\": \"GPT-4O-MINI\"\n        },\n        \"options\": {\n          \"temperature\": 0.2\n        },\n        \"messages\": {\n          \"values\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"You convert a JSON to HTML. \\nThe JSON output has the following fields:\\n- html: the page HTML\\n- title: the page title\"\n            },\n            {\n              \"content\": \"={{ $json.choices[0].message.content }}\"\n            }\n          ]\n        },\n        \"jsonOutput\": true\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"WqzqjezKh8VtxdqA\",\n          \"name\": \"OpenAi account - Baptiste\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"c50bdc84-ba59-4f30-acf7-496cee25068d\",\n      \"name\": \"Format the HTML result\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        1940,\n        380\n      ],\n      \"parameters\": {\n        \"html\": \"<!DOCTYPE html>\\n\\n<html>\\n<head>\\n <meta charset=\\\"UTF-8\\\" />\\n <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n <title>{{ $json.message.content.title }}</title>\\n</head>\\n<body>\\n{{ $json.message.content.html }}\\n</body>\\n</html>\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"193093f4-b1ce-4964-ab10-c3208e343c69\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1134,\n        62\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 638,\n        \"height\": 503,\n        \"content\": \"## Generate HTML from user query\\n\\n**HTTP Request node**\\n- Send the user query to OpenAI, with a defined JSON response format - *using HTTP Request node as it has not yet been implemented in the OpenAI nodes*\\n- The response format is inspired by the [Structured Output defined in OpenAI Introduction post](https://openai.com/index/introducing-structured-outputs-in-the-api)\\n- The output is a JSON containing HTML components and attributed\\n\\n\\n**OpenAI node**\\n- Format the response from the previous node from JSON format to HTML format\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0371156a-211f-4d92-82b1-f14fe60d4b6b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 768,\n        \"height\": 503,\n        \"content\": \"## Workflow: Dynamically generate an HTML page from a user request using OpenAI Structured Output\\n\\n**Overview**\\n- This workflow is a experiment to build HTML pages from a user input using the new Structured Output from OpenAI.\\n- The Structured Output could be used in a variety of cases. Essentially, it guarantees the output from the GPT will follow a defined structure (JSON object).\\n- It uses Tailwind CSS to make it slightly nicer, but any\\n\\n**How it works**\\n- Once active, go to the production URL and add what you'd like to build as the parameter \\\"query\\\"\\n- Example: https://production_url.com?query=a%20signup%20form\\n- OpenAI nodes will first output the UI as a JSON then convert it to HTML\\n- Finally, the response is integrated in a HTML container and rendered to the user\\n\\n**Further thoughts**\\n- Results are not yet amazing, it is hard to see the direct value of such an experiment\\n- But it showcase the potential of the Structured Output. Being able to guarantee the output format is key to build robust AI applications.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06380781-5189-4d99-9ecd-d8913ce40fd5\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        820,\n        380\n      ],\n      \"webhookId\": \"d962c916-6369-431a-9d80-af6e6a50fdf5\",\n      \"parameters\": {\n        \"path\": \"d962c916-6369-431a-9d80-af6e6a50fdf5\",\n        \"options\": {\n          \"allowedOrigins\": \"*\"\n        },\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"d2307a2a-5427-4769-94a6-10eab703a788\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Open AI - Using Structured Output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI - JSON to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format the HTML result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format the HTML result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Open AI - Using Structured Output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI - JSON to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.html",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.webhook"
    ],
    "trigger": null
  }
}