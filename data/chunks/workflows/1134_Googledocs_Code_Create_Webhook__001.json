{
  "source": "1134_Googledocs_Code_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"7Qa2mH7PnDxy7Qat\",\n  \"meta\": {\n    \"instanceId\": \"a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Generate Exam Questions\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"4e037d6e-93a9-4c1b-b84a-dbbcf77beaf5\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -740,\n        120\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"febc8bb7-5de7-46d6-bc23-54673089cd3d\",\n      \"name\": \"Qdrant Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        900,\n        240\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ai_article_test\",\n          \"cachedResultName\": \"ai_article_test\"\n        }\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"iyQ6MQiVaF3VMBmt\",\n          \"name\": \"QdrantApi account (Hetzner)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2d7e2673-6559-49b3-9ed0-29ca2c376f00\",\n      \"name\": \"Create collection\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -440,\n        -20\n      ],\n      \"parameters\": {\n        \"url\": \"http://QDRANT_URL/collections/COLLECTIONS\",\n        \"method\": \"PUT\",\n        \"options\": {},\n        \"jsonBody\": \"{\\n  \\\"vectors\\\": {\\n    \\\"size\\\": 1536,\\n    \\\"distance\\\": \\\"Cosine\\\"  \\n  },\\n  \\\"shard_number\\\": 1,  \\n  \\\"replication_factor\\\": 1,  \\n  \\\"write_consistency_factor\\\": 1 \\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"qhny6r5ql9wwotpn\",\n          \"name\": \"Qdrant API (Hetzner)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"615f26b2-930c-4b74-a35c-00b83460a7c9\",\n      \"name\": \"Refresh collection\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -440,\n        240\n      ],\n      \"parameters\": {\n        \"url\": \"http://QDRANT_URL/collections/COLLECTIONS/points/delete\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"{\\n  \\\"filter\\\": {}\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"qhny6r5ql9wwotpn\",\n          \"name\": \"Qdrant API (Hetzner)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"eb34b8dd-353b-41c4-8a02-6565c3f8a7d3\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        820,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"stripNewLines\": false\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"4zwP0MSr8zkNvvV9\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"fb639802-e099-4857-823b-5e6d89fb3e86\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        1080,\n        460\n      ],\n      \"parameters\": {\n        \"loader\": \"textLoader\",\n        \"options\": {},\n        \"dataType\": \"binary\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0af5028d-56a4-4bbc-8af0-f088e54f178b\",\n      \"name\": \"Token Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter\",\n      \"position\": [\n        1040,\n        640\n      ],\n      \"parameters\": {\n        \"chunkSize\": 450,\n        \"chunkOverlap\": 50\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6a10192e-4b2e-4705-865a-fa90328ba3c1\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        -80\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 880,\n        \"height\": 220,\n        \"content\": \"# STEP 1\\n\\n## Create Qdrant Collection\\nChange:\\n- QDRANTURL\\n- COLLECTION\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1ebefe44-e5c9-43fb-b9fa-fee47b08e2c2\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 620,\n        \"height\": 400,\n        \"content\": \"# STEP 2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n## Documents vectorization with Qdrant and Google Drive\\nChange:\\n- QDRANTURL\\n- COLLECTION\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88f816ae-4331-46e0-b1f9-636ec94e8bb3\",\n      \"name\": \"Converto di MD\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        240,\n        240\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function convertToMarkdown(docContent) {\\n  let markdown = '';\\n\\n  const headingMap = {\\n    'HEADING_1': '#',\\n    'HEADING_2': '##',\\n    'HEADING_3': '###',\\n    'HEADING_4': '####',\\n    'HEADING_5': '#####',\\n    'HEADING_6': '######',\\n  };\\n\\n  for (const element of docContent.body.content) {\\n    if (!element.paragraph) continue;\\n\\n    const para = element.paragraph;\\n    let line = '';\\n\\n    // Tipo di paragrafo (normale o heading)\\n    const style = para.paragraphStyle?.namedStyleType;\\n    const prefix = headingMap[style] || '';\\n\\n    for (const el of para.elements) {\\n      if (!el.textRun) continue;\\n\\n      let text = el.textRun.content || '';\\n      const style = el.textRun.textStyle || {};\\n\\n      if (style.bold) text = `**${text.trim()}**`;\\n      if (style.italic) text = `*${text.trim()}*`;\\n      if (!style.bold && !style.italic) text = text.trim();\\n\\n      line += text;\\n    }\\n\\n    if (prefix) {\\n      markdown += `${prefix} ${line}\\\\n\\\\n`;\\n    } else {\\n      markdown += `${line}\\\\n\\\\n`;\\n    }\\n  }\\n\\n  return markdown.trim();\\n}\\n\\n// Assumiamo che il JSON completo sia in items[0].json\\nconst docJson = items[0].json;\\nconst markdown = convertToMarkdown(docJson);\\n\\nreturn [\\n  {\\n    json: {\\n      markdown,\\n    },\\n  },\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5c733b2d-3d0a-4260-af88-7907907e209f\",\n      \"name\": \"Get Doc\",\n      \"type\": \"n8n-nodes-base.googleDocs\",\n      \"position\": [\n        -60,\n        240\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"operation\": \"get\",\n        \"documentURL\": \"XXXXXXXXXXXXXXXX\"\n      },\n      \"credentials\": {\n        \"googleDocsOAuth2Api\": {\n          \"id\": \"LpmDV1ry0BPLvW8b\",\n          \"name\": \"Google Docs account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5de82976-2376-4201-a5a4-dbdd6bfcb596\",\n      \"name\": \"Vector Store Retriever\",\n      \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\",\n      \"position\": [\n        1540,\n        1040\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"25bcb865-7b15-4272-81da-4ff41a4ccc60\",\n      \"name\": \"Qdrant Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        1440,\n        1180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ai_article_test\",\n          \"cachedResultName\": \"ai_article_test\"\n        }\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"iyQ6MQiVaF3VMBmt\",\n          \"name\": \"QdrantApi account (Hetzner)\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"7dacd3ac-2d25-4960-ba53-e44ae9722dca\",\n      \"name\": \"Convert to File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        560,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"toText\",\n        \"sourceProperty\": \"markdown\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9d7561f0-5b01-4327-ab62-68a105364155\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        540,\n        980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"0p34rXqIqy8WuoPg\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f63e896-45b1-484f-9fa1-0b488691023a\",\n      \"name\": \"Item List Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserItemList\",\n      \"position\": [\n        740,\n        1000\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"numberOfItems\": 10\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"911e8654-dfef-4d4f-b1c8-247fe0091381\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1100,\n        780\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"987e13f8-f8c9-4bc1-9e4f-d11a5f8af4d7\",\n      \"name\": \"Google Gemini Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1360,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-pro-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"0p34rXqIqy8WuoPg\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c2f70831-4d5d-403b-b92d-af82205cbbdc\",\n      \"name\": \"Google Gemini Chat Model2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        520,\n        1720\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"0p34rXqIqy8WuoPg\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f4ca583-8005-4e26-88df-ffebdc2be2f6\",\n      \"name\": \"Item List Output Parser1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserItemList\",\n      \"position\": [\n        760,\n        1720\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"numberOfItems\": 10\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cacecdab-2f1c-4730-a7c5-d46dca32969c\",\n      \"name\": \"Loop Over Items1\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1080,\n        1540\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2de66223-475c-4fef-aa85-13e954a5c1cc\",\n      \"name\": \"Google Gemini Chat Model3\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1320,\n        1840\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"0p34rXqIqy8WuoPg\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"43058954-369c-477d-beee-ece1916aebb7\",\n      \"name\": \"Qdrant Vector Store2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        1380,\n        2020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ai_article_test\",\n          \"cachedResultName\": \"ai_article_test\"\n        }\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"iyQ6MQiVaF3VMBmt\",\n          \"name\": \"QdrantApi account (Hetzner)\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"27dddcae-e20a-41a9-879e-ce8ae8a0347f\",\n      \"name\": \"Embeddings OpenAI2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        1360,\n        2200\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"4zwP0MSr8zkNvvV9\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"37d164a7-94aa-4273-b91a-8b22684a45fd\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1820,\n        1820\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"correct\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t},\\n\\t\\t\\\"answers\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"array\\\",\\n\\t\\t\\t\\\"items\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"42d627b5-c033-4b2e-8ea4-fe704601b3d6\",\n      \"name\": \"RAG\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolVectorStore\",\n      \"position\": [\n        1500,\n        1820\n      ],\n      \"parameters\": {\n        \"description\": \"In base alla domanda consulta il database vettoriale ed estrapola la risposta corretta. Elabora anche altre 3 risposte non corrette.\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ce763ef2-eb54-484b-8046-7bc008012ec5\",\n      \"name\": \"Google Gemini Chat Model4\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1700,\n        1980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-pro-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"0p34rXqIqy8WuoPg\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"076994e8-0326-424e-a5c3-3d07958af0af\",\n      \"name\": \"Open questions\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        560,\n        780\n      ],\n      \"parameters\": {\n        \"text\": \"=Article:\\n'''\\n{{ $json.markdown }}\\n'''\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=## Purpose\\nYou are a specialized AI designed to analyze articles and create challenging questions that test comprehension and knowledge retention. Your task is to generate questions that encourage critical thinking about the article's content.\\n\\n## Input\\nThe input will be a text article on any subject. This could be academic, news, technical, or general interest content.\\n\\n## Output Requirements\\n- Create exactly 10 questions based on the article content\\n- DO NOT number the questions\\n- Questions should cover key facts, concepts, and implications from the article\\n- Include a mix of question types:\\n  - Factual recall questions\\n  - Inference questions that require reading between the lines\\n  - Application questions that ask how concepts might be applied\\n  - Analysis questions that probe deeper understanding\\n  - Questions about relationships between different parts of the article\\n- Questions should vary in difficulty level\\n- Avoid creating questions with simple yes/no answers\\n- Ensure questions are clearly worded and unambiguous\\n- Questions should test genuine understanding rather than trivial details\\n\\n## Output Format\\n- Present each question as a separate paragraph\\n- Do not include answers\\n- Do not include numbering or bullet points\\n- Do not include any introductory text\\n- Do not include any explanatory notes\\n\\n## Behavior Guidelines\\n- Focus on the most significant and meaningful content in the article\\n- Ensure questions thoroughly cover the entire article, not just the beginning\\n- If the article contains technical terms, create questions that test understanding of these terms\\n- If the article presents contrasting viewpoints, create questions about both perspectives\\n- Maintain neutrality - do not frame questions that suggest a particular stance\\n- If the article is highly specialized, adjust question complexity accordingly\\n- Do not create questions about information not contained in the article\\n- If the article is in a language other than English, generate questions in the same language\\n\\n## Examples of Good Questions\\n- How does the author's description of X relate to the concept of Y discussed later in the article?\\n- What evidence does the article provide to support the claim that X leads to Y?\\n- How might the framework described in the article be applied to solve similar problems in different contexts?\\n- What underlying assumptions inform the author's perspective on this issue?\\n- In what ways does the article suggest the relationship between X and Y has evolved over time?\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"5df02a14-175f-4923-9a2f-ad4514f98c71\",\n      \"name\": \"Closed questions\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        560,\n        1540\n      ],\n      \"parameters\": {\n        \"text\": \"=Article:\\n'''\\n{{ $json.markdown }}\\n'''\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=## Purpose\\nYou are a specialized AI designed to analyze articles and create high-quality multiple-choice questions that effectively test knowledge comprehension and retention. Your task is to generate questions with appropriate answer options that accurately assess understanding of the article's content.\\n\\n## Input\\nThe input will be a text article on any subject. This could be academic, news, technical, or general interest content.\\n\\n## Output Requirements\\n- Create exactly 10 multiple-choice questions based on the article content\\n- DO NOT number the questions\\n- Each question must include:\\n  - A clear question stem\\n  - Four answer options (labeled A, B, C, D)\\n  - One correct answer and three plausible distractors\\n- Questions should cover key facts, concepts, and implications from the article\\n- Include a mix of question types:\\n  - Factual recall questions\\n  - Inference questions requiring deeper understanding\\n  - Application questions testing practical knowledge\\n  - Analysis questions examining relationships between concepts\\n- Questions should vary in difficulty level\\n- Ensure questions are clearly worded and unambiguous\\n- Distractors should be plausible but clearly incorrect upon careful reading of the article\\n\\n## Output Format\\n- Present each question as a separate paragraph\\n- Format each question as:\\n  [Question]\\n  A. [Option A]\\n  B. [Option B]\\n  C. [Option C]\\n  D. [Option D]\\n- Do not indicate which answer is correct in the output\\n- Do not include any introductory text\\n- Do not include any explanatory notes\\n- Do not include numbering for questions\\n\\n## Behavior Guidelines\\n- Focus on the most significant and meaningful content in the article\\n- Ensure questions thoroughly cover the entire article, not just the beginning\\n- Make all answer options approximately the same length\\n- Avoid using absolute terms like \\\"always\\\" or \\\"never\\\" in the options\\n- Avoid grammatical clues that hint at the correct answer\\n- Make distractors plausible by:\\n  - Using common misconceptions\\n  - Including partially correct information\\n  - Using correct information from the wrong context\\n- If the article contains technical terms, create questions that test understanding of these terms\\n- If the article presents contrasting viewpoints, create questions about both perspectives\\n- Maintain neutrality - do not frame questions that suggest a particular stance\\n- If the article is in a language other than English, generate questions in the same language\\n\\n## Examples of Good Multiple-Choice Questions\\n- What is the primary factor contributing to the phenomenon described in the article?\\n  A. [Plausible but incorrect factor]\\n  B. [Correct factor from article]\\n  C. [Plausible but incorrect factor]\\n  D. [Plausible but incorrect factor]\\n\\n- According to the article, how does [concept X] impact [concept Y]?\\n  A. [Correct relationship described in article]\\n  B. [Plausible but incorrect relationship]\\n  C. [Plausible but incorrect relationship]\\n  D. [Plausible but incorrect relationship]\\n\\n- Which application of the described technology would align with the principles outlined in the article?\\n  A. [Plausible but incorrect application]\\n  B. [Plausible but incorrect application]\\n  C. [Correct application based on article]\\n  D. [Plausible but incorrect application]\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"53c89d9a-4a69-47f7-bbf1-f523e2763741\",\n      \"name\": \"Answer questions\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\",\n      \"position\": [\n        1400,\n        800\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"You are an assistant for question-answering tasks. Use the following pieces of retrieved context to answer the question.\\n\\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\nUse text plain (not markdown).\\n----------------\\nContext: {context}\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"93d55b4f-2a93-474e-b431-6fd8ef868c45\",\n      \"name\": \"Answer and create options\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1420,\n        1560\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}\",\n        \"options\": {\n          \"systemMessage\": \"=System Prompt for RAG-Based Multiple-Choice Exam Creation\\n\\nPURPOSE:\\nYou are an AI assistant specialized in creating multiple-choice exams. Your task is to generate questions with one correct answer and three plausible but incorrect options using only the Retrieval Augmented Generation (RAG) tool to source accurate information.\\n\\nINPUT:\\nYou will receive a topic, subject area, or specific question to create exam items for.\\n\\nOUTPUT REQUIREMENTS:\\n- Create multiple-choice questions with exactly four options per question\\n- Each question must have one correct answer and three false answers\\n- The correct answer must be derived directly from the RAG tool's retrieved information\\n- All false answers must be plausible but clearly incorrect when compared to the retrieved information\\n- Use plain text only (no markdown formatting)\\n- Present all content in a clean, simple format without any special formatting\\n\\nPROCESS:\\n1. For each question:\\n   - Use the RAG tool to retrieve accurate information on the topic\\n   - Formulate a clear, unambiguous question based on the retrieved information\\n   - Extract the correct answer directly from the retrieved information\\n   - Create three false answers that are plausible but contradicted by the retrieved information\\n   - Mix the order of correct and incorrect answers\\n\\n2. For creating false answers:\\n   - Use common misconceptions related to the topic\\n   - Create answers that contain partial truths but are ultimately incorrect\\n   - Modify correct information slightly to make it incorrect\\n   - Avoid obviously wrong answers that would be too easy to eliminate\\n\\nOUTPUT FORMAT:\\nQuestion: [Question text]\\nA. [Option A]\\nB. [Option B]\\nC. [Option C]\\nD. [Option D]\\n\\nGUIDELINES:\\n- Questions should be clear and direct\\n- Use simple, straightforward language\\n- Avoid negatively phrased questions (e.g., \\\"Which of the following is NOT...\\\")\\n- Ensure all answer options are approximately the same length\\n- Do not include any explanations, notes, or additional information\\n- Do not include any formatting beyond plain text\\n- Do not indicate which answer is correct in the output\\n- Ensure all questions and answers are factually accurate based on the RAG tool's information\\n- Make sure distractors (false answers) are genuinely plausible to someone not familiar with the topic\\n\\nCONSTRAINTS:\\n- You must use the RAG tool for every question\\n- You must not rely on your general knowledge without verification through RAG\\n- You must not use markdown formatting\\n- You must not include any meta-information about the questions\\n- You must ensure all answer options are mutually exclusive (no overlap in meaning)\\n- You must use plain text only for all output\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"c7e55f54-d851-4786-839d-fe839659caea\",\n      \"name\": \"Write open\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1880,\n        800\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"ANSWER\": \"={{ $json.response }}\",\n            \"QUESTION\": \"={{ $('Loop Over Items').item.json.text }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"QUESTION\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"QUESTION\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ANSWER\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ANSWER\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q/edit#gid=0\",\n          \"cachedResultName\": \"Open questions\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Question for Exam\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"JYR6a64Qecd6t8Hb\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"1c72d8f0-b5b7-4e10-ad03-6c8491136cdf\",\n      \"name\": \"Write closed\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1860,\n        1560\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"CORRECT\": \"={{ $json.output.correct }}\",\n            \"ANSWER A\": \"={{ $json.output.answers[0] }}\",\n            \"ANSWER B\": \"={{ $json.output.answers[1] }}\",\n            \"ANSWER C\": \"={{ $json.output.answers[2] }}\",\n            \"ANSWER D\": \"={{ $json.output.answers[3] }}\",\n            \"QUESTION\": \"={{ $('Closed questions').item.json.text }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"QUESTION\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"QUESTION\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ANSWER A\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ANSWER A\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ANSWER B\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ANSWER B\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ANSWER C\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ANSWER C\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ANSWER D\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ANSWER D\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"CORRECT\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"CORRECT\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": 124452194,\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q/edit#gid=124452194\",\n          \"cachedResultName\": \"Closed questions\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16zkksQMG1U9U850DFC5nDy-90VYZCgxLlyVwDB9I28Q/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Question for Exam\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"JYR6a64Qecd6t8Hb\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"9e5e41b1-32b2-413e-b63f-13e946857569\",\n      \"name\": \"Embeddings OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        1420,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"4zwP0MSr8zkNvvV9\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a87ab6ba-39b0-4c7c-be19-9003e38c9495\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        780\n      ],\n      \"parameters\": {\n        \"width\": 620,\n        \"height\": 180,\n        \"content\": \"# STEP 3\\n\\nThe chain analyzes the document and creates 10 \\\"open\\\" questions and another chain analyzes each single question and through the consultation of the vector database the optimal answer is obtained.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea81bccc-d204-44d7-89b2-85f7b3267e34\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        1540\n      ],\n      \"parameters\": {\n        \"width\": 620,\n        \"height\": 180,\n        \"content\": \"# STEP 4\\n\\nThe chain analyzes the document and creates 10 questions with \\\"closed\\\" answers and another chain analyzes each single question and through the consultation of the vector database the correct answer and 3 other wrong answers are obtained to be used as a quiz.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b510a77d-7436-4b84-b7a3-d42d75b15b59\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -480,\n        -360\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 1120,\n        \"height\": 200,\n        \"content\": \"## Auto-Generate Exam Questions from Google Docs with AI\\n\\nThis workflow automates the creation of exam questions (both open-ended and multiple-choice) from educational content stored in Google Docs, using AI-powered analysis and vector database retrieval\\n\\nThis workflow **saves educators hours of manual work** while ensuring high-quality, curriculum-aligned assessments. Let me know if you'd like help adapting it for specific subjects!\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"626a1ef7-45ae-4724-af3b-8a04b37fffc8\",\n  \"connections\": {\n    \"RAG\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Answer and create options\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Doc\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Converto di MD\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Write open\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Write closed\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Converto di MD\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Closed questions\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Convert to File\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Open questions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Open questions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Token Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Answer questions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Answer questions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write open\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Closed questions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items1\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Answer and create options\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI2\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store2\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Refresh collection\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Doc\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store1\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"Vector Store Retriever\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store2\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"RAG\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Vector Store Retriever\": {\n      \"ai_retriever\": [\n        [\n          {\n            \"node\": \"Answer questions\",\n            \"type\": \"ai_retriever\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Item List Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Open questions\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Open questions\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Item List Output Parser1\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Closed questions\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Answer and create options\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Answer and create options\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write closed\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Answer questions\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model2\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Closed questions\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model3\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Answer and create options\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model4\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"RAG\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Refresh collection\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.googleDocs",
      "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "n8n-nodes-base.convertToFile",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.outputParserItemList",
      "n8n-nodes-base.splitInBatches",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.outputParserItemList",
      "n8n-nodes-base.splitInBatches",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "@n8n/n8n-nodes-langchain.toolVectorStore",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.chainLlm",
      "@n8n/n8n-nodes-langchain.chainLlm",
      "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.googleSheets",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}