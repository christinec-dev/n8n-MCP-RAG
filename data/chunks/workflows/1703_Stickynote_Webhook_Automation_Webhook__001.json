{
  "source": "1703_Stickynote_Webhook_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"iGAzT789R7Q1fOOE\",\n  \"meta\": {\n    \"instanceId\": \"7a1e9dd164c758cbdeb7cf88274e567a937a36ed99d4d22ff24b645841097c48\",\n    \"templateId\": \"3577\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"0f361616-a552-43ed-9754-794780113955\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"webhookId\": \"c22b2240-ff07-44e5-a1aa-63584150a1cb\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"e8b9815d-0fe5-4e7c-a20b-1602384580cd\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        560,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4b15997-de4d-4c78-b623-e936442134af\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        280\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 800,\n        \"height\": 500,\n        \"content\": \"## AI Travel Agent Powered by Couchbase.\\n\\n### You will need to:\\n1. Setup your Google API Credentials for the Gemini LLM\\n2. Setup your OpenAI Credentials for the OpenAI embedding nodes.\\n3. Create a Couchbase cluster (using [Couchbase Capella](https://cloud.couchbase.com/) in the cloud, or Couchbase Server)\\n4. Add [Database credentials](https://docs.couchbase.com/cloud/clusters/manage-database-users.html#create-database-credentials) with appropriate permissions for the operations you want to perform\\n5. Configure [Allowed IP addresses](https://docs.couchbase.com/cloud/clusters/allow-ip-address.html) for your n8n instance. Use `0.0.0.0/0` for easier testing.\\n6. Create a bucket, scope, and collection. We recommend the following:\\n   - Bucket: `travel-agent`\\n   - Scope: `vectors`\\n   - Collection: `points-of-interest`\\n7. Navigate to the Data Tools, click the Search tab, and click Import Search Index. Upload the following JSON file found [here](https://gist.github.com/ejscribner/6f16343d4b44b1af31e8f344557814b0).\\n\\n\\nOnce all of that is configured you will need to send the loading webhook with some data points (see example).\\n\\nThis should create vectorized data in  `points-of-interest` collection.\\n\\nOnce you have data points there try to ask the Agent questions about the data points and test the response. Eg. \\\"Where should I go for a romantic getaway?\\\"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"34866f8e-00b0-4706-82d7-491b9531a8b6\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        800,\n        1000\n      ],\n      \"webhookId\": \"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\n      \"parameters\": {\n        \"path\": \"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\n        \"options\": {\n          \"rawBody\": true\n        },\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"26d4e62a-42b0-4e09-8585-827e5bcc9fff\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        1180,\n        1360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"jsonData\": \"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63fc308f-4d1c-4d24-9b20-68d7e6c2dbba\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        1280,\n        1540\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"84f8c32b-8e0c-457c-aaec-17827042674d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        1060\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 460,\n        \"content\": \"## CURL Command to Ingest Data.\\n\\nHere is an example of how you can load data into your webhook once its active and ready to get requests.\\n\\n```\\ncurl -X POST \\\"webhook url\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"Eiffel Tower\\\",\\n        \\\"description\\\": \\\"Iconic iron lattice tower located on the Champ de Mars in Paris, France.\\\"\\n      }\\n    }\\n  }'\\n```\\n\\n(replace webhook url with the URL listed in the webhook node)\\n\\nA shell script to bulk insert six data points can be found [here](https://gist.github.com/ejscribner/355a46a0a383a4878e65e2230b92c6b5). Be sure to activate the workflow and use the production Webhook URL when running the script.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b2cf8788-849c-4420-b448-bd49caa4941e\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        720,\n        480\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"0bf7fef9-f999-42a8-a6a8-ab111fe9a084\",\n      \"name\": \"AI Travel Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        600,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxIterations\": 10,\n          \"systemMessage\": \"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"3af3c8ce-582b-407c-847a-8063f9ad2e1a\",\n      \"name\": \"Retrieve docs with Couchbase Search Vector\",\n      \"type\": \"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\n      \"position\": [\n        860,\n        500\n      ],\n      \"parameters\": {\n        \"mode\": \"retrieve-as-tool\",\n        \"topK\": 10,\n        \"options\": {},\n        \"toolName\": \"PointofinterestKB\",\n        \"embedding\": \"embedding\",\n        \"textFieldKey\": \"description\",\n        \"couchbaseScope\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseBucket\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        },\n        \"toolDescription\": \"The list of Points of Interest from the database.\",\n        \"vectorIndexName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"77a4e857-607a-4bbc-a28d-8a715f9415d5\",\n      \"name\": \"Insert docs with Couchbase Search Vector\",\n      \"type\": \"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\n      \"position\": [\n        1100,\n        1120\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"embedding\": \"embedding\",\n        \"textFieldKey\": \"description\",\n        \"couchbaseScope\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseBucket\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        },\n        \"vectorIndexName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"embeddingBatchSize\": 1,\n        \"couchbaseCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4c0274c3-6647-4f45-b7d4-d63cfe2102ea\",\n      \"name\": \"Generate OpenAI Embeddings using text-embedding-3-small\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        960,\n        740\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"83f864fa-a298-4738-a102-ca2d283377de\",\n      \"name\": \"Generate OpenAI Embeddings using text-embedding-3-small1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        1000,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"80e40e5a-35a3-4fa4-b90e-ac9d76897bbd\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve docs with Couchbase Search Vector\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate OpenAI Embeddings using text-embedding-3-small\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Retrieve docs with Couchbase Search Vector\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate OpenAI Embeddings using text-embedding-3-small1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.webhook",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-couchbase.vectorStoreCouchbaseSearch",
      "n8n-nodes-couchbase.vectorStoreCouchbaseSearch",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi"
    ],
    "trigger": null
  }
}