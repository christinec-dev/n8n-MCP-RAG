{
  "source": "0401_Code_Filter_Send_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f3f7546a-8bb3-484c-b0a1-750a8d7d3a74\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        520\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1549,\n        \"height\": 612,\n        \"content\": \"### Sub-workflow: Custom tool\\nThis can be called by the agent above. It returns three different types of data from the Google Sheet, which can be used together for more complex queries without returning the whole sheet (which might be too big for GPT to handle)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a5afaa40-0b68-4d7c-8f78-5cb176fde81d\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        -40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1068,\n        \"height\": 547,\n        \"content\": \"### Main workflow: AI agent using custom tool\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2dc0ce2f-a09c-4804-9962-f542ec78eb87\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -160,\n        40\n      ],\n      \"parameters\": {\n        \"width\": 185.9375,\n        \"height\": 183.85014518022527,\n        \"content\": \"## Try me out\\n\\nClick the 'Chat' button at the bottom and enter:\\n\\n_Which is our biggest customer?_\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8fc97d52-1c18-47ed-ba6f-4c7c9ce8b7d4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 572,\n        \"height\": 219,\n        \"content\": \"These tools all call the sub-workflow below\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"60cafb69-818f-49fe-b75e-e770304a6aa9\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        260,\n        740\n      ],\n      \"parameters\": {\n        \"width\": 179.99762227826224,\n        \"height\": 226.64416053838073,\n        \"content\": \"Change the URL of the Google Sheet here\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cd8d92fa-f7ef-47d8-a1a7-5b5aa6faaa96\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        120,\n        40\n      ],\n      \"webhookId\": \"7668b567-b983-479f-a3e0-ad945707ae6b\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"72ac3bdb-56dc-4634-a0ab-0b1c82e2b23d\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        160,\n        320\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"37e5bca6-4274-4714-a9e7-a8e4b7d732e5\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        340,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"81bf7de8-c4c6-49ce-a2cf-4afca5dce7e2\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        80,\n        800\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"operation\"\n            },\n            {\n              \"name\": \"query\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"24e5a49d-8f1f-4569-8072-c35f059ebd46\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        480,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"8cc35cb9-3371-4034-86b6-3d125d70d81b\",\n      \"name\": \"List columns tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        540,\n        320\n      ],\n      \"parameters\": {\n        \"name\": \"list_columns\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"List all column names in customer data\\n\\nCall this tool to find out what data is available for each customer. It should be called first at the beginning to understand which columns are available for querying.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"query\": \"none\",\n            \"operation\": \"column_names\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"query\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"query\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"acf19978-dd84-4cfb-8034-eb9f14dd9c86\",\n      \"name\": \"Get column values tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        720,\n        320\n      ],\n      \"parameters\": {\n        \"name\": \"column_values\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Get the specified column value for all customers\\n\\nUse this tool to find out which customers have a certain value for a given column. Returns an array of JSON objects, one per customer. Each JSON object includes the column being requested plus the row_number column. Input should be a single string representing the name of the column to fetch.\\n\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"query\": \"none\",\n            \"operation\": \"column_values\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"query\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"query\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"operation\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"acd8dad6-2ce5-4a53-9909-da7bc03cf0e2\",\n      \"name\": \"Get customer tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        900,\n        320\n      ],\n      \"parameters\": {\n        \"name\": \"get_customer\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\",\n          \"cachedResultName\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Get all columns for a given customer\\n\\nThe input should be a stringified row number of the customer to fetch; only single string inputs are allowed. Returns a JSON object with all the column names and their values.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"query\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}\",\n            \"operation\": \"row\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"query\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"query\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"operation\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"43988dff-2270-4d09-a091-8b719c281faf\",\n      \"name\": \"Set Google Sheet URL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        300,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a96650f2-3a0c-45cb-afdd-ef7ca90b21cc\",\n              \"name\": \"sheetUrl\",\n              \"type\": \"string\",\n              \"value\": \"https://docs.google.com/spreadsheets/d/1GjFBV8HpraNWG_JyuaQAgTb3zUGguh0S_25nO0CMd8A/edit#gid=736425281\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"536225e9-e33c-4819-a2dc-994d8f7c3f30\",\n      \"name\": \"Get Google sheet contents\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        520,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"customer_data\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $json.sheetUrl }}\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"a5668364-8824-44cc-8a0f-516906d8f821\",\n      \"name\": \"Check operation\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        740,\n        800\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Column Names\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"db07e0a3-0a1d-44bd-84a7-59a9442e63a6\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').item.json.operation }}\",\n                    \"rightValue\": \"column_names\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Column Values\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"96c82351-de4a-4299-903d-8b9b3a3bb931\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').item.json.operation }}\",\n                    \"rightValue\": \"column_values\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Rows\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"fbc2afd0-361f-4181-94e3-4addc65a9086\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').item.json.operation }}\",\n                    \"rightValue\": \"row\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"46c3a8c4-ffaf-4373-b421-4d7ee65567b2\",\n      \"name\": \"Get column names\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1040,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"36a7be13-e792-4c0a-9997-f61fe2a7b225\",\n              \"name\": \"response\",\n              \"type\": \"array\",\n              \"value\": \"={{ Object.keys($json) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"190c48e8-4d4b-4e95-a694-49ab76b730da\",\n      \"name\": \"Prepare column data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1040,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bcb75b32-3253-4a31-9771-4faaf12cc2ed\",\n              \"name\": \"row_number\",\n              \"type\": \"number\",\n              \"value\": \"={{ $json.row_number }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"9c65e5e6-a3ac-4ed7-8546-b7f2b09b4f96\",\n      \"name\": \"Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1040,\n        980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"dbe89d36-e411-4765-8d4e-91a6425350ac\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.row_number.toString() }}\",\n              \"rightValue\": \"={{ $('When Executed by Another Workflow').item.json.query }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"39265f3e-a2ea-4174-952a-3665747ff856\",\n      \"name\": \"Prepare output\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1340,\n        800\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return {\\n  'response': JSON.stringify($input.all().map(x => x.json))\\n}\"\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check operation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get column names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Prepare column data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get column names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get customer tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List columns tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare column data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Google Sheet URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Google sheet contents\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get column values tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Google sheet contents\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check operation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Google Sheet URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.chatTrigger",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "n8n-nodes-base.executeWorkflowTrigger",
      "@n8n/n8n-nodes-langchain.agent",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "n8n-nodes-base.set",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.code"
    ],
    "trigger": null
  }
}