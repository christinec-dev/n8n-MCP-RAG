{
  "source": "0382_Schedule_Spotify_Create_Scheduled.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"dbd383feb42b0206c833e3d762df280d0cce35cf96037fb2d6f3533c171dc540\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"b605b875-85cf-4210-8027-ce7b9b7069b9\",\n      \"name\": \"CRON\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"notes\": \"Every Monday @ 8:30am\",\n      \"position\": [\n        820,\n        360\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"30 8 * * MON\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"edd9d7b6-9ac4-4acf-8f4b-4cbe943dfd34\",\n      \"name\": \"Get User's Playlists\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1060,\n        360\n      ],\n      \"parameters\": {\n        \"resource\": \"playlist\",\n        \"operation\": \"getUserPlaylists\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"98cf8fdc-556a-452a-8df6-16a98c17613e\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"notes\": \"Find Discover and Archive playlist by name\",\n      \"position\": [\n        1280,\n        360\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"Discover Weekly\",\n              \"outputKey\": \"disc\"\n            },\n            {\n              \"value2\": \"Discover Weekly Archive\",\n              \"outputKey\": \"arch\"\n            }\n          ]\n        },\n        \"value1\": \"={{ $json.name }}\",\n        \"dataType\": \"string\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d27ee5c1-86d8-4a6a-adcb-90bf59280550\",\n      \"name\": \"Get Discover Tracks\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1560,\n        240\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $json.uri }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"getTracks\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e276dce6-d3d2-41a0-96b6-68e115ed198e\",\n      \"name\": \"Get Archive Tracks\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1560,\n        460\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $json.uri }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"getTracks\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c619085b-424d-4ff5-b3eb-fa0eed05ce0d\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1840,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"joinMode\": \"keepNonMatches\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"track.uri\",\n              \"field2\": \"track.uri\"\n            }\n          ]\n        },\n        \"outputDataFrom\": \"input1\"\n      },\n      \"typeVersion\": 2.1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"6981f3b3-e1d4-415b-b2c2-d05646271270\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1760,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 262,\n        \"height\": 354,\n        \"content\": \"#### Purpose\\n\\nCompares tracks using `Combine` operation to output **non-matching** Discover Weekly tracks to ensure that duplicates are not appended to the Archive playlist\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"65a9ef93-afac-4f86-9203-73e24bcdb500\",\n      \"name\": \"Check if tracks to add is NOT empty\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2100,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"81f9e3a7-eef0-462c-9d82-db894b19a110\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"604717ae-90ab-412b-bc83-15399d18c0d4\",\n      \"name\": \"Add tracks to Archive playlist\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        2360,\n        220\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $('Switch').all(1).first().json.uri }}\",\n        \"trackID\": \"={{ $json.track.uri }}\",\n        \"resource\": \"playlist\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"34ddb49e-ebfe-46ff-a348-959befe5e86c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2580,\n        280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 634,\n        \"height\": 190,\n        \"content\": \"### Do anything else here\\n\\nFor example, in my personal workflow, after the tracks have been added to to my Archive playlist, I send a `POST` request to my self-hosted [NTFY](https://docs.ntfy.sh) server to notify me that my Discover Weekly playlist has refreshed, and I also provide the links to easily open the playlists within the notification that is sent.\\n\\nThe possibilities are endless with n8n!\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5c18f22-2c1f-4e65-83fc-7f89c5e44828\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        -418.42807424594014\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 605.1751740139206,\n        \"height\": 733.4280742459401,\n        \"content\": \"## README\\n\\nThis workflow will automatically archive your Spotify `Discover Weekly` playlist to a separate playlist. One additional caveat this workflow addresses is it will compare the refreshed `Discover Weekly` tracks against your archive playlist's existing tracks to ensure only unique tracks are added to your archive playlist. This helps reduce clutter within the archive playlist. \\n\\n### Setup Instructions (Required)\\n1. **Within your Spotify account, create a new playlist**\\n  You may name this playlist whatever you like. The default name within the workflow is `Discover Weekly Archive`. If you decide on another name, ensure you update the `Switch` node output with the key of `arch` to the name of the playlist you set.\\n\\n2. **Create your Spotify credential(s) and update each Spotify node with your created credential**\\n  Follow the instructions within the [n8n docs](https://docs.n8n.io/integrations/builtin/credentials/spotify/) to create your Spotify credential, then select the credential in the `Get User's Playlists`, `Get Discover Tracks`, `Get Archive Tracks`, and `Add tracks to Archive playlist` nodes.\\n\\n3. **Activate the workflow to run workflow based on the Cron expression set in the `Schedule` trigger node.**\\n\\n### Optional Setup\\n- Update the Cron expression within the `Schedule` trigger node with an earlier or later time if your `GENERIC_TIMEZONE` is set. You may also consider setting the workflow timezone as well. For assistance with Cron expressions, refer to the [n8n docs](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/#generate-a-custom-cron-expression).\\n- Add nodes to the end of the workflow to send notifications, update a spreadsheet, or any other operation/action you'd like to perform in conjunction with archiving your Discover Weekly tracks\\n- Setup a error workflow to handle any thing that goes wrong within the workflow. You can find an example [here](https://n8n.io/workflows/696-send-email-via-gmail-on-workflow-error/) or more information concerning handling errors within the [n8n docs](https://docs.n8n.io/courses/level-two/chapter-4/).\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"CRON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get User's Playlists\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if tracks to add is NOT empty\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Discover Tracks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Archive Tracks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Archive Tracks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get Discover Tracks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get User's Playlists\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if tracks to add is NOT empty\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add tracks to Archive playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.spotify",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}