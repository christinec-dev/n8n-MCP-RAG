{
  "source": "0789_Telegram_Code_Create_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"6a5e68bcca67c4cdb3e0b698d01739aea084e1ec06e551db64aeff43d174cb23\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"bc49829b-45f2-4910-9c37-907271982f14\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3200,\n        660\n      ],\n      \"parameters\": {\n        \"width\": 780,\n        \"height\": 540,\n        \"content\": \"### 5. Do you need more details?\\nFind a step-by-step guide in this tutorial\\n![Guide](https://www.samirsaci.com/content/images/2025/04/Telegram-Shipment-Tracking.png)\\n[üé• Watch My Tutorial](https://youtu.be/9NS4RYaOwJ8)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91269b35-1dbc-46bd-b8b4-85227d324e6d\",\n      \"name\": \"Telegram Trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -3020,\n        220\n      ],\n      \"webhookId\": \"97a26e94-6de8-4d44-9cda-631ad869119d\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5752611d-97b5-4d5b-b40d-a0ae05d7bd71\",\n      \"name\": \"Check State\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -2600,\n        1480\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"1\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"f5b2d141-7bd2-4656-b9c7-d2b562b2406e\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"waitingShipmentNumber\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"2\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"1a145782-de66-496c-aa5e-5fa5b93614f9\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"waitingGPS\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"3\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"22f4f461-5973-4cba-9341-e077dd7b3fa1\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.state }}\",\n                    \"rightValue\": \"waitingPhoto\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7fa4e34e-562e-43de-b61e-d5827fcc51fb\",\n      \"name\": \"Clear State\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1620,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowStaticData = $getWorkflowStaticData('global');\\nif (workflowStaticData.telegramStates) {\\n    delete workflowStaticData.telegramStates[$('Telegram Trigger').first().json.message.chat.id.toString()];\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"46db0fda-bf2e-4c26-b1dc-305a4bb23ecc\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2360,\n        980\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1013,\n        \"height\": 1189,\n        \"content\": \"\\n### 3. Driver's Input Collection Block\\nBased on the state flag value, the workflow process the input expected from the driver.\\n\\nThe **waiting conditions** code node is filtering the request based on the workplace state variable value\\n- **If the value is waitingXXX**: the output from the driver is processed, a value is recorded in a code node and a confirmation message is sent to the driver (including the next command to follow)\\n- **If the value does not start with waiting**: a message with instructions is sent to the driver\\n\\n#### How to setup?\\n- **Telegram Message Nodes:** set up your telegram bot credentials\\n[Learn more about the Telegram Message Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.telegram/)\\n- **Google Drive Nodes**:\\n   1. Add your Google Drive API credentials to access your drive\\n   2. Select the folder using the list, an URL or an ID\\n   3. Select the sheet in which the vocabulary list is stored\\n  [Learn more about the Google Drive Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/?utm_source=n8n_app&utm_medium=node_settings_modal-credential_link&utm_campaign=n8n-nodes-base.googleDrive)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"27cd5591-e014-4b35-9462-a297c12f9957\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2360,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 993,\n        \"height\": 1149,\n        \"content\": \"### 2. Driver's Input Command Block\\nThe switch command tunnels the flow based on the command:\\n  1. The code nodes named waitingXXX are storing a state flag to wait for the user input\\n  2. Telegram Message Nodes are asking users for the expected input\\n\\nIf the command is **/sendConfirmation**:\\n- A proof of delivery is sent to the logistics team by the Gmail Node\\n- Shipment information are recorded in the Google Sheet\\n- A confirmation is sent to the driver by the Telegram Node\\n\\n#### How to setup?\\n- **Telegram Message Nodes:** set up your telegram bot credentials\\n[Learn more about the Telegram Message Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.telegram/)\\n- **Send Email with Gmail Node**: set up the node to send the confirmation to the delivery team\\n[Learn more about the Gmail Email Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail)\\n  1. Add the email of the recipient **To**\\n  2. Add your Gmail API credentials\\n  3. Change the **Send Name**\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"95db3b8c-6ca8-4a47-8c2b-8dd8e29a1ac6\",\n      \"name\": \"addGPS\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2060,\n        280\n      ],\n      \"webhookId\": \"f50b0e4e-8a6b-4af8-bdb3-becec1f6ccaf\",\n      \"parameters\": {\n        \"text\": \"=üìç Please share your GPS location by clicking the üìé attachment button.\",\n        \"chatId\": \"={{ $json.message.chat.id }}\",\n        \"forceReply\": {\n          \"force_reply\": true\n        },\n        \"replyMarkup\": \"forceReply\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8594469e-2456-45f3-be5c-db8d56fc1f58\",\n      \"name\": \"Welcome Message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2320,\n        700\n      ],\n      \"webhookId\": \"5c54b2fa-f6ef-44ea-90db-af1822586d0f\",\n      \"parameters\": {\n        \"text\": \"=Hello {{ $json.message.chat.first_name }}! üëã  \\nI am **LogiGreenTrack**, your delivery tracking assistant. üöõüì¶  \\n\\nYou can use the following commands:  \\n\\nüöö /addShipment - Start a new shipment tracking process.\\n‚ÑπÔ∏è /help - Get more information about how to use LogiTrack.\\n\\nWhen you start a new shipment, I will guide you through these simple steps:  \\n1Ô∏è‚É£ Provide the **delivery number**. \\n2Ô∏è‚É£ Share your **GPS location**.   \\n3Ô∏è‚É£ Upload a **picture** of the shipment.  \\n\\nYour data will be stored safely in our system for tracking. ‚úÖ  \\n\\nType a command to get started! üöÄ\",\n        \"chatId\": \"={{ $json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1e18abec-0328-4556-b947-c91afc2a1425\",\n      \"name\": \"Command?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -2820,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"70ac1322-2ef4-46b4-9090-7c3c93bf546f\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.message.entities[0] }}\",\n              \"rightValue\": \"/start\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"8b7c62eb-cee6-46fb-8591-f2b8c66fe360\",\n      \"name\": \"Store GPS Location\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2320,\n        1660\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"03403259-8673-4a0b-b238-da2d4f311e59\",\n              \"name\": \"latitude\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Telegram Trigger').item.json.message.location.latitude }}\"\n            },\n            {\n              \"id\": \"762d4db4-f4d0-414e-9937-d4e7ea36fab7\",\n              \"name\": \"longitude\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Telegram Trigger').item.json.message.location.longitude }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"994e6cda-3ae4-4190-9b28-4fdc48b64330\",\n      \"name\": \"addGPS result\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -1980,\n        1660\n      ],\n      \"webhookId\": \"2a31bd25-91a1-449f-b018-b88eabaa4daf\",\n      \"parameters\": {\n        \"text\": \"=Record GPS Coordinates: [{\\\"latitude\\\": {{ $json.latitude }}, \\\"longitude\\\": {{ $json.longitude }}}].  \\nPlease continue with üì∏ /sendPhoto to upload a picture of the shipment.\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd8c2f32-205d-4f41-a5cf-fa7fb6cc6257\",\n      \"name\": \"addShipmentNumber\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2060,\n        140\n      ],\n      \"webhookId\": \"fb230af6-f0e6-4e0b-bcf6-72a0b82e4322\",\n      \"parameters\": {\n        \"text\": \"üì¶ Please enter the delivery number for this shipment.\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"forceReply\": {\n          \"force_reply\": true\n        },\n        \"replyMarkup\": \"forceReply\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"849b1cd3-2115-4f52-9705-dcf4c3ad0492\",\n      \"name\": \"Shipment Number\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2340,\n        1460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"aa417d79-9da9-48e1-ab32-df034db44a1c\",\n              \"name\": \"shipmentNumber\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Command?').item.json.message.text }}\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ef960bb8-e6d8-47f6-9b20-7bcaed46dc13\",\n      \"name\": \"addShipmentNumber result\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -1980,\n        1460\n      ],\n      \"webhookId\": \"2f97d0e7-315e-4a65-ba9a-171f35d51e27\",\n      \"parameters\": {\n        \"text\": \"=Recorded Shipment Number: {{ $json.shipmentNumber }}. \\nNext step:üìç /addGPS - Add your GPS location\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a6d95daf-a1e7-48e5-905c-5fe0c40cacc6\",\n      \"name\": \"Store Shipment\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2160,\n        1360\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowData = $getWorkflowStaticData('global');\\nworkflowData.shipmentNumber = $input.first().json.shipmentNumber;\\nreturn $json;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8da873e9-08e2-4d6c-a0ae-a7cdbd657dbc\",\n      \"name\": \"Store GPS\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2160,\n        1560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowData = $getWorkflowStaticData('global');\\nworkflowData.gpsLatitude = $input.first().json.latitude\\nworkflowData.gpsLongitude = $input.first().json.longitude\\nreturn $json;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f3e06841-9870-4179-a65b-22d3d94348fe\",\n      \"name\": \"Load Workspace Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2320,\n        560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowData = $getWorkflowStaticData('global');\\n\\nreturn [\\n    {\\n        json: {\\n            shipmentNumber: workflowData.shipmentNumber || \\\"Not available\\\",\\n            gpsLatitude: workflowData.gpsLatitude || \\\"Not available\\\",\\n            gpsLongitude: workflowData.gpsLongitude || \\\"Not available\\\",\\n            publicImageLink: workflowData.publicImageLink || \\\"Not available\\\",\\n            deliveryTime: workflowData.deliveryTime || \\\"Not available\\\",\\n            fileName: workflowData.fileName || \\\"Not available\\\"\\n        }\\n    }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d439fa72-1f6e-40c6-86cb-d083954d8c59\",\n      \"name\": \"waitingShipmentNumber\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2320,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowStaticData = $getWorkflowStaticData('global');\\nif (!workflowStaticData.telegramStates) {\\n    workflowStaticData.telegramStates = {};\\n}\\nworkflowStaticData.telegramStates[$json.message.chat.id.toString()] = { waitingShipmentNumber: true };\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"378c50b5-eff8-4cb3-89d8-3ed823bf3b52\",\n      \"name\": \"waitingGPS\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2320,\n        280\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowStaticData = $getWorkflowStaticData('global');\\nif (!workflowStaticData.telegramStates) {\\n    workflowStaticData.telegramStates = {};\\n}\\nworkflowStaticData.telegramStates[$json.message.chat.id.toString()] = { waitingGPS: true };\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8e3b46c6-6cb6-4d0d-b118-d777c2a8a728\",\n      \"name\": \"Instructions\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2320,\n        2000\n      ],\n      \"webhookId\": \"53fbb69e-8271-4e59-bcbc-deccb79c47a8\",\n      \"parameters\": {\n        \"text\": \"=Hello {{ $json.message.chat.first_name }}! üëã  \\nI am **LogiGreenTrack**, your delivery tracking assistant. üöõüì¶  \\n\\nYou can use the following commands:  \\n\\nüöö /addShipment - Start a new shipment tracking process.\\n‚ÑπÔ∏è /help - Get more information about how to use LogiTrack.\\n\\nWhen you start a new shipment, I will guide you through these simple steps:  \\n1Ô∏è‚É£ Provide the **delivery number**. \\n2Ô∏è‚É£ Share your **GPS location**.   \\n3Ô∏è‚É£ Upload a **picture** of the shipment.  \\n\\nYour data will be stored safely in our system for tracking. ‚úÖ  \\n\\nType a command to get started! üöÄ\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7e448986-d88e-413e-a174-6ef477f0de39\",\n      \"name\": \"waitingPhoto\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2320,\n        420\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowStaticData = $getWorkflowStaticData('global');\\nif (!workflowStaticData.telegramStates) {\\n    workflowStaticData.telegramStates = {};\\n}\\nworkflowStaticData.telegramStates[$json.message.chat.id.toString()] = { waitingPhoto: true };\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"112db445-fa9b-41ca-ae58-3cff7abc92d5\",\n      \"name\": \"Waiting Conditions\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2800,\n        1500\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let globalData = $getWorkflowStaticData('global');\\nlet state = \\\"none\\\"; // Default state\\n\\nif (globalData && globalData.telegramStates) {\\n    let chatData = globalData.telegramStates[$json.message.chat.id.toString()];\\n    if (chatData) {\\n        if (chatData.waitingShipmentNumber === true) {\\n            state = \\\"waitingShipmentNumber\\\";\\n        } else if (chatData.waitingGPS === true) {\\n            state = \\\"waitingGPS\\\";\\n        } else if (chatData.waitingPhoto === true) {\\n            state = \\\"waitingPhoto\\\";\\n        }\\n    }\\n}\\nreturn { state };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0176a1ee-414a-4df4-8859-3a3175549107\",\n      \"name\": \"addPhoto result\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -1600,\n        1840\n      ],\n      \"webhookId\": \"4f77a501-82b8-4046-8ac4-027c0874a7ae\",\n      \"parameters\": {\n        \"text\": \"=Photo saved in a file named using shipment number. \\nPlease continue with üì© /sendConfirmation to send a proof of delivery via email to the logistics team.\\n\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7e1d37bc-a3ba-45fb-a8d1-59090f786036\",\n      \"name\": \"sendPhoto\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2060,\n        420\n      ],\n      \"webhookId\": \"aef2449a-c6bf-4956-a986-dce76deae089\",\n      \"parameters\": {\n        \"text\": \"=Please take a **photo of the shipment** and upload it here by clicking the üìé attachment button.\",\n        \"chatId\": \"={{ $json.message.chat.id }}\",\n        \"forceReply\": {\n          \"force_reply\": true\n        },\n        \"replyMarkup\": \"forceReply\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5dfae752-581a-4835-9815-521f371539a4\",\n      \"name\": \"Upload Picture\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -2140,\n        1840\n      ],\n      \"parameters\": {\n        \"name\": \"=\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/my-drive\",\n          \"cachedResultName\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://drive.google.com/drive/folders/<FILE_ID>\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"887f2571-c80d-43ba-b838-32fea8f3315f\",\n      \"name\": \"Save Public Image Link\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1780,\n        1840\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowData = $getWorkflowStaticData('global');\\n\\n// Extract the file link from Google Drive node\\nlet fileLink = $('Upload Picture').first().json.webContentLink || \\\"No link available\\\";\\nlet fileId = $('Upload Picture').first().json.id || \\\"No ID available\\\";\\n// Public Link\\nlet publicImageLink = `https://drive.google.com/uc?export=view&id=${fileId}`;\\nlet deliveryTime = $now\\n\\n// Store the link in static data\\nworkflowData.fileLink = fileLink;\\nworkflowData.publicImageLink = publicImageLink;\\nworkflowData.deliveryTime = deliveryTime\\nreturn {\\n    fileLink: fileLink,\\n    publicImageLink: publicImageLink,\\n    deliveryTime: deliveryTime\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5b147f24-f2ed-45ad-a147-2490938232aa\",\n      \"name\": \"Confirmation Driver\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2060,\n        700\n      ],\n      \"webhookId\": \"012fbfba-9133-4446-b4cd-bbce5b7064f5\",\n      \"parameters\": {\n        \"text\": \"=<b>üì¶ Shipment Details</b>\\n\\n<b>Shipment Number:</b> {{ $json.shipmentNumber }}\\n\\n<b>üìç Location:</b>  \\nLat: <code>{{ $json.gpsLatitude }}</code>  \\nLong: <code>{{ $json.gpsLongitude }}</code>  \\n\\nüñºÔ∏è <b>Shipment Photo:</b>  \\n<a href=\\\"{{ $json.fileLink }}\\\">üì∑ View Image</a>\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d5adfbeb-cbdb-461f-9709-6458a29e8fb8\",\n      \"name\": \"Distribution Team Confirmation\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        -1800,\n        620\n      ],\n      \"webhookId\": \"85e72ad7-effa-4445-911b-90e5f13efa41\",\n      \"parameters\": {\n        \"sendTo\": \"logigreenbot@logistics.com\",\n        \"message\": \"=<h2>üì¶ Delivery Confirmation</h2>\\n\\n<p><b>Shipment Number:</b> {{ $json.shipmentNumber }}</p>\\n\\n<p>üìç <b>Delivery Location:</b><br>\\nLat: <code>{{ $json.gpsLatitude }}</code><br>\\nLong: <code>{{ $json.gpsLongitude }}</code>\\n</p>\\n\\n<p>‚è≥ <b>Delivery Time:</b> {{ $json.deliveryTime }}</p>\\n\\n<p>üñºÔ∏è <b>Shipment Photo:</b><br>\\n<img src=\\\"{{ $json.publicImageLink }}\\\" width=\\\"400\\\">\\n</p>\\n\\n<p>‚úÖ This shipment has been successfully delivered by {{ $('Switch Command').item.json.message.chat.first_name }} (Driver ID: {{ $('Switch Command').item.json.message.chat.username }}).</p>\\n\",\n        \"options\": {\n          \"senderName\": \"LogiGreenTrack Solution\",\n          \"appendAttribution\": false\n        },\n        \"subject\": \"=Delivery Confirmation: {{ $json.shipmentNumber }}\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"963417b3-7e35-43dc-b303-c7445333aa5b\",\n      \"name\": \"Extract FileName\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2100,\n        2020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ebee599b-f2d8-4b64-b8a5-eac8bdd698bb\",\n              \"name\": \"fileName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $binary.data.fileName }}\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d85cf18b-825e-4ab8-a9b0-fef63cb66ad8\",\n      \"name\": \"Store fileName\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1920,\n        2020\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowData = $getWorkflowStaticData('global');\\nworkflowData.fileName = $input.first().json.fileName\\nreturn $json;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1ef71e46-4e1e-4707-99fc-41daa724a396\",\n      \"name\": \"Get Picture\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -2320,\n        1840\n      ],\n      \"webhookId\": \"09e9f612-0040-416a-8cbe-51d041d17436\",\n      \"parameters\": {\n        \"fileId\": \"={{ $('Telegram Trigger').item.json.message.photo[3].file_id }}\",\n        \"resource\": \"file\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"9f0159ae-0236-470e-8935-d5991292ad63\",\n      \"name\": \"Share Picture\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -1960,\n        1840\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.id }}\"\n        },\n        \"options\": {},\n        \"operation\": \"share\",\n        \"permissionsUi\": {\n          \"permissionsValues\": {\n            \"role\": \"reader\",\n            \"type\": \"anyone\",\n            \"allowFileDiscovery\": true\n          }\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"66189707-157d-4f0d-b0b9-4b88d1fbc725\",\n      \"name\": \"Initiate Workflow Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"You only need to run the initialization step once per workflow, regardless of the number of Telegram chat IDs. The initialization creates the telegramStates object within the global static data of the workflow. Once that object exists, the workflow will use it to store the state for any chat ID.\",\n      \"position\": [\n        -3500,\n        -80\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let workflowStaticData = $getWorkflowStaticData('global');\\nif (!workflowStaticData.telegramStates) {\\n    workflowStaticData.telegramStates = {}; \\n}\\nreturn workflowStaticData;\"\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7db890fb-9fe2-4148-b01a-f01d3c4e5d89\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3560,\n        -300\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 380,\n        \"content\": \"### 0. Initiate Workplace Static Data\\nRun it **once** before activating the workflow to initialize workspace data that will be used to **store state flags** and **outputs from users**.\\n\\n#### How to setup?\\n- **Code Node:** do not change anything, just run it\\n  [Learn more about the code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f01fb87a-1a24-4e0c-a769-9b5da7a402d2\",\n      \"name\": \"Switch Command\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -2620,\n        220\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"1\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"f2c10700-113d-4062-8c00-af59ccbe3b6f\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/addShipment\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"2\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"d09b6282-e9f8-4e43-b3db-9edae88cd634\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/addGPS\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"3\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2637a054-0892-411c-b659-b878219a26ab\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/sendPhoto\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"4\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"5f3223e6-da0a-4056-8843-7778cf9de0a7\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/sendConfirmation\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"2e121b11-0302-4be5-bc67-629ab6ea50b3\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3060,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 620,\n        \"height\": 740,\n        \"content\": \"### 1. Workflow Trigger with Telegram Message\\nThe workflow is triggered by a user message. The second is checking if the message is a command (starting with \\\"/\\\") to route it to the proper block.\\n\\n#### How to setup?\\n- **Telegram Trigger Node:** set up your telegram bot credentials\\n[Learn more about the Telegram Trigger Node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.telegramtrigger/)\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3898ff6c-b127-4fdf-91b5-dd79c2906f05\",\n      \"name\": \"Load Delivery Information\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -2060,\n        560\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"recordTime\": \"={{ $now }}\",\n            \"gpsLatitude\": \"={{ $json.gpsLatitude }}\",\n            \"cargoPicture\": \"={{ $json.publicImageLink }}\",\n            \"deliveryTime\": \"={{ $json.deliveryTime }}\",\n            \"gpsLongitude\": \"={{ $json.gpsLongitude }}\",\n            \"shipmentNumber\": \"={{ $json.shipmentNumber }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"shipmentNumber\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"shipmentNumber\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"recordTime\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"recordTime\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"gpsLatitude\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"gpsLatitude\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"gpsLongitude\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"gpsLongitude\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"cargoPicture\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"cargoPicture\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"deliveryTime\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"deliveryTime\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/<FILE_ID>/edit#gid=0\",\n          \"cachedResultName\": \"=\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"=\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/<FILE_ID>/edit?usp=drivesdk\",\n          \"cachedResultName\": \"=\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.5\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Command?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch Command\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Waiting Conditions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"waitingGPS\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"addGPS\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check State\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Shipment Number\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Store GPS Location\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Picture\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Instructions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Picture\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload Picture\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extract FileName\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"waitingPhoto\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"sendPhoto\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Share Picture\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save Public Image Link\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch Command\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"waitingShipmentNumber\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"waitingGPS\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"waitingPhoto\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Load Workspace Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Welcome Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload Picture\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Share Picture\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Shipment Number\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"addShipmentNumber result\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Store Shipment\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract FileName\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store fileName\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Command?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store GPS Location\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"addGPS result\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Store GPS\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Waiting Conditions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check State\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Load Workspace Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Load Delivery Information\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Confirmation Driver\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Distribution Team Confirmation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"waitingShipmentNumber\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"addShipmentNumber\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save Public Image Link\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"addPhoto result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Distribution Team Confirmation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clear State\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.telegramTrigger",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.set",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.googleSheets"
    ],
    "trigger": "telegram trigger"
  }
}