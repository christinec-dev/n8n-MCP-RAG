{
  "source": "0743_Stopanderror_Wait_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"2NhqmUqW3KruEkaE\",\n  \"meta\": {\n    \"instanceId\": \"d868e3d040e7bda892c81b17cf446053ea25d2556fcef89cbe19dd61a3e876e9\"\n  },\n  \"name\": \"Exponential Backoff for Google APIs\",\n  \"tags\": [\n    {\n      \"id\": \"nezaWFCGa7eZsVKu\",\n      \"name\": \"Utility\",\n      \"createdAt\": \"2024-11-13T18:08:08.207Z\",\n      \"updatedAt\": \"2024-11-13T18:08:08.207Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"5d6b1730-33c5-401c-b73f-2b7ea8eedfe3\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -580,\n        -80\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6726b630-597c-46cf-8839-75cd80108f2f\",\n      \"name\": \"Exponential Backoff\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        160,\n        120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// Define the retry count (coming from a previous node or set manually)\\nconst retryCount = $json[\\\"retryCount\\\"] || 0;  // If not present, default to 0\\nconst maxRetries = 5;  // Define the maximum number of retries\\nconst initialDelay = 1;  // Initial delay in seconds (1 second)\\n\\n// If the retry count is less than the max retries, calculate the delay\\nif (retryCount < maxRetries) {\\n    const currentDelayInSeconds = initialDelay * Math.pow(2, retryCount);  // Exponential backoff delay in seconds\\n    \\n    // Log the delay time for debugging\\n    console.log(`Waiting for ${currentDelayInSeconds} seconds before retry...`);\\n    \\n    return {\\n        json: {\\n            retryCount: retryCount + 1,  // Increment retry count\\n            waitTimeInSeconds: currentDelayInSeconds, // Pass the delay time in seconds\\n            status: 'retrying',\\n        }\\n    };\\n} else {\\n    // If max retries are exceeded, return a failure response\\n    return {\\n        json: {\\n            error: 'Max retries exceeded',\\n            retryCount: retryCount,\\n            status: 'failed'\\n        }\\n    };\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"605b8ff0-aa19-42dd-8dbb-aa12380ac4bc\",\n      \"name\": \"Stop and Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        760,\n        120\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"Google Sheets API Limit has been triggered and the workflow has stopped\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"97818e8b-e0cc-4a49-8797-43e02535740f\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -360,\n        -80\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"0583eabd-bd97-4330-8a38-b2aed3a90c37\",\n      \"name\": \"Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -120,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://docs.google.com/spreadsheets/d/1_gxZl6n_AYPHRFRTWfhy7TZnhEYuWzh8UvGdtWCD3sU/edit?gid=0#gid=0\"\n        },\n        \"authentication\": \"serviceAccount\"\n      },\n      \"credentials\": {\n        \"googleApi\": {\n          \"id\": \"lm7dPHYumCy6sP6k\",\n          \"name\": \"AlexK1919 Google Service\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"0d8023f8-f7ac-4303-b18e-821690cc9f94\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        360,\n        120\n      ],\n      \"webhookId\": \"f1651aa1-6497-4496-9e07-240dcf1852f3\",\n      \"parameters\": {\n        \"amount\": \"={{ $json[\\\"waitTime\\\"] }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"72e0001e-f99b-4d57-9006-4a4dd5d3d8d5\",\n      \"name\": \"Check Max Retries\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        560,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"51e191cb-af20-423b-9303-8523caa4ae0d\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ $('Exponential Backoff').item.json[\\\"retryCount\\\"] }}\",\n              \"rightValue\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"2ea14bb0-4313-4595-811d-729ca6d37420\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        -80\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 820,\n        \"height\": 460,\n        \"content\": \"# Exponential Backoff for Google APIs \\n## Connect these nodes to any Google API node such as the Google Sheets node example in this workflow\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"729e3a54-6238-4e4c-833e-8e37dba16dbb\",\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Max Retries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Sheets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Exponential Backoff\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Max Retries\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Stop and Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Exponential Backoff\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Check Max Retries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stopAndError",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}