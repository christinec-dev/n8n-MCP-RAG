{
  "source": "0718_Code_GitHub_Create_Scheduled.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"a7dcffb2764d1b10c84b837267686e7094bf753c8ca242421ba2029587943438\",\n    \"templateId\": \"2652\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"42cc4260-626e-4f83-b1c3-c78c99b78b38\",\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        820,\n        486.1164603611751\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f21386ff-f8db-4f5d-a44c-15484d1e4ab7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        866.1164603611751\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 2547,\n        \"height\": 751,\n        \"content\": \"## Subworkflow\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82851e4a-33a1-461b-965f-f51efcb5af90\",\n      \"name\": \"n8n\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        1080,\n        580\n      ],\n      \"parameters\": {\n        \"filters\": {},\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"hYWXj2T43Yhf6coc\",\n          \"name\": \"Hirempire\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"90cac8e2-9509-4d48-9038-bb653ffbdf9d\",\n      \"name\": \"Return\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2720,\n        1080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8d513345-6484-431f-afb7-7cf045c90f4f\",\n              \"name\": \"Done\",\n              \"type\": \"boolean\",\n              \"value\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"11046021-89ba-4e61-b03f-d606e7dd0a56\",\n      \"name\": \"Get File\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1820,\n        960\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.download_url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"08af670c-ac82-422f-9938-c649dfdfbcf6\",\n      \"name\": \"If file too large\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1620,\n        980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"45ce825e-9fa6-430c-8931-9aaf22c42585\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.content }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"9619a55f-7fb1-4f24-b1a7-7aeb82365806\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.error }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"795fd895-94b2-46f1-b559-748b0db01c49\",\n      \"name\": \"Merge Items\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1620,\n        1240\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3d3399f3-bbfb-48ab-8644-91b28e731026\",\n      \"name\": \"isDiffOrNew\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1820,\n        1240\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const orderJsonKeys = (jsonObj) => {\\n  const ordered = {};\\n  Object.keys(jsonObj).sort().forEach(key => {\\n    ordered[key] = jsonObj[key];\\n  });\\n  return ordered;\\n}\\n\\n// Check if file returned with content\\nif (Object.keys($input.all()[0].json).includes(\\\"content\\\")) {\\n  // Decode base64 content and parse JSON\\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n// No file returned / new workflow\\n} else if (Object.keys($input.all()[0].json).includes(\\\"data\\\")) {\\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n\\n} else {\\n  // Order JSON object\\n  const n8nWorkflow = $input.all()[1].json;\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n  \\n  // Proper formatting\\n  $input.all()[0].json.github_status = \\\"new\\\";\\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n}\\n\\n// Return items\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f2f42d0-d27c-4856-a263-4d5e9eda2c4c\",\n      \"name\": \"Check Status\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        2040,\n        1240\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"same\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"different\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"new\"\n            }\n          ]\n        },\n        \"value1\": \"={{$json.github_status}}\",\n        \"dataType\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5316029f-f32f-4a8d-95de-50ee57051a08\",\n      \"name\": \"Same file - Do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2260,\n        1080\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"37c5983b-48fe-41d5-8e3a-eb56dec2140b\",\n      \"name\": \"File is different\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2260,\n        1240\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4dcce9e-b0d0-4b9e-ab16-9142e641c73d\",\n      \"name\": \"File is new\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2260,\n        1400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"03fcfdc4-2e52-42f0-a129-3ebaf8dd8fc1\",\n      \"name\": \"Create new file\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        2480,\n        1400\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\n        \"resource\": \"file\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.name }}\"\n        },\n        \"fileContent\": \"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\n        \"commitMessage\": \"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"YDLAGVFazg3z5vF9\",\n          \"name\": \"islamnazmi\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dd35cc39-4ab4-4d53-b439-b425a2177e8f\",\n      \"name\": \"Edit existing file\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        2480,\n        1220\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"edit\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.name }}\"\n        },\n        \"fileContent\": \"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\n        \"commitMessage\": \"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"YDLAGVFazg3z5vF9\",\n          \"name\": \"islamnazmi\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d05e2a25-24be-43fb-baa4-9c3391840e70\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1280,\n        586.1164603611751\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2a139d59-1387-4899-88b3-21106cd01099\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        820,\n        686.1164603611751\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 7\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"04e6c245-3117-4ef8-a181-754e616e958b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 371.1995072042308,\n        \"height\": 600.88409546716,\n        \"content\": \"## Backup to GitHub \\nThis workflow will backup all instance workflows to GitHub.\\n\\nThe files are saved `ID.json` for the filename.\\n\\n### Setup\\nOpen `Globals` node and update the values below 👇\\n\\n- **repo.owner:** your Github username\\n- **repo.name:** the name of your repository\\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\\n\\n\\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\\n\\n- repo.owner - john-doe\\n- repo.name - n8n-backups\\n- repo.path - workflows/\\n\\n\\nThe workflow calls itself using a subworkflow, to help reduce memory usage.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d996985-0064-4749-85a1-2191c73746c9\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        406.1164603611751\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 886.4410237965205,\n        \"height\": 434.88564057365943,\n        \"content\": \"## Main workflow loop\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c9bfa393-e120-4bfe-b957-702756b91aaf\",\n      \"name\": \"Get file data\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        1420,\n        980\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"get\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $json.repo.name }}\"\n        },\n        \"asBinaryProperty\": false,\n        \"additionalParameters\": {}\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"YDLAGVFazg3z5vF9\",\n          \"name\": \"islamnazmi\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"d42ddc37-3bd9-4f19-8831-695bec4d0137\",\n      \"name\": \"Globals\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1200,\n        1140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6cf546c5-5737-4dbd-851b-17d68e0a3780\",\n              \"name\": \"repo.owner\",\n              \"type\": \"string\",\n              \"value\": \"islamnazmi\"\n            },\n            {\n              \"id\": \"452efa28-2dc6-4ea3-a7a2-c35d100d0382\",\n              \"name\": \"repo.name\",\n              \"type\": \"string\",\n              \"value\": \"n8n\"\n            },\n            {\n              \"id\": \"81c4dc54-86bf-4432-a23f-22c7ea831e74\",\n              \"name\": \"repo.path\",\n              \"type\": \"string\",\n              \"value\": \"=workflows/{{ $json.tags[0].name }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e970c63c-2aa2-46f9-be04-f045b6a938de\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1180,\n        1020\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 150,\n        \"height\": 80,\n        \"content\": \"## Edit this node 👇\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5b1991f7-0351-44de-908d-9aa8b8262d60\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        480,\n        1320\n      ],\n      \"parameters\": {\n        \"inputSource\": \"passthrough\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8e5b3f71-0c5e-4e78-a3f7-0b574c9ddf06\",\n      \"name\": \"Execute Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        1500,\n        580\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"399bd193-4886-4292-be71-6f996f00a6d2\",\n      \"name\": \"/\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        960,\n        1040\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"12cad226-e091-4bbb-aed9-a8e01311772c\",\n              \"name\": \"tags[0].name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json.tags[0].name }}/\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e90328e1-4ada-424b-879a-20fb2a7270c0\",\n      \"name\": \"tag?\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        720,\n        1140\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"tag\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"object\",\n                      \"operation\": \"exists\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.tags[0] }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"none\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2656fbe3-fe35-4770-9c03-9a455ec618e4\",\n                    \"operator\": {\n                      \"type\": \"object\",\n                      \"operation\": \"notExists\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.tags[0] }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"/\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Globals\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"n8n\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"tag?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"/\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Globals\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Globals\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get file data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File is new\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create new file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"isDiffOrNew\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"isDiffOrNew\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Same file - Do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"File is different\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"File is new\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get file data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If file too large\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create new file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Execute Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File is different\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit existing file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If file too large\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit existing file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Same file - Do nothing\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 1\n          },\n          {\n            \"node\": \"tag?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.if",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.code",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.github",
      "n8n-nodes-base.github",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.github",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.executeWorkflow",
      "n8n-nodes-base.set",
      "n8n-nodes-base.switch"
    ],
    "trigger": "schedule trigger"
  }
}