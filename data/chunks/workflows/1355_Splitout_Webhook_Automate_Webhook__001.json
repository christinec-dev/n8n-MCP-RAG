{
  "source": "1355_Splitout_Webhook_Automate_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"TBiW9x7O4ijo4yOX\",\n  \"meta\": {\n    \"instanceId\": \"255b605d49a6677a536746e05401de51bb4c62e65036d9acdb9908f6567f0361\"\n  },\n  \"name\": \"Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration\",\n  \"tags\": [\n    {\n      \"id\": \"2ziILYLz4IbTkFf5\",\n      \"name\": \"Tech demo\",\n      \"createdAt\": \"2025-02-17T08:43:26.445Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.445Z\"\n    },\n    {\n      \"id\": \"BedOB2iRpKR26bcZ\",\n      \"name\": \"Chatbot\",\n      \"createdAt\": \"2025-02-17T08:43:26.436Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.436Z\"\n    },\n    {\n      \"id\": \"DvSHJwHwuObn0cxx\",\n      \"name\": \"Open Channels\",\n      \"createdAt\": \"2025-03-04T07:27:28.499Z\",\n      \"updatedAt\": \"2025-03-04T07:27:28.499Z\"\n    },\n    {\n      \"id\": \"YJcjKoBRFN1HXH5e\",\n      \"name\": \"Bitrix24\",\n      \"createdAt\": \"2025-02-17T08:43:26.424Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.424Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"dbd7b2c0-2b27-4c23-beb7-eec128da0787\",\n      \"name\": \"Bitrix24 Handler\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1280,\n        620\n      ],\n      \"webhookId\": \"bde38660-2604-4e00-afc0-5ebceebb7f0a\",\n      \"parameters\": {\n        \"path\": \"bitrix24/openchannel-rag-bothandler.php\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0ead4d82-4d9b-4392-af4c-2c315068b983\",\n      \"name\": \"Credentials\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1040,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"030f8f90-2669-4c20-9eab-c572c4b7c70c\",\n              \"name\": \"CLIENT_ID\",\n              \"type\": \"string\",\n              \"value\": \"local.67c8f9e81cb353.30162021\"\n            },\n            {\n              \"id\": \"de9bbb7a-b782-4540-b259-527625db8490\",\n              \"name\": \"CLIENT_SECRET\",\n              \"type\": \"string\",\n              \"value\": \"Db5943DCy4JhYq4oU0yNb21Hx8WimQeThczOYk03uJrVroc8R4\"\n            },\n            {\n              \"id\": \"86b7aff7-1e25-4b12-a366-23cf34e5a405\",\n              \"name\": \"application_token\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[application_token]'] }}\"\n            },\n            {\n              \"id\": \"69bbcb1f-ba6e-42eb-be8a-ee0707ce997d\",\n              \"name\": \"domain\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[domain]'] }}\\n\"\n            },\n            {\n              \"id\": \"dc1b0515-f06a-4731-b0dc-912a8d04e56b\",\n              \"name\": \"access_token\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[access_token]'] }}\"\n            },\n            {\n              \"id\": \"94fdeed8-9437-417e-9c2a-fa853620a340\",\n              \"name\": \"storageName\",\n              \"type\": \"string\",\n              \"value\": \"Shared drive\"\n            },\n            {\n              \"id\": \"8564e421-dfce-437c-a7c3-ac6a180594b8\",\n              \"name\": \"folderName\",\n              \"type\": \"string\",\n              \"value\": \"Open line chat bot documents\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"67b225b8-c2c2-4570-81cb-4c533ae75465\",\n      \"name\": \"Validate Token\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -820,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"da73d0ba-6eeb-405e-89fe-9d041fd2e0cd\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.CLIENT_ID }}\",\n              \"rightValue\": \"={{ $json.application_token }}\"\n            },\n            {\n              \"id\": \"4ba90f7b-0299-4097-9ae7-6e4dee428a74\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"1\",\n              \"rightValue\": \"1\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"4fee1441-4e30-4070-b596-15e121ca7320\",\n      \"name\": \"Route Event\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -620,\n        520\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"ONIMBOTMESSAGEADD\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTMESSAGEADD\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONIMBOTJOINCHAT\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"e9125f57-129e-4026-86ff-746d40b92b04\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTJOINCHAT\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONAPPINSTALL\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2db7bed5-fd88-4900-b8d2-e27b49c2fcca\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONAPPINSTALL\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONIMBOTDELETE\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"b708d339-fd46-470d-b0d5-ff2eb405f5ce\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTDELETE\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"c21f6d64-0543-4958-9f64-501dce37893f\",\n      \"name\": \"Process Message\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        400\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Message Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get message data from the correct path\\nconst message = item.json.body['data[PARAMS][MESSAGE]'];\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\nconst sessionId = item.json.body['data[PARAMS][CHAT_ENTITY_DATA_1]'].split(\\\"|\\\")[5];\\n\\nconst botId = Object.keys(item.json.body)\\n  .filter(key => key.startsWith(\\\"data[BOT]\\\") && key.endsWith(\\\"[BOT_ID]\\\"))\\n  .map(key => $json.body[key])\\n  .shift() || null;\\nconst userId = item.json.body['data[USER][ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nif (message.toLowerCase() === \\\"what's hot\\\") {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: \\\"Hi! I am an example-bot.\\\\nI repeat what you say\\\",\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n} else {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: `You said:\\\\n${message}`,\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06a59835-2999-44b6-81bd-0601e5570113\",\n      \"name\": \"Process Join\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        780\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Join Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get dialog ID from the correct path\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nconst message = \\n  'ITR Menu:\\\\n' +\\n  '[send=1]1. find out more about me[/send]\\\\n' +\\n  '[send=0]0. wait for operator response[/send]';\\n\\nreturn {\\n  json: {\\n    DIALOG_ID: dialogId,\\n    MESSAGE: message,\\n    AUTH: auth.access_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"40accf33-c217-497c-8172-6106eb15800f\",\n      \"name\": \"Process Install\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        940\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Install Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get the webhook URL from input\\nconst handlerBackUrl = item.json.webhookUrl;\\n\\n// Get auth data directly from item.json\\nconst auth = {\\n  access_token: item.json.access_token,\\n  application_token: item.json.application_token,\\n  domain: item.json.domain\\n};\\n\\nreturn {\\n  json: {\\n    handler_back_url: handlerBackUrl,\\n    CODE: 'OpenChanelExampleBot',\\n    TYPE: 'O',\\n    OPENLINE: 'Y',\\n    EVENT_MESSAGE_ADD: handlerBackUrl,\\n    EVENT_WELCOME_MESSAGE: handlerBackUrl,\\n    EVENT_BOT_DELETE: handlerBackUrl,\\n    PROPERTIES: {\\n      NAME: 'Open chanel Bot',\\n      LAST_NAME: 'Example',\\n      COLOR: 'AQUA',\\n      EMAIL: 'no@example.com',\\n      PERSONAL_BIRTHDAY: '2020-07-18',\\n      WORK_POSITION: 'Report on affairs',\\n      PERSONAL_GENDER: 'M'\\n    },\\n    // Use the auth data from item.json\\n    AUTH: auth.access_token,\\n    CLIENT_ID: auth.application_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22a7c363-ab5a-4adc-9de4-268f3f3739f3\",\n      \"name\": \"Register Bot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        940\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.DOMAIN }}/rest/imbot.register?auth={{$json.AUTH}}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"CODE\",\n              \"value\": \"OpenChanelExampleBot\"\n            },\n            {\n              \"name\": \"TYPE\",\n              \"value\": \"O\"\n            },\n            {\n              \"name\": \"EVENT_MESSAGE_ADD\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"EVENT_WELCOME_MESSAGE\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"EVENT_BOT_DELETE\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"PROPERTIES\",\n              \"value\": \"={{ {\\n  NAME: 'Bot',\\n  LAST_NAME: 'Example',\\n  COLOR: 'AQUA',\\n  EMAIL: 'no@example.com',\\n  PERSONAL_BIRTHDAY: '2020-07-18',\\n  WORK_POSITION: 'Report on affairs',\\n  PERSONAL_GENDER: 'M'\\n} }}\"\n            },\n            {\n              \"name\": \"CLIENT_ID\",\n              \"value\": \"={{ $json.CLIENT_ID }}\"\n            },\n            {\n              \"name\": \"CLIENT_SECRET\",\n              \"value\": \"={{ $json.AUTH }}\"\n            },\n            {\n              \"name\": \"OPENLINE\",\n              \"value\": \"Y\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e728c7eb-b169-4757-b4f4-b99ec4db0184\",\n      \"name\": \"Send Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        740,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.data.DOMAIN }}/rest/imbot.message.add?auth={{ $json.data.AUTH }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"DIALOG_ID\",\n              \"value\": \"={{ $json.data.DIALOG_ID }}\"\n            },\n            {\n              \"name\": \"MESSAGE\",\n              \"value\": \"={{ $json.data.MESSAGE }}\"\n            },\n            {\n              \"name\": \"AUTH\",\n              \"value\": \"={{ $json.data.AUTH }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1a1fae0e-d74f-48b9-8ec8-4e926763de28\",\n      \"name\": \"Send Join Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        780\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{$json.DOMAIN}}/rest/imbot.message.add?auth={{$json.AUTH}}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"DIALOG_ID\",\n              \"value\": \"={{ $json.DIALOG_ID }}\"\n            },\n            {\n              \"name\": \"MESSAGE\",\n              \"value\": \"={{ $json.MESSAGE }}\"\n            },\n            {\n              \"name\": \"AUTH\",\n              \"value\": \"={{ $json.AUTH }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"f377d8eb-2a90-4ca5-8bd8-122c8df2ced3\",\n      \"name\": \"Process Delete\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        -420,\n        1100\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"faa4c61e-faf4-4bd7-b096-706d3c5cf366\",\n      \"name\": \"Success Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1200,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={\\n  \\\"result\\\": true\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ade154b4-64d9-4ecd-8a83-328002c98569\",\n      \"name\": \"Error Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        -820,\n        780\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 401\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={{\\n  \\\"result\\\": false,\\n  \\\"error\\\": \\\"Invalid application token\\\"\\n}}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"a5866396-3a25-4bbf-81b2-56a8d35fc63b\",\n      \"name\": \"Merge parameters for Subworkflow\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        -180,\n        1340\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineAll\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"feb3e1c0-4556-4d77-9e5e-42eb2c10a5f8\",\n      \"name\": \"Get a list of available storages\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -860,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.domain }}/rest/disk.storage.getlist.json?auth={{ $json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"ENTITY_TYPE\\\": \\\"common\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $json.storageName }}\\\"\\n  }\\n}\\n\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7bb0412e-57ab-4a63-aec2-5db64b83ef7e\",\n      \"name\": \"Get a list of List of Files and Folders\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -640,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.storage.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n\\\"id\\\": {{ $json.result[0].ID }},\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"TYPE\\\": \\\"folder\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $('Execute Workflow Trigger').item.json.folderName }}\\\"\\n  }\\n}\\n\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5528a3be-375a-4077-a346-2eb77cf9160f\",\n      \"name\": \"Get a list of Folders files\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -420,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.folder.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json.result[0].ID }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"f713eda1-f51e-484d-a98a-f359bc7ce654\",\n      \"name\": \"Download file\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        280,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.DOWNLOAD_URL }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3b2c67ea-bb6c-49c8-b55f-ffde7d1d8e83\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        700,\n        2280\n      ],\n      \"parameters\": {\n        \"loader\": \"pdfLoader\",\n        \"options\": {\n          \"splitPages\": true\n        },\n        \"dataType\": \"binary\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0b5c2963-3692-469d-a1ce-66fe598dc25f\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        840,\n        2460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkOverlap\": 100\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"52bfdf6b-0fb1-4e85-b31d-ec6c9ef912d8\",\n      \"name\": \"Split Out folder files and folders\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -180,\n        2080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"result\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd53fca7-d11d-4254-be56-9a62b6f0fadf\",\n      \"name\": \"Filter for files\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        40,\n        2080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e68a8be-c155-41c7-ace4-bf76bfd362fc\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.TYPE }}\",\n              \"rightValue\": \"file\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"748a65d3-dceb-4787-a068-b364371b392b\",\n      \"name\": \"Move files to Vector stored folder\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        520,\n        1860\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.file.moveto.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json.ID }}\"\n            },\n            {\n              \"name\": \"targetFolderId\",\n              \"value\": \"={{ $('Get a list of Folders files').item.json.result[0].ID }}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"47f3aec5-c3cb-4d3e-97bc-8b708ccc0db5\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -1080,\n        2080\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9d3eb788-96cf-4c01-af5f-2beb1f6fa7b8\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1160,\n        1780\n      ],\n      \"parameters\": {\n        \"width\": 2168.7691983135305,\n        \"height\": 818.1434255918864,\n        \"content\": \"Subworkflow for Register Bot\\nHere are files vector stored for Open line chanel bot\\nAfter files are stored they are moved to subfolder\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91c26264-a61d-426c-a044-e2b287e54de0\",\n      \"name\": \"Qdrant Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        580,\n        2080\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {\n          \"collectionConfig\": \"\"\n        },\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"bitrix-docs\",\n          \"cachedResultName\": \"bitrix-docs\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0dd69952-402e-4d9e-a44f-7cf96ab4055e\",\n      \"name\": \"Embeddings Ollama\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOllama\",\n      \"position\": [\n        500,\n        2280\n      ],\n      \"parameters\": {\n        \"model\": \"nomic-embed-text:latest\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fcfbfe53-da04-48f2-9a62-204a8f1f06a8\",\n      \"name\": \"Vector Store Retriever\",\n      \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\",\n      \"position\": [\n        140,\n        240\n      ],\n      \"parameters\": {\n        \"topK\": 10\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22d3be40-b74a-453f-8f52-8974b1527d49\",\n      \"name\": \"Question and Answer Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.MESSAGE_ORI }}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"=Use the following pieces of context to answer the user's question.\\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n----------------\\n{context}\\n\\nYour response must contain **only** the following key-value pairs:\\n- `\\\"DIALOG_ID\\\"`: **Use exactly** this value from the input: `{{ $json.DIALOG_ID }}`\\n- `\\\"AUTH\\\"`: **Use exactly** this value from the input: `{{ $json.AUTH }}`\\n- `\\\"DOMAIN\\\"`: **Use exactly** this value from the input: `{{ $json.DOMAIN }}`\\n- `\\\"MESSAGE\\\"`: **Your AI-generated response**, based on the conversation history and the user's input.\\n\\n**Do not modify** the values of `\\\"DIALOG_ID\\\"`, `\\\"AUTH\\\"`, or `\\\"DOMAIN\\\"`. They must remain exactly as received from the input.  \\nThe `\\\"MESSAGE\\\"` field must contain a relevant and clear response.\\n\\nIf the user asks **\\\"find out more about me\\\"**, respond with:  \\n*\\\"I am a Retrieval-Augmented Generation (RAG) system that answers questions based on uploaded documents and provided context.\\\"*\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"fb19f0b5-72cb-4ccd-ac0e-75ea3a32c9cc\",\n      \"name\": \"Prepare output parameters\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        440,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ef09b5f8-2111-4731-8317-e338885a10c3\",\n              \"name\": \"data\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.response.text.removeMarkdown().replace(/`+$/, '')}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"52429ac1-d738-49d7-81a8-725df6587312\",\n      \"name\": \"Embeddings Ollama1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOllama\",\n      \"position\": [\n        360,\n        600\n      ],\n      \"parameters\": {\n        \"model\": \"nomic-embed-text:latest\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bade110b-d252-4633-9ecf-44a42772b8d5\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        -60,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"41eb5179-6195-485b-848b-46bb997de38e\",\n      \"name\": \"Qdrant Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        160,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"bitrix-docs\",\n          \"cachedResultName\": \"bitrix-docs\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"484cbc38-4c6f-4d3d-9409-b04df2c7e102\",\n      \"name\": \"Execute subworkflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        200,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        }\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e3e24337-997c-4ce2-b8c1-3e6f8b9eb85c\",\n  \"connections\": {\n    \"Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validate Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge parameters for Subworkflow\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Route Event\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Join\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Install\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Delete\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Join\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Join Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Register Bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge parameters for Subworkflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move files to Vector stored folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Delete\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validate Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Route Event\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Install\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Register Bot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bitrix24 Handler\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter for files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings Ollama\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Join Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings Ollama1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute subworkflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store1\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"Vector Store Retriever\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Vector Store Retriever\": {\n      \"ai_retriever\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_retriever\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of available storages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare output parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Question and Answer Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare output parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of Folders files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out folder files and folders\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of available storages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of List of Files and Folders\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge parameters for Subworkflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute subworkflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out folder files and folders\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter for files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of List of Files and Folders\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of Folders files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.set",
      "n8n-nodes-base.if",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.function",
      "n8n-nodes-base.function",
      "n8n-nodes-base.function",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "n8n-nodes-base.executeWorkflow"
    ],
    "trigger": "execute workflow trigger"
  }
}