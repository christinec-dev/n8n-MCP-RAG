{
  "source": "1612_Webhook_Code_Automate_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"QOePbDNCilLhfzbs\",\n  \"meta\": {\n    \"instanceId\": \"2c12b0b552404dc07af67cd5f092afd21d18c808d4fdabdb04cb4b064195b6fb\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"LINE BOT - Google Sheets Record Receipt\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"c9a6882e-8971-4f8b-8dc4-730e217200f9\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1260,\n        100\n      ],\n      \"parameters\": {\n        \"width\": 400,\n        \"height\": 500,\n        \"content\": \"## Prepare data\\n**- Get content image from Line** \\nhttps://api-data.line.me/v2/bot/message/xxx/content\\n\\n**- Get image URL to Binary**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b766ad37-ec63-4006-80a7-048307afd23a\",\n      \"name\": \"Image slip URL in Line\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1200,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"f8b8ac7c-5c5f-452f-a84d-e068bb248eb5\",\n              \"name\": \"file_url\",\n              \"type\": \"string\",\n              \"value\": \"=https://api-data.line.me/v2/bot/message/{{ $json.body.events[0].message.id }}/content\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"172ed09e-8caf-4bee-9f09-a9b8b00470f7\",\n      \"name\": \"Get image to Binary\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1000,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.file_url }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"byY3kI23lMe4ewnM\",\n          \"name\": \"Header Auth account - Maid\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"79753b3d-d6a9-4047-af48-947e6221de48\",\n      \"name\": \"Line Chat Bot\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1440,\n        300\n      ],\n      \"webhookId\": \"23ba996d-3242-42a1-946c-f04a680b320a\",\n      \"parameters\": {\n        \"path\": \"23ba996d-3242-42a1-946c-f04a680b320a\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91837828-c24d-4999-a6db-9323394b8e77\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -840,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## Upload image to Google Drive\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"94be83d7-5070-4f94-ae33-0a9695fc0b25\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 540,\n        \"height\": 500,\n        \"content\": \"## OCR and get value\\n**- OCR API by SpaceOCR**\\nhttps://api.ocr.space/parse/imageurl?apikey=YOURAPI&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url=xxx\\n\\n**- Parse Transaction Details**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5e269f18-c666-4ba3-bb92-e60f5761cf0e\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## Store Data in Google Sheets\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aa5312d8-304c-4d64-839b-a4464cb0d60e\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1500,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## LINE Webhook Trigger \\n**(Receive Image)**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"802a7b11-38bf-4dd1-ae32-cd6b6071b9dd\",\n      \"name\": \"Upload image to Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -780,\n        300\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $('Line Chat Bot').item.json.body.events[0].message.id }}.jpg\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://drive.google.com/drive/folders/1M-j_Gt6yKM1K8SISWknaGQyPQn52AaK1\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"QVrgALkld7whKIgB\",\n          \"name\": \"Google Drive account - Peakwave\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b37b4b7a-1030-44d0-8f57-90acca085e5a\",\n      \"name\": \"Record in Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        20,\n        300\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Fee\": \"={{ $json.fee }}\",\n            \"Amount\": \"={{ $json.amount }}\",\n            \"Date & Time\": \"={{ $json.date_time }}\",\n            \"Sender Name\": \"={{ $json.sender_name }}\",\n            \"Receiver Bank\": \"={{ $json.receiver_bank }}\",\n            \"Receiver Name\": \"={{ $json.receiver_name }}\",\n            \"Sender Account\": \"={{ $json.sender_account }}\",\n            \"Transaction ID\": \"={{ $json.transaction_id }}\",\n            \"Receiver Account\": \"={{ $json.receiver_account }}\",\n            \"Transaction Type\": \"={{ $json.transaction_type }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Transaction Type\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Transaction Type\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Date & Time\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Date & Time\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Bank\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"Bank\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Sender Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Sender Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Sender Account\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Sender Account\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Bank\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Bank\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Account\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Account\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Transaction ID\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Transaction ID\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Amount\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Amount\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Fee\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Fee\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit#gid=0\",\n          \"cachedResultName\": \"data\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?gid=0#gid=0\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"0RVWjnYzlWor2bMu\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"22fbba4f-ad1f-43a5-99de-db7084cd3fc5\",\n      \"name\": \"Send Image URL to OCR Space for Text Extraction\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -520,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.ocr.space/parse/imageurl?apikey=K82173083188957&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url={{ \\\"https://drive.google.com/uc?id=\\\" + $json[\\\"id\\\"] }}\\n\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"678993d0-8301-42d5-93cd-7839d42b71bc\",\n      \"name\": \"Extract Transaction Details\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -260,\n        300\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const text = $json[\\\"ParsedResults\\\"][0][\\\"ParsedText\\\"];\\n\\n// Split text by line breaks and trim spaces\\nconst lines = text.split(\\\"\\\\n\\\").map(line => line.trim());\\n\\n// Debugging: Log extracted lines for verification\\nconsole.log(\\\"Extracted Lines:\\\", lines);\\n\\n// Helper function to find text after a keyword, with OCR variations\\nfunction getValueAfterKeyword(keywords, offset = 1) {\\n    let index = lines.findIndex(line => keywords.some(keyword => line.includes(keyword)));\\n    return index !== -1 && lines[index + offset] ? lines[index + offset] : null;\\n}\\n\\n// **Extracting Data for Both Standard & PromptPay Transactions**\\nconst transaction_type = lines[0] || null;  // First line\\nconst date_time = lines[1] || null;  // Second line\\n\\n// **Sender Details**\\nconst sender_name_index = lines.findIndex(line => line.startsWith(\\\"นาย\\\"));\\nconst sender_name = sender_name_index !== -1 ? lines[sender_name_index] : null;\\nconst sender_bank = sender_name_index !== -1 ? lines[sender_name_index + 1] : null;\\nconst sender_account = sender_name_index !== -1 ? lines[sender_name_index + 2] : null;\\n\\n// **Determine if it's a Standard Bank Transfer or PromptPay**\\nconst isPromptPay = lines.some(line => line.includes(\\\"Prompt\\\") || line.includes(\\\"รหัสพร้อมเพย์\\\"));\\nlet receiver_name = null;\\nlet receiver_bank = null;\\nlet receiver_account = null;\\n\\nif (isPromptPay) {\\n    // **Handling PromptPay Transactions**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"Prompt\\\"));\\n    receiver_bank = \\\"PromptPay\\\"; // Fixed for PromptPay transactions\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index + 2] : null; // Receiver's actual name\\n\\n    // **Fix Receiver Account for PromptPay**\\n    const receiver_account_index = lines.findIndex(line => line.includes(\\\"รหัสพร้อมเพย์\\\"));\\n    receiver_account = receiver_account_index !== -1 ? lines[receiver_account_index + 1] : null; // The actual account number\\n\\n} else {\\n    // **Handling Standard Bank Transfers**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"นิติบุคคล\\\") || line.includes(\\\"บริษัท\\\") || line.includes(\\\"นาย\\\"));\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index] : null;\\n    receiver_bank = receiver_index !== -1 ? lines[receiver_index + 2] : null;\\n    receiver_account = receiver_index !== -1 ? lines[receiver_index + 3] : null;\\n}\\n\\n// **Fix Transaction ID Extraction**\\nlet transaction_id = null;\\n\\n// **First, try \\\"เลขที่รายการ:\\\" for Standard Transactions**\\nconst transaction_index = lines.findIndex(line => line.includes(\\\"เลขที่รายการ:\\\"));\\nif (transaction_index !== -1) {\\n    if (/\\\\d{10,}/.test(lines[transaction_index])) {\\n        // If the same line contains the transaction ID, extract it\\n        transaction_id = lines[transaction_index].match(/\\\\d{10,}/)[0];\\n    } else if (transaction_index + 1 < lines.length && /\\\\d{10,}/.test(lines[transaction_index + 1])) {\\n        // If transaction ID is on the next line, extract it\\n        transaction_id = lines[transaction_index + 1];\\n    }\\n}\\n\\n// ✅ **If transaction_id is still missing, use \\\"จำนวน:\\\" or possible OCR errors (\\\"จำนวนะ\\\")**\\nif (!transaction_id) {\\n    let amount_index = lines.findIndex(line => line.includes(\\\"จำนวน\\\") || line.includes(\\\"จำนวนะ\\\"));\\n    if (amount_index !== -1) {\\n        for (let i = amount_index + 1; i < lines.length; i++) {\\n            if (/^[A-Za-z0-9]+$/.test(lines[i])) { // Ensure it's a valid ID\\n                transaction_id = lines[i];\\n                break; // **Break early for efficiency**\\n            }\\n        }\\n    }\\n}\\n\\n// **Extract Amount Correctly**\\nconst amount_index = lines.findIndex(line => line.includes(\\\"บาท\\\") && !line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst amount = amount_index !== -1 ? lines[amount_index].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Extract Fee Correctly**\\nconst fee_index = lines.findIndex(line => line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst fee = fee_index !== -1 && lines[fee_index + 1] ? lines[fee_index + 1].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Ensure Essential Details Exist**\\nif (transaction_type && date_time && sender_name && sender_bank && sender_account && receiver_name && receiver_bank && receiver_account && transaction_id && amount) {\\n    return [\\n        {\\n            json: {\\n                \\\"transaction_type\\\": transaction_type,\\n                \\\"date_time\\\": date_time,\\n                \\\"sender_name\\\": sender_name,\\n                \\\"sender_bank\\\": sender_bank,\\n                \\\"sender_account\\\": sender_account,\\n                \\\"receiver_name\\\": receiver_name,\\n                \\\"receiver_bank\\\": receiver_bank,\\n                \\\"receiver_account\\\": receiver_account,\\n                \\\"transaction_id\\\": transaction_id,\\n                \\\"amount\\\": amount,\\n                \\\"fee\\\": fee\\n            }\\n        }\\n    ];\\n} else {\\n    return [\\n        {\\n            json: {\\n                \\\"error\\\": \\\"Some values could not be extracted\\\",\\n                \\\"raw_text\\\": text\\n            }\\n        }\\n    ];\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e1708774-49cf-4cbb-a4c4-9fefccd0fedb\",\n  \"connections\": {\n    \"Line Chat Bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Image slip URL in Line\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get image to Binary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload image to Google Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Image slip URL in Line\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get image to Binary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Transaction Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Record in Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload image to Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Image URL to OCR Space for Text Extraction\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Image URL to OCR Space for Text Extraction\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Transaction Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code"
    ],
    "trigger": null
  }
}