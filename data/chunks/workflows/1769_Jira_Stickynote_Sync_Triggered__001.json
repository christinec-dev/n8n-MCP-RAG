{
  "source": "1769_Jira_Stickynote_Sync_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"YCQFaJdmJc6Rx4o7\",\n  \"meta\": {\n    \"instanceId\": \"0c0787ab1a9ebbb0967650f7b4012417acdd61c2fa7c9e119981847e2fc8b09c\"\n  },\n  \"name\": \"Sync Jira issues with subsequent comments to Notion database\",\n  \"tags\": [\n    {\n      \"id\": \"24\",\n      \"name\": \"n8n team\",\n      \"createdAt\": \"2023-02-28T11:17:04.513Z\",\n      \"updatedAt\": \"2023-02-28T11:17:04.513Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"3f36dc12-5011-4786-aa21-f20ba72944df\",\n      \"name\": \"Create database page\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        460,\n        460\n      ],\n      \"parameters\": {\n        \"title\": \"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"fields\\\"][\\\"summary\\\"]}}\",\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"databaseId\": \"e3503d88-accb-4ddb-aa45-f962cb03e729\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Issue Key|rich_text\",\n              \"textContent\": \"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"key\\\"]}}\"\n            },\n            {\n              \"key\": \"Issue ID|number\",\n              \"numberValue\": \"={{parseInt($node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"id\\\"])}}\"\n            },\n            {\n              \"key\": \"Link|url\",\n              \"urlValue\": \"=https://n8n-io.atlassian.net/browse/{{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"key\\\"]}}\",\n              \"ignoreIfEmpty\": true\n            },\n            {\n              \"key\": \"Status|select\",\n              \"selectValue\": \"={{$node[\\\"Lookup table\\\"].json[\\\"Status ID\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"XNjSmr171NUO17TK\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2d13b713-dd3d-48aa-a550-fe8db1e7aafd\",\n      \"name\": \"Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        660,\n        460\n      ],\n      \"parameters\": {\n        \"width\": 232.65822784810126,\n        \"height\": 137.9746835443038,\n        \"content\": \"### `IF` & `Switch` nodes\\nThese conditional nodes (`IF` and `Switch`) determine which Notion [**CRUD**](https://www.sumologic.com/glossary/crud/) operations will be performed.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"374761f7-9299-41a3-8bb3-25434f4f9eaf\",\n      \"name\": \"Find database page\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        660,\n        660\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"databaseId\": \"e3503d88-accb-4ddb-aa45-f962cb03e729\",\n        \"filterJson\": \"={{$node[\\\"Create custom Notion filters\\\"].json[\\\"notionfilter\\\"]}}\",\n        \"filterType\": \"json\"\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"XNjSmr171NUO17TK\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"159db4ca-c8da-439a-aa44-63527c7b9dcd\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        860,\n        660\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"jira:issue_updated\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"jira:issue_deleted\"\n            }\n          ]\n        },\n        \"value1\": \"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"webhookEvent\\\"]}}\",\n        \"dataType\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"080fb157-e160-4bf0-9348-05eabee60f9f\",\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        240,\n        560\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"webhookEvent\\\"]}}\",\n              \"value2\": \"jira:issue_created\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ec2a130-251d-4d28-8dc3-ca31f528f90e\",\n      \"name\": \"Delete issue\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        1080,\n        760\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{ $node[\\\"Find database page\\\"].json[\\\"id\\\"] }}\",\n        \"operation\": \"archive\"\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"XNjSmr171NUO17TK\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5a23919a-ee95-4935-b619-5eb0b486eef7\",\n      \"name\": \"On issues created/updated/deleted\",\n      \"type\": \"n8n-nodes-base.jiraTrigger\",\n      \"position\": [\n        -160,\n        560\n      ],\n      \"webhookId\": \"042e0fd3-9776-4c23-9f0d-dc032ef22744\",\n      \"parameters\": {\n        \"events\": [\n          \"jira:issue_created\",\n          \"jira:issue_deleted\",\n          \"jira:issue_updated\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"jiraSoftwareCloudApi\": {\n          \"id\": \"xZbqpSTMv8IjtS5Y\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6d3bbfce-cbfc-4590-827b-4ec1eb5c11b6\",\n      \"name\": \"Lookup table\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        40,\n        560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"/* Lookup table for the statuses in Jira. You can find the status IDs by\\n   following the instructions provided at this link:\\n   https://community.atlassian.com/t5/Jira-Service-Management/How-do-I-get-a-list-of-statuses-that-show-the-associated-status/qaq-p/1803682\\n*/\\nvar lookup = {\\n    \\\"To Do\\\": \\\"To do\\\",\\n    \\\"In Progress\\\": \\\"In progress\\\",\\n    \\\"Done\\\": \\\"Done\\\"\\n};\\n\\n\\n\\nnew_items = [];\\n\\nfor (item of $items(\\\"On issues created/updated/deleted\\\")) {\\n  console.log(item.json[\\\"Status\\\"]);\\n  // instantiate a new variable for status\\n  var issue_status = item.json[\\\"issue\\\"][\\\"fields\\\"][\\\"status\\\"][\\\"name\\\"];\\n  // check if the status is in the lookup table\\n  if (issue_status in lookup) {\\n    // if it is, then add the status ID to the new_items array\\n    new_items.push({\\n      \\\"Status ID\\\": lookup[issue_status]\\n    });\\n  }\\n}\\n\\nreturn new_items;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bdc966ce-16bf-47de-aba3-fcd0f912f95f\",\n      \"name\": \"Create custom Notion filters\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        460,\n        660\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const new_items = [];\\nfor (item of $items(\\\"On issues created/updated/deleted\\\")) {\\n\\n  // do not process this item if action is created\\n  if (item.json[\\\"webhookEvent\\\"] == \\\"jira:issue_created\\\") {\\n    continue;\\n  }\\n\\n  // build the output template\\n  var new_item = {\\n    \\\"json\\\": {\\n      \\\"notionfilter\\\": \\\"\\\"\\n    }\\n  };\\n  new_item = JSON.stringify(new_item);\\n  new_item = JSON.parse(new_item);\\n  new_items.push(new_item);\\n\\n  // create Notion filter to find specific database page by issue ID\\n  notionfilter = {\\n    or: [],\\n  }\\n\\n  const filter = {\\n    property: 'Issue ID',\\n    number: {\\n      equals: parseInt(item.json[\\\"issue\\\"][\\\"id\\\"])\\n    }\\n  }\\n  notionfilter[\\\"or\\\"].push(filter);\\n\\n  new_item.json.notionfilter = JSON.stringify(notionfilter); \\n}\\n\\nreturn new_items;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f92157a9-1a63-4907-87c8-0b54c3b0ac8e\",\n      \"name\": \"Update issue\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        1080,\n        560\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{ $node[\\\"Find database page\\\"].json[\\\"id\\\"] }}\",\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Title|title\",\n              \"title\": \"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"fields\\\"][\\\"summary\\\"]}}\"\n            },\n            {\n              \"key\": \"Status|select\",\n              \"selectValue\": \"={{$node[\\\"Lookup table\\\"].json[\\\"Status ID\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"XNjSmr171NUO17TK\",\n          \"name\": \"REPLACE ME\"\n        }\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"490138aa-d92d-439a-b7bb-d6d00a9fab86\",\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create database page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Create custom Notion filters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update issue\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Delete issue\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Lookup table\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Find database page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create custom Notion filters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Find database page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On issues created/updated/deleted\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Lookup table\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.notion",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.if",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.jiraTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.notion"
    ],
    "trigger": null
  }
}