{
  "source": "1748_Splitout_Code_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"WUFuYk56jNNpjfZm\",\n  \"meta\": {\n    \"instanceId\": \"bb9853d4d7d87207561a30bc6fe4ece20b295264f7d27d4a62215de2f3846a56\"\n  },\n  \"name\": \"Real Estate Market Scanning\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"db8f34be-8475-4be6-b070-79a8185fad69\",\n      \"name\": \"Schedule Market Scan\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -1580,\n        260\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"36f4babd-3441-4da7-b485-3f9f561cb929\",\n      \"name\": \"BatchData API Configuration\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1380,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"f44f6a90-6de5-4c02-909d-73cfce0c0c9a\",\n              \"name\": \"apiKey\",\n              \"type\": \"string\",\n              \"value\": \"YOUR_BATCHDATA_API_KEY\"\n            },\n            {\n              \"id\": \"9356ff74-9783-40cf-a8af-94e45f1ac83e\",\n              \"name\": \"searchParameters\",\n              \"type\": \"object\",\n              \"value\": \"={\\n  \\\"city\\\": \\\"Austin\\\",\\n  \\\"state\\\": \\\"TX\\\",\\n  \\\"minimumMarketValue\\\": 250000,\\n  \\\"maximumMarketValue\\\": 600000,\\n  \\\"minimumEquity\\\": 30,\\n  \\\"propertyType\\\": [\\\"SFR\\\"],\\n  \\\"limit\\\": 100\\n}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e34c4c84-4b31-451f-ad16-11db76f67dce\",\n      \"name\": \"Query BatchData Properties\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1180,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.batchdata.com/api/v1/properties/search\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"city\",\n              \"value\": \"={{ $json.searchParameters.city }}\"\n            },\n            {\n              \"name\": \"state\",\n              \"value\": \"={{ $json.searchParameters.state }}\"\n            },\n            {\n              \"name\": \"minimumMarketValue\",\n              \"value\": \"={{ $json.searchParameters.minimumMarketValue }}\"\n            },\n            {\n              \"name\": \"maximumMarketValue\",\n              \"value\": \"={{ $json.searchParameters.maximumMarketValue }}\"\n            },\n            {\n              \"name\": \"minimumEquity\",\n              \"value\": \"={{ $json.searchParameters.minimumEquity }}\"\n            },\n            {\n              \"name\": \"propertyType\",\n              \"value\": \"={{ $json.searchParameters.propertyType }}\"\n            },\n            {\n              \"name\": \"limit\",\n              \"value\": \"={{ $json.searchParameters.limit }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"c6d4c4ee-51d4-41f5-a975-e979785e9166\",\n      \"name\": \"Get Previous Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -980,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the stored data from previous runs\\nconst workflowStaticData = getWorkflowStaticData('global');\\n\\n// If no previous data exists, initialize it\\nif (!workflowStaticData.hasOwnProperty('previousProperties')) {\\n  workflowStaticData.previousProperties = [];\\n}\\n\\n// Add the previous properties data to the current item\\nreturn [\\n  {\\n    json: {\\n      ...items[0].json,\\n      previousProperties: workflowStaticData.previousProperties,\\n      currentProperties: items[0].json.data.properties || [],\\n    }\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a77dfe55-8a01-4b83-9395-ab533e1b7b24\",\n      \"name\": \"Compare Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -780,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the current and previous property lists\\nconst currentProperties = items[0].json.currentProperties;\\nconst previousProperties = items[0].json.previousProperties;\\n\\n// Create a map of previous properties by their ID for easier comparison\\nconst previousPropertiesMap = {};\\nfor (const property of previousProperties) {\\n  previousPropertiesMap[property.id] = property;\\n}\\n\\n// Find new properties (those in current but not in previous)\\nconst newProperties = currentProperties.filter(property => \\n  !previousPropertiesMap[property.id]\\n);\\n\\n// Find changed properties (those in both but with different values)\\nconst changedProperties = currentProperties.filter(property => {\\n  const previousProperty = previousPropertiesMap[property.id];\\n  if (!previousProperty) return false;\\n  \\n  // Check if important values changed (price, status, etc.)\\n  return (\\n    property.marketValue !== previousProperty.marketValue ||\\n    property.status !== previousProperty.status ||\\n    property.ownerStatus !== previousProperty.ownerStatus ||\\n    property.lastSaleDate !== previousProperty.lastSaleDate\\n  );\\n});\\n\\n// Update the static data for the next run\\nconst workflowStaticData = getWorkflowStaticData('global');\\nworkflowStaticData.previousProperties = currentProperties;\\n\\n// Return the combined results\\nreturn [\\n  {\\n    json: {\\n      ...items[0].json,\\n      newProperties,\\n      changedProperties,\\n      allChanges: [...newProperties, ...changedProperties]\\n    }\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c8c01396-58e8-4782-b1aa-0cc3059ef80f\",\n      \"name\": \"Split Properties\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -560,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"allChanges\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7971a981-d2e8-4d96-b3ef-ad6e532d95fe\",\n      \"name\": \"Filter High Potential\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -380,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"83c15f54-20d9-460c-a3f5-82f6c98d3d63\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"larger\"\n              },\n              \"leftValue\": \"={{ $json.equityPercentage || 0 }}\",\n              \"rightValue\": 40\n            },\n            {\n              \"id\": \"53bf77b8-4c78-4f87-a518-0e9a56c77a70\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.ownerStatus || '' }}\",\n              \"rightValue\": \"absentee\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"f5c20b50-d514-4d26-a3e7-874f228578e9\",\n      \"name\": \"Get Property Details\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -180,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.batchdata.com/api/v1/properties/{{ $json.id }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"f83e4ccb-4457-4e00-97b7-ad411decba80\",\n      \"name\": \"Format Email Content\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        20,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ad37cef8-0359-4fb8-8c54-e5a5a0aa1082\",\n              \"name\": \"emailSubject\",\n              \"type\": \"string\",\n              \"value\": \"=New Property Opportunity: {{ $json.address.street }}, {{ $json.address.city }}, {{ $json.address.state }}\"\n            },\n            {\n              \"id\": \"9c1b6e34-b31e-4e46-a6b3-ea7c34b4456a\",\n              \"name\": \"emailContent\",\n              \"type\": \"string\",\n              \"value\": \"=<h2>High Potential Property Opportunity</h2>\\n\\n<p><strong>Address:</strong> {{ $json.address.street }}, {{ $json.address.city }}, {{ $json.address.state }} {{ $json.address.zip }}</p>\\n\\n<p><strong>Property Details:</strong></p>\\n<ul>\\n  <li>Market Value: ${{ $json.marketValue }}</li>\\n  <li>Equity: {{ $json.equityPercentage }}%</li>\\n  <li>Owner Status: {{ $json.ownerStatus }}</li>\\n  <li>Square Feet: {{ $json.squareFeet }}</li>\\n  <li>Bedrooms: {{ $json.bedrooms }}</li>\\n  <li>Bathrooms: {{ $json.bathrooms }}</li>\\n  <li>Year Built: {{ $json.yearBuilt }}</li>\\n  <li>Last Sale Date: {{ $json.lastSaleDate }}</li>\\n  <li>Last Sale Price: ${{ $json.lastSalePrice }}</li>\\n</ul>\\n\\n<p><strong>Owner Information:</strong></p>\\n<ul>\\n  <li>Owner Name: {{ $json.owner.name }}</li>\\n  <li>Mailing Address: {{ $json.owner.mailingAddress }}</li>\\n  <li>Phone Numbers: {{ $json.owner.phoneNumbers ? $json.owner.phoneNumbers.join(', ') : 'N/A' }}</li>\\n  <li>Email: {{ $json.owner.email || 'N/A' }}</li>\\n</ul>\\n\\n<p>This property appears to be a high-potential opportunity based on:</p>\\n<ul>\\n  <li>High equity percentage</li>\\n  <li>Absentee owner</li>\\n</ul>\\n\\n<p><a href=\\\"https://maps.google.com/?q={{ $json.address.street }}, {{ $json.address.city }}, {{ $json.address.state }} {{ $json.address.zip }}\\\">View on Google Maps</a></p>\"\n            },\n            {\n              \"id\": \"eac4a51e-edfe-457a-9b38-a6c6f9e17ffd\",\n              \"name\": \"slackMessage\",\n              \"type\": \"string\",\n              \"value\": \"=*New High Potential Property Lead*\\n\\n*Address:* {{ $json.address.street }}, {{ $json.address.city }}, {{ $json.address.state }} {{ $json.address.zip }}\\n*Market Value:* ${{ $json.marketValue }}\\n*Equity:* {{ $json.equityPercentage }}%\\n*Owner Status:* {{ $json.ownerStatus }}\\n\\n<https://maps.google.com/?q={{ $json.address.street }}, {{ $json.address.city }}, {{ $json.address.state }} {{ $json.address.zip }}|View on Google Maps>\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3f69ccd0-24c8-490f-a1ec-305f14819d39\",\n      \"name\": \"Send Email Alert\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        400,\n        180\n      ],\n      \"webhookId\": \"efb002e7-21e3-483c-9a4f-f95f400ad203\",\n      \"parameters\": {\n        \"options\": {},\n        \"subject\": \"={{ $json.emailSubject }}\",\n        \"toEmail\": \"salesteam@yourcompany.com\",\n        \"fromEmail\": \"alerts@yourcompany.com\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"416661ac-8068-44fd-b95f-6b978834eed9\",\n      \"name\": \"Post to Slack\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        280,\n        320\n      ],\n      \"webhookId\": \"b50cadef-1223-47fa-bf5f-1512b4c323f0\",\n      \"parameters\": {\n        \"text\": \"={{ $json.slackMessage }}\",\n        \"otherOptions\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f6b33048-3224-4b2d-a3e3-fd21dc1f42aa\",\n      \"name\": \"Sticky Note Main Flow\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1660,\n        120\n      ],\n      \"parameters\": {\n        \"width\": 1040,\n        \"height\": 340,\n        \"content\": \"## Main Workflow Flow\\nThis part of the workflow handles the regular scanning and processing of property data. It runs on a schedule to detect new properties or changes to existing ones, then passes the filtered results along for detailed analysis.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82472e40-7132-40ac-9c9b-4635f604d92a\",\n      \"name\": \"Sticky Note Filter & Analyze\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        120\n      ],\n      \"parameters\": {\n        \"width\": 760,\n        \"height\": 340,\n        \"content\": \"## Property Filtering & Analysis\\nHere we filter the properties based on criteria for high-potential leads (high equity %, absentee owners, etc.) and fetch detailed information about each property to prepare comprehensive reports for the sales team.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4538e728-f86c-4cf3-a69e-ce42ca5bb83e\",\n      \"name\": \"Sticky Note Notifications\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        180,\n        -40\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 500,\n        \"content\": \"## Notifications\\nThis section delivers the property leads to the sales team through multiple channels:\\n\\n1. Email alerts with detailed property and owner information\\n2. Slack notifications for quick updates\\n\\nBoth include Google Maps links to quickly view the property location.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4e09ea20-a6a3-4e6c-a67c-95cbd79f9151\",\n      \"name\": \"Sticky Note Instructions\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1660,\n        -220\n      ],\n      \"parameters\": {\n        \"width\": 1040,\n        \"height\": 300,\n        \"content\": \"## Setup Instructions\\n\\n1. **API Keys & Credentials**:\\n   - Add your BatchData API Key to the BatchData API Configuration node\\n   - Set up SMTP credentials for email delivery\\n   - Configure Slack API credentials for team notifications\\n\\n2. **Customize Search Parameters**:\\n   - Adjust property search criteria in the BatchData API Configuration node\\n   - Modify the filtering conditions in the Filter High Potential node\\n\\n3. **Notification Recipients**:\\n   - Update email recipients in the Send Email Alert node\\n   - Set appropriate Slack channel in the Post to Slack node\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"21dfe7cd-d858-4954-a4da-b0dd11d17aff\",\n  \"connections\": {\n    \"Compare Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Properties\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter High Potential\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format Email Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email Alert\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Post to Slack\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Previous Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Compare Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Property Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format Email Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Market Scan\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"BatchData API Configuration\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter High Potential\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Property Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Query BatchData Properties\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Previous Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"BatchData API Configuration\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Query BatchData Properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.emailSend",
      "n8n-nodes-base.slack",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}