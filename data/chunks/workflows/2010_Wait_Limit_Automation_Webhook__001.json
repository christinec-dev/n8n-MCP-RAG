{
  "source": "2010_Wait_Limit_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"xEij0kj2I1DHbL3I\",\n  \"meta\": {\n    \"instanceId\": \"31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"üí°üåê Essential Multipage Website Scraper with Jina.ai\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"3a503859-ef0a-492d-81c6-37e4f0c4c25e\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -840,\n        0\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 340,\n        \"height\": 320,\n        \"content\": \"## Jina.ai Web Scraper\\n### No API Key Required\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5217a1a-f074-409b-8340-72afdc5fc8b5\",\n      \"name\": \"When clicking ‚ÄòTest workflow‚Äô\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1500,\n        -300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"72af3b00-2632-4877-a0b6-7477e2f468f7\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1080,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"11f0fa02-51f8-41cc-b789-5c452b6899aa\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        80,\n        220\n      ],\n      \"webhookId\": \"081ce124-0cbf-4a21-a1e7-2c465f460448\",\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cf3b5887-8ff2-46e0-ab33-384ab0987cbb\",\n      \"name\": \"Limit\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        80,\n        -300\n      ],\n      \"parameters\": {\n        \"maxItems\": 20\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c4f04d82-aa33-46cf-a8e2-0b4e717e754a\",\n      \"name\": \"Get List of Website URLs\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -780,\n        -300\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.sitemap_url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7f507c38-1e9e-4c46-8dea-bd6daf65dc55\",\n      \"name\": \"Convert to JSON\",\n      \"type\": \"n8n-nodes-base.xml\",\n      \"position\": [\n        -560,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e21b55c2-8b0d-4c7c-ba91-a2d563a4c966\",\n      \"name\": \"Create List of Website URLs\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -340,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"urlset.url\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"61555239-8a16-424e-8a60-700f6ebaa270\",\n      \"name\": \"Filter By Topics or Pages\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -120,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"d66c304d-879a-4dc4-908f-ab0665093672\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.loc }}\",\n              \"rightValue\": \"=https://ai.pydantic.dev/\"\n            },\n            {\n              \"id\": \"3c930950-bee4-442b-82e6-4437fd39a933\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.loc.toLowerCase() }}\",\n              \"rightValue\": \"agent\"\n            },\n            {\n              \"id\": \"aaeaf34e-ad5a-4673-b3bd-8bddf3500988\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.loc.toLowerCase() }}\",\n              \"rightValue\": \"tool\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"dd25fb57-64a3-4c47-be04-6eb66d16520a\",\n      \"name\": \"Set Website URL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1080,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"1601dc3e-8024-4e19-b592-93a4e4f77641\",\n              \"name\": \"sitemap_url\",\n              \"type\": \"string\",\n              \"value\": \"https://ai.pydantic.dev/sitemap.xml\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"14ac1c87-29fe-44c8-9c1e-f247a292dde5\",\n      \"name\": \"Jina.ai Web Scraper\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -720,\n        120\n      ],\n      \"parameters\": {\n        \"url\": \"=https://r.jina.ai/{{ $json.loc }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"be253ec2-f088-4895-8ef2-61a3720cf68b\",\n      \"name\": \"Save Webpage Contents to Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -120,\n        120\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $('Loop Over Items').item.json.loc }} - {{ $json.title }}\",\n        \"content\": \"={{ $json.markdown }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"root\",\n          \"cachedResultName\": \"/ (Root folder)\"\n        },\n        \"operation\": \"createFromText\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"UhdXGYLTAJbsa0xX\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"95d808c7-a3ca-4f59-a385-cc77bdff322e\",\n      \"name\": \"Extract Title & Markdown Content\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -380,\n        120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the text output from the previous node\\nconst data = $input.first().json.data;\\n\\n// Regular expression to capture the title line\\nconst titleRegex = /^Title:\\\\s*(.+)$/m;\\n// Regular expression to capture everything after \\\"Markdown Content:\\\"\\nconst markdownRegex = /Markdown Content:\\\\n([\\\\s\\\\S]+)/;\\n\\n// Extract the title using the first capture group\\nconst titleMatch = data.match(titleRegex);\\nconst title = titleMatch ? titleMatch[1].trim() : '';\\n\\n// Extract the markdown content using the first capture group\\nconst markdownMatch = data.match(markdownRegex);\\nconst markdown = markdownMatch ? markdownMatch[1].trim() : '';\\n\\n// Return a single object with title and markdown as unique values\\nreturn { title, markdown };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2fb86c81-c144-4450-908c-559855deadef\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1240,\n        -580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1540,\n        \"height\": 1080,\n        \"content\": \"# üí°üåê Essential Multipage Website Scraper with Jina.ai\\n## Scrape entire websites with this workflow\\n**Use responsibly and follow local rules and regulations**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b470b294-95d0-4e51-a9cc-2fe17316a771\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1580,\n        -400\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 280,\n        \"height\": 300,\n        \"content\": \"## üëçTry Me!\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fafd0623-a423-4e73-9609-cee8e81f5c13\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1180,\n        -400\n      ],\n      \"parameters\": {\n        \"width\": 300,\n        \"height\": 300,\n        \"content\": \"## üëáAdd Website Sitemap URL\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"2e815787-d83b-4ab7-a959-2f33006a37a5\",\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create List of Website URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Jina.ai Web Scraper\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Website URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get List of Website URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Jina.ai Web Scraper\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Title & Markdown Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get List of Website URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter By Topics or Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create List of Website URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter By Topics or Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Title & Markdown Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save Webpage Contents to Google Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‚ÄòTest workflow‚Äô\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Website URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save Webpage Contents to Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.limit",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.xml",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}