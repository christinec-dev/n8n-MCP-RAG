{
  "source": "1791_Filter_Summarize_Create_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"\",\n  \"meta\": {\n    \"instanceId\": \"\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Generate AI-Ready llms.txt Files from Screaming Frog Website Crawls\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"ca701618-b2d5-48ee-a503-d3513d018a65\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Form - Screaming Frog internal_html.csv upload  \\n\\nThis form node is used to trigger the workflow.  \\n\\nIt contains **three input fields**:  \\n- Name of the website  \\n- Short description of the website  \\n- **Screaming Frog** export containing the internal URLs  \\n\\n\\n\\nIt is recommended to use the **internal_html.csv** export, but **internal_all.csv** will also work, as the workflow includes a filter to process only indexable URLs.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bc040ca0-f38d-4458-a60c-17f71dbfd1ea\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Extract data from Screaming Frog file\\n\\nThis node extracts data from the **CSV file** provided by the user.  \\n\\nIt produces an output that is **easily usable** in the following nodes.  \\n\\n‚ö†Ô∏è **Caution:**  \\nIf the uploaded file is **not** the expected Screaming Frog export, the workflow will still proceed but will likely **fail in the next steps** due to missing required fields.  \\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f71a7d10-847d-48e7-8820-ec0c1e7ea055\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1200,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Set Useful Fields  \\n\\nThis node sets **7 key fields** from the Screaming Frog export:  \\n\\n- `url` ‚Üí from the **\\\"Address\\\"** column  \\n- `title` ‚Üí from the **\\\"Title 1\\\"** column  \\n- `description` ‚Üí from the **\\\"Meta Description 1\\\"** column  \\n- `status` ‚Üí from the **\\\"Status Code\\\"** column  \\n- `indexability` ‚Üí from the **\\\"Indexability\\\"** column  \\n- `content_type` ‚Üí from the **\\\"Content Type\\\"** column  \\n- `word_count` ‚Üí from the **\\\"Word Count\\\"** column  \\n\\n\\n**Multi-language compatibility**  \\nIf you're using Screaming Frog in **French, Italian, German, or Spanish**, the column names will be different.  \\nHowever, the workflow is designed to handle this, so it will **still work correctly**! ü•≥\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6f6546b8-adeb-4998-ae19-d93525337eb7\",\n      \"name\": \"Set useful fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1340,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0e7d4a06-83fc-4834-93fe-2e758cbe2307\",\n              \"name\": \"url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Address || $json.Adresse || $json.Direcci√≥n || $json.Indirizzo }}\"\n            },\n            {\n              \"id\": \"c82f4d4c-9d0b-4c7d-9647-5d0240b58643\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json['Title 1'] || $json['Titolo 1'] || $json['Titolo 1'] || $json['T√≠tulo 1'] || $json['Titel 1'] }}\"\n            },\n            {\n              \"id\": \"abea81db-ce3b-4ac1-bd21-09ccfffb567a\",\n              \"name\": \"description\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json['Meta Description 1'] || $json['Meta description 1'] }}\"\n            },\n            {\n              \"id\": \"2ca75d74-70f8-400b-b862-9da186135915\",\n              \"name\": \"statut\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json['Status Code'] || $json['Code HTTP'] || $json['Status-Code'] || $json['C√≥digo de respuesta'] || $json['Codice di stato']}}\"\n            },\n            {\n              \"id\": \"754d3202-38b0-4d79-ba24-8078b3244307\",\n              \"name\": \"indexability\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Indexability || $json.Indexabilit√© || $json.Indicizzabilit√† || $json.Indexabilidad || $json.Indexierbarkeit}}\"\n            },\n            {\n              \"id\": \"8bc6583d-bb34-4d22-b310-fe79bb8ac85d\",\n              \"name\": \"content_type\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json['Content Type'] || $json['Type de contenu'] || $json['Tipo di contenuto'] || $json['Tipo de contenido'] || $json['Inhaltstyp']}}\"\n            },\n            {\n              \"id\": \"c874ba1a-769e-43d3-9555-8c9914ca9b76\",\n              \"name\": \"word_count\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json['Word Count'] || $json['Nombre de mots'] || $json['Conteggio delle parole'] || $json['Conteggio delle parole'] || $json['Recuento de palabras'] || $json['Wortanzahl'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"1a9af7a0-d2d5-44cb-9770-2d5a1e5706f4\",\n      \"name\": \"Text Classifier\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textClassifier\",\n      \"disabled\": true,\n      \"position\": [\n        2260,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"inputText\": \"=url : {{ $json.url }}\\ntitle : {{ $json.title }}\\ndescription : {{ $json.description }}\\nwords count : {{ $json.word_count }}\",\n        \"categories\": {\n          \"categories\": [\n            {\n              \"category\": \"useful_content\",\n              \"description\": \"Pages that are likely to contain high-quality content, making them suitable for inclusion in a file that aids content discovery for an LLM. \"\n            },\n            {\n              \"category\": \"other_content\",\n              \"description\": \"Pages that should not be included (e.g., pagination, or low-value content).\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"74a4e378-4228-4142-92ca-e541efde2b15\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2180,\n        240\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"\",\n          \"name\": \"OpenAi Connection\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"63dc6cfe-bc73-43b5-8c7d-4f5fd6501d3b\",\n      \"name\": \"No Operation, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2580,\n        200\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cb555b99-9e63-4b6b-a1fc-512b5467d666\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1620,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Filter URLs \\n\\nThis **filter node** is used to keep only the URLs that meet the following conditions:  \\n- `status` = **200**  \\n- `indexability` = **indexable**  \\n- `content_type` contains **text/html**  \\n\\n\\nThese filters are even **more useful** if the uploaded file is an **internal_all.csv** instead of an **internal_html.csv**.  \\n\\n### **Tips:**  \\nYou can **add more filters** to refine the URLs included in your `llms.txt` file.  \\n\\nüí° **Examples:**  \\n- **Filter by word count** ‚Üí Ensure pages contain **enough text content**.  \\n- **Filter by URL path** ‚Üí Keep only **specific folders or categories** in the `llms.txt` file.  \\n- **Filter by meta description** ‚Üí Exclude URLs **without a meta description**, as this field will be used in the `llms.txt` file to describe each piece of content.  \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e34e56e2-5cc8-4e50-bfb0-3aa2e5e04abf\",\n      \"name\": \"Filter URLs\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1740,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"cef4feaa-1c46-45b1-92b7-f5c2051b1dc5\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ Number($json.statut) }}\",\n              \"rightValue\": 200\n            },\n            {\n              \"id\": \"bb821656-9740-4da4-8aa9-f65ad098c470\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ [\\\"Indexable\\\", \\\"Indicizzabile\\\", \\\"Indexierbar\\\"].includes($json.indexability) }}\",\n              \"rightValue\": \"={{ \\\"Indexable\\\" || \\\"Indicizzabile\\\" }}\"\n            },\n            {\n              \"id\": \"5c93ddb8-8091-406a-bc04-fa14e8b73fb9\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.content_type }}\",\n              \"rightValue\": \"text/html\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"b98f19a8-afd3-4d26-8063-dee3ee75055f\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2040,\n        -800\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 740,\n        \"height\": 1160,\n        \"content\": \"## Text Classifier\\n\\nüö´ **This node is deactivated by default** in the template.  \\n\\nYou can **enable it** if you want to add a more **\\\"intelligent\\\" ü§ì filter** to refine the URLs included in the `llms.txt` file, helping LLMs discover and prioritize valuable content.\\n\\n### How It Works:\\nThis node has **two outputs**:  \\n- **`useful_content`** ‚Üí Pages that are **likely to contain high-quality content**, making them suitable for inclusion in a file that **aids content discovery for an LLM**.  \\n- **`other_content`** ‚Üí Pages that should **not** be included (e.g., pagination or low-value content).  \\n\\n\\nYou can **modify the description** in the node to fine-tune the classification according to your needs.  \\n\\n### Input Fields:\\n- **url** ‚Üí `{{ $json.url }}`  \\n- **title** ‚Üí `{{ $json.title }}`  \\n- **description** ‚Üí `{{ $json.description }}`  \\n- **word_count** ‚Üí `{{ $json.word_count }}`  \\n\\n### Why use an LLM?  \\nA **language model (LLM)** can **analyze** the **URL, title, and description** to identify pages that **most likely contain meaningful and relevant content**.  \\nThis allows it to **prioritize valuable pages** and structure the data for **better content discovery and training purposes**. \\n\\n### **For large websites**  \\nIf you have a **very large website**, consider using a **Loop Over Items** node to make the workflow **more robust** and ensure all pages are processed.  \\nAlso, using a **Loop Over Items** node make it **easier** to handle:  \\n- **Timeouts** \\n- **API quotas** \\n- **Other scalability issues**\\n\\n### Tokens usage\\nFinally, keep in mind that **more pages mean more tokens and more billed LLM API calls**.\\n\\n\\n\\n\\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63e3ea7a-cec3-442c-9812-771def0a9949\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2840,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Set Field - llms.txt Row\\n\\nThis node **sets** the row format for the `llms.txt` file.  \\n\\n### Row Structure:\\nEach row follows this format:  \\n\\n- `- [title](link): description`  \\n\\nIf the URL **has no description** (from the **Meta Description** in the Screaming Frog export), the row will be:  \\n\\n- `- [title](link)`  \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"78f58220-feb5-4044-b994-39a0e4f1e9e4\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3260,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Summarize - Concatenate\\n\\nThis node concatenates all the output from the previous node, ensuring each row is on a separate line.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7a119633-7cd3-4de5-a1cd-7f708e1abf4a\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3680,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Set Fields - llms.txt Content\\n\\nThis node sets the content of the `llms.txt` file using:\\n\\n- The **website title** provided in the form (first node).\\n- The **website description** provided in the form (first node).\\n- The output from the previous node, which includes all the URLs, their titles, and their descriptions that will appear in the `llms.txt` file.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"554f6858-68e8-4b35-a6c4-21bed6832323\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4100,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## Generate llms.txt file\\n\\nThis node **creates** the `llms.txt` file, which can be **downloaded directly** within n8n. \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"24bdefba-e2f2-41f0-93e7-9f8d2fc11f43\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4520,\n        -500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 360,\n        \"height\": 860,\n        \"content\": \"## upload file anywhere\\n\\nInstead of downloading the file directly from the n8n workflow, you can **replace this node node** with a Drive node (e.g., **Google Drive** or **OneDrive**) to upload the `llms.txt` file to a folder of your choice.  \\n  \\n**Name the file properly** (e.g., include the website name) to make it easier to find and distinguish between files when working on multiple websites.  \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3be51e3-810c-40a7-a996-98a3d383c2b9\",\n      \"name\": \"Summarize - Concatenate\",\n      \"type\": \"n8n-nodes-base.summarize\",\n      \"position\": [\n        3380,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToSummarize\": {\n          \"values\": [\n            {\n              \"field\": \"llmTxtRow\",\n              \"separateBy\": \"\\n\",\n              \"aggregation\": \"concatenate\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8d3a892a-3d11-4d8a-8ec6-84f8f3af1183\",\n      \"name\": \"Set Fields - llms.txt Content\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3820,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"97062a99-e944-4e1e-89b1-62cf9e3462dd\",\n              \"name\": \"llmsTxtFile\",\n              \"type\": \"string\",\n              \"value\": \"=# {{ $('Form - Screaming frog internal_html.csv upload').item.json['What is the name of your website?'] }}\\n> {{ $('Form - Screaming frog internal_html.csv upload').item.json['Can you provide a short description of your website? (in the language of the website)'] }}\\n\\n{{ $json.concatenated_llmTxtRow }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"bc2a692a-47ea-4bf1-a102-e607fd544158\",\n      \"name\": \"upload file anywhere\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        4640,\n        40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"404510a2-35b2-44cf-9d02-eb0abcf4e9b3\",\n      \"name\": \"Set Field - llms.txt Row\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2960,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"95e75caa-8110-476b-9cb1-73c15361fa56\",\n              \"name\": \"llmTxtRow\",\n              \"type\": \"string\",\n              \"value\": \"=- [{{ $json.title }}]({{ $json.url }}){{ $json.description ? ': ' + $json.description : '' }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"f54d51f2-17bc-4c58-b177-0e77e16f7b72\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -420,\n        -1020\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 700,\n        \"height\": 1380,\n        \"content\": \"# Generate AI-Ready llms.txt Files from Screaming Frog Website Crawls  \\n\\nThis workflow helps you generate an **llms.txt** file (if you're unfamiliar with it, check out [this article](https://towardsdatascience.com/llms-txt-414d5121bcb3/)) using a **Screaming Frog export**.  \\n\\n[Screaming Frog](https://www.screamingfrog.co.uk/seo-spider/) is a well-known website crawler.  \\nYou can easily crawl a website. Then, export the **\\\"internal_html\\\"** section in CSV format.  \\n\\n## How It Works: \\n\\nA **form** allows you to enter:  \\n- The **name of the website**  \\n- A **short description**  \\n- The **internal_html.csv** file from your Screaming Frog export  \\n\\n\\nOnce the form is submitted, the **workflow is triggered automatically**, and you can **download the llms.txt file directly from n8n**. \\n\\n## Downloading the File\\nSince the last node in this workflow is **\\\"Convert to File\\\"**, you will need to **download the file directly from the n8n UI**.  \\nHowever, you can easily **add a node** (e.g., Google Drive, OneDrive) to automatically upload the file **wherever you want**.  \\n\\n## AI-Powered Filtering (Optional):  \\nThis workflow includes a **text classifier node**, which is **deactivated by default**.  \\n- You can **activate it** to apply a more **intelligent filter** to select URLs for the `llms.txt` file.  \\n- Consider modifying the **description** in the classifier node to specify the type of URLs you want to include.  \\n\\n## How to Use This Workflow  \\n\\n1. **Crawl the website** you want to generate an `llms.txt` file for using **Screaming Frog**.  \\n2. **Export the \\\"internal_html\\\"** section in CSV format.  \\n   ![Screaming Frog internal html export](https://i.imgur.com/M0nJQiV.png)  \\n3. In **n8n**, click **\\\"Test Workflow\\\"**, fill in the form, and **upload** the `internal_html.csv` file.  \\n4. Once the workflow is complete, go to the **\\\"Export to File\\\"** node and **download the output**.  \\n\\n**That's it! You now have your llms.txt file!**  \\n\\n\\n\\n**Recommended Usage:**  \\nUse this workflow **directly in the n8n UI by clicking** 'Test Workflow' and uploading the file in the form.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e33104af-802a-43f2-b26d-f368f7de2fd7\",\n      \"name\": \"Form - Screaming frog internal_html.csv upload\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        460,\n        60\n      ],\n      \"webhookId\": \"8791f39a-3d81-405c-b177-0a733ebf74cb\",\n      \"parameters\": {\n        \"options\": {\n          \"buttonLabel\": \"Get the llms.txt file\"\n        },\n        \"formTitle\": \"llms.txt Generator - From Screaming Frog export\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldLabel\": \"What is the name of your website?\",\n              \"placeholder\": \"Example : The best website ever\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldLabel\": \"Can you provide a short description of your website? (in the language of the website)\",\n              \"placeholder\": \"Example : This is the best website ever because all the content is engaging and valuable.\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldType\": \"file\",\n              \"fieldLabel\": \"screaming_frog_export\",\n              \"multipleFiles\": false,\n              \"requiredField\": true,\n              \"acceptFileTypes\": \".csv\"\n            }\n          ]\n        },\n        \"responseMode\": \"lastNode\",\n        \"formDescription\": \"Generate a simple llms.txt file from a Screaming Frog Export\\nIt is recommended to use the internal_html.csv export, although internal_all.csv will also work.\\n\\nFill in the fields in this form.Just fill in the fields in this form  üòÑ\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"f6b17fdd-a098-411e-8d53-3f6e638cc3ba\",\n      \"name\": \"Extract data from Screaming Frog file\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        900,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"xls\",\n        \"binaryPropertyName\": \"screaming_frog_export\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6bbd8d1f-3322-4c6d-af08-c842386239ce\",\n      \"name\": \"Generate llms.txt file\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        4220,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"encoding\": \"utf8\",\n          \"fileName\": \"llms.txt\"\n        },\n        \"operation\": \"toText\",\n        \"sourceProperty\": \"llmsTxtFile\"\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"\",\n  \"connections\": {\n    \"Filter URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Text Classifier\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Text Classifier\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Field - llms.txt Row\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"No Operation, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Text Classifier\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set useful fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate llms.txt file\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Summarize - Concatenate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Fields - llms.txt Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Field - llms.txt Row\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Summarize - Concatenate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Fields - llms.txt Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate llms.txt file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract data from Screaming Frog file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set useful fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Form - Screaming frog internal_html.csv upload\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract data from Screaming Frog file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.textClassifier",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.summarize",
      "n8n-nodes-base.set",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.formTrigger",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.convertToFile"
    ],
    "trigger": null
  }
}