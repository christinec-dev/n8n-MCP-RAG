{
  "source": "0229_Manual_HTTP_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"8c8c5237b8e37b006a7adce87f4369350c58e41f3ca9de16196d3197f69eabcd\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"25ac6cda-31fb-474a-b6b6-083ec03b9273\",\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        925,\n        285\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"93eaee43-7a39-4c83-aeaa-9ca14d0f4b4b\",\n      \"name\": \"Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 200,\n        \"content\": \"## HTTP Request\\n### This workflow shows the most common use cases of the HTTP request node, and how to handle its output\\n\\n\\n### Click the `Execute Workflow` button and double click on the nodes to see the input and output items.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ccdc45b-aae1-4760-b45e-5b8dca2a9fcf\",\n      \"name\": \"Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1280,\n        480\n      ],\n      \"parameters\": {\n        \"width\": 986.3743856726365,\n        \"height\": 460.847917534361,\n        \"content\": \"## 3. Handle Pagination\\n### Sometimes you need to make the same request multiple times to get all the data you need (pagination).\\n\\n### The pagination process goes as follow:\\n### 1. Loop through the pages of the input source (`HTTP Request` node named \\\"Get my Starts\\\")\\n### 2. Increment the page at the end of each loop (done with the `set` node named \\\"Increment Page\\\") \\n### 3. Stop looping when there are no pages left (checked at the `If` node named \\\"Are we Finished?\\\")\\n\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"af19bb6d-5f0a-41ca-93b2-dbd27c3fd07e\",\n      \"name\": \"Set\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1345,\n        725\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"page\"\n            },\n            {\n              \"name\": \"perpage\",\n              \"value\": 15\n            }\n          ],\n          \"string\": [\n            {\n              \"name\": \"githubUser\",\n              \"value\": \"that-one-tom\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dad6055d-e06b-4f8c-ab90-deb196fce277\",\n      \"name\": \"Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"disabled\": true,\n      \"position\": [\n        1280,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 680,\n        \"height\": 280,\n        \"content\": \"## 2. Data Scraping\\n### In this example we fetch the titles from the n8n blog using the `HTTP request` node and then we use the `HTML extract` node to pass.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a7d4b9db-4d38-4b8d-9585-fe65c379e381\",\n      \"name\": \"Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1280,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 500,\n        \"height\": 280,\n        \"content\": \"## 1. Split into items\\n### In this example, we take the body from an `HTTP Request` node and split it out into items that are easier to manage.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d8402820-fa72-4957-8cf6-432f928ae799\",\n      \"name\": \"Item Lists - Create Items from Body\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"notes\": \"Create Items from Body\",\n      \"position\": [\n        1525,\n        -15\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"body\"\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"598939cd-e4c0-4a90-bd1f-f2b13ccbe072\",\n      \"name\": \"HTML Extract - Extract Article Title\",\n      \"type\": \"n8n-nodes-base.htmlExtract\",\n      \"position\": [\n        1505,\n        285\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sourceData\": \"binary\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"ArticleTitle\",\n              \"cssSelector\": \"#firstHeading\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c9b609c-5e41-4444-ade7-e1069943c904\",\n      \"name\": \"Item Lists - Fetch Body\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        1705,\n        725\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"body\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"15dfab42-440c-4d06-9ba2-b7b17371d009\",\n      \"name\": \"If - Are we finished?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1885,\n        725\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"HTTP Request - Get my Stars\\\"].json[\\\"body\\\"]}}\",\n              \"operation\": \"isEmpty\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba6e6904-6749-4ea2-84c1-8409b795bcf5\",\n      \"name\": \"Set - Increment Page\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2105,\n        745\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"page\",\n              \"value\": \"={{$node[\\\"Set\\\"].json[\\\"page\\\"]++}}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9f0df828-27d7-4994-8934-c8fe88af8566\",\n      \"name\": \"HTTP Request - Get Mock Albums\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1345,\n        -15\n      ],\n      \"parameters\": {\n        \"url\": \"https://jsonplaceholder.typicode.com/albums\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"cbc64010-f6f4-4c35-b4e2-9e1d4a748308\",\n      \"name\": \"HTTP Request - Get Wikipedia Page\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1325,\n        285\n      ],\n      \"parameters\": {\n        \"url\": \"https://en.wikipedia.org/wiki/Special:Random\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {\n              \"followRedirects\": true\n            }\n          },\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"a1a19268-0be8-4379-99a4-4285c68691b5\",\n      \"name\": \"HTTP Request - Get my Stars\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1525,\n        725\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/users/{{$node[\\\"Set\\\"].json[\\\"githubUser\\\"]}}/starred\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"per_page\",\n              \"value\": \"={{$node[\\\"Set\\\"].json[\\\"perpage\\\"]}}\"\n            },\n            {\n              \"name\": \"page\",\n              \"value\": \"={{$node[\\\"Set\\\"].json[\\\"page\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3\n    }\n  ],\n  \"connections\": {\n    \"Set\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request - Get my Stars\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set - Increment Page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request - Get my Stars\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If - Are we finished?\": {\n      \"main\": [\n        null,\n        [\n          {\n            \"node\": \"Set - Increment Page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"HTTP Request - Get Mock Albums\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"HTTP Request - Get Wikipedia Page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Item Lists - Fetch Body\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If - Are we finished?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request - Get my Stars\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Item Lists - Fetch Body\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request - Get Mock Albums\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Item Lists - Create Items from Body\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request - Get Wikipedia Page\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML Extract - Extract Article Title\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.htmlExtract",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest"
    ],
    "trigger": null
  }
}