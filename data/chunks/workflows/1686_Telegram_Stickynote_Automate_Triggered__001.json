{
  "source": "1686_Telegram_Stickynote_Automate_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"HJwTWtzlhK8Q5SOv\",\n  \"meta\": {\n    \"instanceId\": \"fb924c73af8f703905bc09c9ee8076f48c17b596ed05b18c0ff86915ef8a7c4a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Telegram AI multi-format chatbot\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"65196267-0d57-4af4-9081-962701478146\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        660,\n        640\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4o\",\n        \"options\": {\n          \"temperature\": 0.7,\n          \"frequencyPenalty\": 0.2\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"rveqdSfp7pCRON1T\",\n          \"name\": \"Ted's Tech Talks OpenAi\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fc446ef0-2f15-42e7-a993-7960d76d8876\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        800,\n        640\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=chat_with_{{ $('Listen for incoming events').first().json.message.chat.id }}\",\n        \"contextWindowLength\": 10\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51c3cddd-fc21-4fff-b615-ea7080c47947\",\n      \"name\": \"Correct errors\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1220,\n        580\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('AI Agent').item.json.output.replace(/&/g, \\\"&amp;\\\").replace(/>/g, \\\"&gt;\\\").replace(/</g, \\\"&lt;\\\").replace(/\\\"/g, \\\"&quot;\\\") }}\",\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"d931b7e1-bc17-431e-ae67-967b6ef79236\",\n      \"name\": \"Listen for incoming events\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -440,\n        480\n      ],\n      \"webhookId\": \"322dce18-f93e-4f86-b9b1-3305519b7834\",\n      \"parameters\": {\n        \"updates\": [\n          \"*\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b33335ff-5dea-4fff-8f63-fea2b11b8241\",\n      \"name\": \"Download voice file\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        60,\n        600\n      ],\n      \"parameters\": {\n        \"fileId\": \"={{$json.message.voice.file_id}}\",\n        \"resource\": \"file\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"2954ced6-ab98-42e6-bf64-237146a433e0\",\n      \"name\": \"Combine content and set properties\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        440,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bccbce0a-7786-49c9-979a-7a285cb69f78\",\n              \"name\": \"CombinedMessage\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.message && $json.message.text ? $json.message.text : ($json.text ? $json.text : '') }}\"\n            },\n            {\n              \"id\": \"5b1fc9f5-1408-4099-88cc-a23725c9eddb\",\n              \"name\": \"Message Type \",\n              \"type\": \"string\",\n              \"value\": \"={{ $json?.message?.text && !$json?.text ? \\\"text query\\\" : (!$json?.message?.text && $json?.text ? \\\"voice message\\\" : \\\"unknown type message\\\") }}\"\n            },\n            {\n              \"id\": \"1e9a17fa-ec5d-49dc-9ff6-1f28b57fb02e\",\n              \"name\": \"Source Type\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Listen for incoming events').item.json.message.forward_origin ? \\\" forwarded\\\" : \\\"\\\" }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e18de374-941f-4c2e-ab6c-6c6f68f2ce12\",\n      \"name\": \"Send final reply\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1040,\n        460\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output }} \\n\\nThank you for your{{ $('Combine content and set properties').item.json['Source Type'] }} {{ $('Combine content and set properties').item.json['Message Type '] }} \\ud83e\\udd17\",\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b47a9583-ce5c-464f-a9e6-153fb42e685f\",\n      \"name\": \"Send error message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        60,\n        300\n      ],\n      \"parameters\": {\n        \"text\": \"=Sorry, {{ $('Listen for incoming events').first().json.message.from.first_name }}! This command is not supported yet. Please send text or voice messages.\",\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0196b49e-90a1-4f2f-8b94-492fced37dbf\",\n      \"name\": \"Convert audio to text\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        240,\n        600\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"language\": \"\",\n          \"temperature\": 0.7\n        },\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"rveqdSfp7pCRON1T\",\n          \"name\": \"Ted's Tech Talks OpenAi\"\n        }\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"66505b83-e0c3-4d9d-8e1a-9b54030e29e7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -466.12784869794086,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 1035.4478381373049,\n        \"height\": 547.5630890194532,\n        \"content\": \"## Receive and pre-process messages \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"44087d3f-86c8-407c-8791-645d167165cb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        620,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 861.262180151035,\n        \"height\": 550.5748478134515,\n        \"content\": \"## 1. Send incoming message to the AI Agent\\n## 2. Deliver agent reply to the user \\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7e58831-de97-483f-8b8a-583f85397245\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        20,\n        553.0639243489702\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 367.73614918993235,\n        \"height\": 194.83713159725437,\n        \"content\": \"## Transcribe audio\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"89515d80-6efc-40a8-95ce-343d4ff4dbee\",\n      \"name\": \"Send Typing action\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -180,\n        300\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Listen for incoming events').first().json.message.from.id }}\",\n        \"operation\": \"sendChatAction\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"9dexJXnlVPA6wt8K\",\n          \"name\": \"Chat & Sound\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c925d059-f843-473c-bfd4-3c563d80ca0f\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        680,\n        460\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.CombinedMessage }}\",\n        \"options\": {\n          \"humanMessage\": \"TOOLS\\n------\\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\\n\\n{tools}\\n\\n{format_instructions}\\n\\nUSER'S INPUT\\n--------------------\\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\\n\\n{{input}}\",\n          \"systemMessage\": \"=You are a helpful AI assistant. You are chatting with the user named `{{ $('Determine content type').item.json.message.from.first_name }}`. You need to address the user by their name. Today is {{ DateTime.fromISO($now).toLocaleString(DateTime.DATETIME_FULL) }}\\n\\nIn your reply, always send a message in Telegram-supported HTML format. Here are the formatting instructions:\\n1. The following tags are currently supported:\\n<b>bold</b>, <strong>bold</strong>\\n<i>italic</i>, <em>italic</em>\\n<u>underline</u>, <ins>underline</ins>\\n<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>\\n<span class=\\\"tg-spoiler\\\">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>\\n<b>bold <i>italic bold <s>italic bold strikethrough <span class=\\\"tg-spoiler\\\">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>\\n<a href=\\\"http://www.example.com/\\\">inline URL</a>\\n<code>inline fixed-width code</code>\\n<pre>pre-formatted fixed-width code block</pre>\\n2. Any code that you send should be wrapped in these tags: <pre><code class=\\\"language-python\\\">pre-formatted fixed-width code block written in the Python programming language</code></pre>\\nOther programming languages are supported as well.\\n3. All <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with &gt; and & with &amp;)\\n4. If the user sends you a message starting with / sign, it means this is a Telegram bot command. For example, all users send /start command as their first message. Try to figure out what these commands mean and reply accodringly\\n\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"2c56536d-1a86-4a49-b495-3e877adb308a\",\n      \"name\": \"Determine content type\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -180,\n        480\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Voice\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"dd41bbf0-bee0-450b-9160-b769821a4abc\",\n                    \"operator\": {\n                      \"type\": \"object\",\n                      \"operation\": \"exists\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.message.voice}}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3.2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"15ae799b-6868-4519-b579-3f202e4de5b2\",\n  \"connections\": {\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send final reply\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send final reply\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Correct errors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download voice file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert audio to text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert audio to text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine content and set properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Determine content type\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine content and set properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Download voice file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send error message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listen for incoming events\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Determine content type\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Send Typing action\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine content and set properties\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegramTrigger",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.set",
      "n8n-nodes-base.telegram",
      "n8n-nodes-base.telegram",
      "@n8n/n8n-nodes-langchain.openAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.telegram",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.switch"
    ],
    "trigger": null
  }
}