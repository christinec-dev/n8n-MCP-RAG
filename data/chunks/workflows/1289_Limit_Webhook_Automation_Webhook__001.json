{
  "source": "1289_Limit_Webhook_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"TtoDcjgthgA4NTkU\",\n  \"meta\": {\n    \"instanceId\": \"fb261afc5089eae952e09babdadd9983000b3d863639802f6ded8c5be2e40067\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs\",\n  \"tags\": [\n    {\n      \"id\": \"mqOrNvCDgQLzPA2x\",\n      \"name\": \"Workflows\",\n      \"createdAt\": \"2024-08-07T14:18:53.614Z\",\n      \"updatedAt\": \"2024-08-07T14:18:53.614Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"86cbf150-df4f-42f7-b7b3-e03c32e6f23c\",\n      \"name\": \"Get Chat\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryManager\",\n      \"position\": [\n        1700,\n        -400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"a9153a24-e902-4f29-9b83-447317ce3119\",\n      \"name\": \"Insert Chat\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryManager\",\n      \"position\": [\n        2540,\n        -400\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"type\": \"user\",\n              \"message\": \"={{ $('OpenAI - Speech to Text').item.json[\\\"text\\\"] }}\"\n            },\n            {\n              \"type\": \"ai\",\n              \"message\": \"={{ $json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"f5c272d4-248b-45a5-87b5-eb659a865d05\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1664,\n        -491\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 486.4746124819703,\n        \"height\": 238.4911357933579,\n        \"content\": \"## Get Context\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"32ad17ca-0045-487d-9387-71c2e73629d4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2510,\n        -489\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 321.2536584847704,\n        \"height\": 231.05945912581728,\n        \"content\": \"## Save Context\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"17ae4f1a-6192-4c52-8157-3cb47b37e0fb\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        2020,\n        -400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"context\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"00b3081e-fbcd-489b-b45a-4e847c346594\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        2080,\n        -100\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"test-0dacb3b5-4bcd-47dd-8456-dcfd8c258204\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"55ca2790-e905-414a-a9f6-7d88a9e5807d\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        2220,\n        -100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-flash\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"2bUF1ZI9hoMIM5XN\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e8b3433f-b205-404c-9f05-504556d6b6dd\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        3560,\n        -400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"binary\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"de296743-5ac7-454b-bf3a-d020cc024511\",\n      \"name\": \"ElevenLabs - Generate Audio\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        3240,\n        -400\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.elevenlabs.io/v1/text-to-speech/{{voice id}}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"text\",\n              \"value\": \"={{ $('Basic LLM Chain').item.json.text }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpCustomAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpCustomAuth\": {\n          \"id\": \"lnGfV4BlxSE6Xc4X\",\n          \"name\": \"Eleven Labs\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"214e15f2-8a16-4598-b4ac-9fc2ec6545e6\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3040,\n        -560\n      ],\n      \"parameters\": {\n        \"width\": 468.73250812192407,\n        \"height\": 843.7602354099661,\n        \"content\": \"* ### For the Text-to-Speech part, we'll use ElevenLabs.io, which is free and offers a variety of voices to choose from. However, you can also use the OpenAI `\\\"Generate audio\\\"` node instead.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n* ### Since there is no pre-built node for `\\\"ElevenLabs\\\"` in n8n, we'll connect to it through its API using the \\\"HTTP Request\\\" node.\\n\\n## Prerequisites:\\n* ### `\\\"ElevenLabs API Key\\\"` (you can obtain it from their website).\\n* ### `\\\"Voice ID\\\"` (you can also get it from ElevenLabs' \\\"Voice Library\\\").\\n## Setup\\n* ### In the URL parameter, replace \\\"{{voice id}}\\\" at the end of the URL with the Voice ID you obtained from ElevenLabs.io.\\n* ### To set up your API Key, add custom authentication and include the following `JSON` with your acual ElevenLabs API Key:\\n```json\\n{\\n  \\\"headers\\\": {\\n    \\\"xi-api-key\\\": \\\"put-your-API-Key-here\\\"\\n  }\\n}\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"94ad934c-4a13-47b1-83a5-76fab43b3a47\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1663,\n        -598\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 487.4293487597613,\n        \"height\": 91.01435855269375,\n        \"content\": \"### The \\\"Get Chat,\\\" \\\"Insert Chat,\\\" and \\\"Window Buffer Memory\\\" nodes will help the LLM model maintain context throughout the conversation.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0a96f48d-0d8b-4240-9eab-a681bfd4c8b5\",\n      \"name\": \"Limit\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        2900,\n        -400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9a5d4ddb-6403-4758-858e-9fbe10c421a9\",\n      \"name\": \"Basic LLM Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        2200,\n        -400\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('OpenAI - Speech to Text').item.json[\\\"text\\\"] }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"type\": \"AIMessagePromptTemplate\",\n              \"message\": \"=To maintain context and fully understand the user's question, always review the previous conversation between you and him before providing an answer.\\nThis is the previous conversation:\\n{{ $('Aggregate').item.json[\\\"context\\\"].map(m => `\\nHuman: ${m.human || 'undefined'}\\nAI Assistant: ${m.ai || 'undefined'}\\n`).join('') }}\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"f2f99895-9678-41b8-ad28-db40e1e23dc0\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        1320,\n        -400\n      ],\n      \"webhookId\": \"e9f611eb-a8dd-4520-8d24-9f36deaca528\",\n      \"parameters\": {\n        \"path\": \"voice_message\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d9a5fb04-4c02-4da4-b690-7b0ecd0ae052\",\n      \"name\": \"OpenAI - Speech to Text\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1500,\n        -400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\",\n        \"binaryPropertyName\": \"voice_message\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"2Cije3KX7OIVwn9B\",\n          \"name\": \"n8n OpenAI\"\n        }\n      },\n      \"typeVersion\": 1.3\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true\n  },\n  \"versionId\": \"fe5792ca-03d7-4cdd-96db-20f4cd479c7e\",\n  \"connections\": {\n    \"Limit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ElevenLabs - Generate Audio\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI - Speech to Text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Chat\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Insert Chat\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Basic LLM Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Insert Chat\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Insert Chat\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get Chat\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI - Speech to Text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Chat\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ElevenLabs - Generate Audio\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.memoryManager",
      "@n8n/n8n-nodes-langchain.memoryManager",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.aggregate",
      "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.limit",
      "@n8n/n8n-nodes-langchain.chainLlm",
      "n8n-nodes-base.webhook",
      "@n8n/n8n-nodes-langchain.openAi"
    ],
    "trigger": null
  }
}