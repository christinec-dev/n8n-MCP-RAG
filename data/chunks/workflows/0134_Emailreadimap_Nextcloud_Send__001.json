{
  "source": "0134_Emailreadimap_Nextcloud_Send.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"name\": \"IMAP Email\",\n      \"type\": \"n8n-nodes-base.emailReadImap\",\n      \"position\": [\n        240,\n        420\n      ],\n      \"parameters\": {\n        \"format\": \"resolved\",\n        \"mailbox\": \"Invoices\",\n        \"options\": {\n          \"customEmailConfig\": \"[\\\"ALL\\\"]\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Nextcloud\",\n      \"type\": \"n8n-nodes-base.nextCloud\",\n      \"position\": [\n        940,\n        420\n      ],\n      \"parameters\": {\n        \"path\": \"=Documents/Invoices/{{$json[\\\"date\\\"]}}_{{$json[\\\"from\\\"]}}_{{$binary.file.fileName}}\",\n        \"binaryDataUpload\": true,\n        \"binaryPropertyName\": \"file\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Map each attachment\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        620,\n        420\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const _ = require('lodash')\\n\\nconst sanitize = str => _.chain(str)\\n  .replace(/[^A-Za-z0-9&.-]/g, '-') // sanitise via whitelist of characters\\n  .replace(/-(?=-)/g, '') // remove repeated dashes - https://regexr.com/6ag8h\\n  .trim('-') // trim any leading/trailing dashes\\n  .truncate({\\n    length: 60,\\n    omission: '-' // when the string ends with '-', you'll know it was truncated\\n  })\\n  .value()\\n\\nconst result = _.flatMap(items.map(item => {\\n  //console.log({item})\\n\\n  // Maps each attachment to a separate item\\n  return _.values(item.binary).map(file => {\\n    console.log(\\\"Saving attachement:\\\", file.fileName, 'from:', ...item.json.from.value)\\n    \\n    // sanitize filename but exclude extension\\n    const filename_parts = file.fileName.split('.')\\n    const ext = _.slice(filename_parts, filename_parts.length-1)\\n    const filename_main = _.join(_.dropRight(filename_parts), '.')\\n    file.fileName = sanitize(filename_main) + '.' + ext\\n    \\n    return {\\n      json: {\\n        from: sanitize(item.json.from.value[0].name),\\n        date: sanitize(new Date(item.json.date).toISOString().split(\\\"T\\\")[0]) // get date part \\\"2020-01-01\\\"\\n      }, \\n      binary: { file }\\n    }\\n  })\\n}))\\n\\n//console.log(result)\\nreturn result\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"IMAP Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Map each attachment\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Map each attachment\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Nextcloud\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.emailReadImap",
      "n8n-nodes-base.nextCloud",
      "n8n-nodes-base.function"
    ],
    "trigger": null
  }
}