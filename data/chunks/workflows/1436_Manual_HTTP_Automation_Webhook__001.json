{
  "source": "1436_Manual_HTTP_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"192d3e4f-6bb0-4b87-a1fa-e32c9efb49cc\",\n      \"name\": \"When clicking \\\"Test workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        336,\n        34\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"32a7a772-76a6-4614-a6ab-d2b152a5811f\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1220,\n        180\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4o\",\n        \"options\": {\n          \"temperature\": 0\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8c444314-ed7d-4ca0-b0fa-b6d1e964c698\",\n      \"name\": \"Get Applicable Rows\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        516,\n        34\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appbgxPBurOmQK3E7\",\n          \"cachedResultUrl\": \"https://airtable.com/appbgxPBurOmQK3E7\",\n          \"cachedResultName\": \"Building Inventory Survey Example\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"tblEHkoTvKpa4Aa0Q\"\n        },\n        \"options\": {},\n        \"operation\": \"search\",\n        \"returnAll\": false,\n        \"filterByFormula\": \"AND(Image!=\\\"\\\", AI_status=FALSE())\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"Und0frCQ6SNVX3VV\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f90578fa-b886-4653-8ff7-0c91884dc517\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        1257,\n        733\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8f5959eb-45bd-4185-a959-10268827e41d\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1417,\n        733\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"7263764b-8409-4cea-8db3-3278dd7ef9d8\",\n              \"name\": \"=route\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.route }}\"\n            },\n            {\n              \"id\": \"55c3b207-2e98-4137-8413-f72cbff17986\",\n              \"name\": \"query\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query }}\"\n            },\n            {\n              \"id\": \"6eb873de-3c3a-4135-9dc0-1d441c63647c\",\n              \"name\": \"\",\n              \"type\": \"string\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"2c7f7274-12e9-4dd3-8ee4-679b408d5430\",\n      \"name\": \"Fallback Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1580,\n        875\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"{\\n \\\"response\\\": {\\n \\\"ok\\\": false,\\n \\\"error\\\": \\\"The requested tool was not found or the service may be unavailable. Do not retry.\\\"\\n }\\n}\\n\"\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"09f36f4d-eb88-4d93-a8b3-e9ba66b46b54\",\n      \"name\": \"SERP Google Reverse Image API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1860,\n        549\n      ],\n      \"parameters\": {\n        \"url\": \"https://serpapi.com/search.json\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"engine\",\n              \"value\": \"google_reverse_image\"\n            },\n            {\n              \"name\": \"image_url\",\n              \"value\": \"={{ $json.query }}\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"serpApi\"\n      },\n      \"credentials\": {\n        \"serpApi\": {\n          \"id\": \"aJCKjxx6U3K7ydDe\",\n          \"name\": \"SerpAPI account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8e3a0f38-8663-4f5c-837f-4b9aa21f14fb\",\n      \"name\": \"Reverse Image Search Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2037,\n        547\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"de99a504-713f-4c78-8679-08139b2def31\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ JSON.stringify($json.image_results.map(x => ({ position: x.position, title: x.title, link: x.link, description: x.snippet }))) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"0cd2269a-5b1f-4f10-b180-7f9cff9b1102\",\n      \"name\": \"Reverse Image Search Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        1300,\n        340\n      ],\n      \"parameters\": {\n        \"name\": \"reverse_image_search\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"route\",\n              \"stringValue\": \"serp.google_reverse_image\"\n            }\n          ]\n        },\n        \"workflowId\": \"={{ $workflow.id }}\",\n        \"description\": \"Call this tool to perform a reverse image search. Reverse image searches return urls where similar looking products exists. Fetch the returned urls to gather more information. This tool requires the following object request body.\\n```\\n{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"image_url\\\": { \\\"type\\\": \\\"string\\\" },\\n }\\n}\\n```\\nimage_url should be an absolute URL to the image.\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9825651e-b382-4e0a-97ef-37764cb5be9e\",\n      \"name\": \"Firecrawl Scrape API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1860,\n        889\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.firecrawl.dev/v0/scrape\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.query }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"OUOnyTkL9vHZNorB\",\n          \"name\": \"Firecrawl API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7f61d60b-b052-4b7c-abfd-9eb8e05a45a2\",\n      \"name\": \"Scrape Success?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2020,\n        889\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"a15a164f-d0c5-478f-8b27-f3d51746c214\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.success }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"29c65ef4-6350-490a-b8e3-a5c869e656b2\",\n      \"name\": \"Firecrawl Scrape Success Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2180,\n        889\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"7db5c81f-de90-40e1-8086-3f13d40451c7\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.data.markdown.substring(0, 3000) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"229b4008-d8a8-4609-854a-fc244a4ed630\",\n      \"name\": \"Firecrawl scrape Error Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2180,\n        1049\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e691d86a-d366-44a2-baa6-3dba42527f6e\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"{ error: \\\"Unable to scrape website due to unknown error. Do not retry.\\\" }\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"f080069b-e849-45e0-88cf-03707d22c704\",\n      \"name\": \"Firecrawl Web Scaper Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        1440,\n        340\n      ],\n      \"parameters\": {\n        \"name\": \"webpage_url_scraper_tool\",\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"route\",\n              \"stringValue\": \"firecrawl.scrape\"\n            }\n          ]\n        },\n        \"workflowId\": \"={{ $workflow.id }}\",\n        \"description\": \"Call this tool to retrieve page contents of a url.\\n```\\n{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n }\\n}\\n```\\nurl should be an absolute URL.\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4eff88bb-bd5e-4d6a-b5e1-8521632c461f\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1500,\n        180\n      ],\n      \"parameters\": {\n        \"jsonSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"title\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"model\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"material\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"color\\\": { \\\"type\\\": \\\"string\\\" },\\n \\\"condition\\\": { \\\"type\\\": \\\"string\\\" }\\n }\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"328d106b-a473-4f54-82fd-55c30d813da9\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        -260\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 402.5984702109446,\n        \"height\": 495.4071184783251,\n        \"content\": \"## 1. Use Airtable to Capture Survey Photos\\n[Read more about AirTable](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.airtable)\\n\\nTo enable this workflow, we need a database where we can retreive the title and photo to analyse and write the generate values back to. Airtable is perfect for this since it has a robust API we can work with.\\n\\nFor this demo, we'll manually trigger but this can be changed for forms or other triggers.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e358775d-ff83-411d-9364-b43c87d98134\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        716.3106363781314,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 359.40869874940336,\n        \"height\": 428.4787925736586,\n        \"content\": \"## 2. Use AI Vision Model to Analyse the Photo.\\n[Read more about OpenAI Vision](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai)\\n\\nWe'll use OpenAi vision model to create a detailed description of the product in the photo. We split this step from the agent because it uses an image model rather than the usual text-based one.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51b4a70c-9583-4e8a-8e8d-896a80ad53c3\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1111.3914848823072,\n        -293.9250474768817\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 593.0683948010671,\n        \"height\": 803.956942672397,\n        \"content\": \"## 3. Build an AI Agent who Searches the Internet\\n[Read more about OpenAI Agents](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai)\\n\\nThis AI Agent has the ability to perform reverse image searches using our captured photos as well visit external webpages in order to obtain accurate product names and attributes. The Agent along with the tools might mimic what the average human user would carry out the same task.\\n\\n* For reverse image search, we're using SERP API service however we won't use the built-in SERP node as we need to specify custom parameters. \\n* For scraping, we'll use [Firecrawl](https://www.firecrawl.dev/) as this service also helps to parse and return the page as markdown which is more efficient.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adfb519b-a5c7-432c-be32-5acfcc388b49\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1740,\n        -149.28190375244515\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 373.3601237414979,\n        \"height\": 397.7168664109706,\n        \"content\": \"## 4. Overwrite our Rows with Enriched Results\\n\\nAnd Viola! Our AI agent has potentially saved hours of manual data entry work for our surveyor. This technique can be used for many other usecases.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6444e217-b944-450e-892a-5822d4d390ce\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1200,\n        549\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 554.6092633638649,\n        \"height\": 490.7010880746526,\n        \"content\": \"## 5. Using the Custom Workflow Tool\\n[Read more about Workflow Tools](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow)\\n\\nAI Agents rely on Tools to make decisions and become exponentially more powerful the more tools they have. A common pattern to manage multiple tools is to create a routing system for tools using the API pattern.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bf2459cf-a931-4232-9504-b36b15721194\",\n      \"name\": \"Enrich Product Rows\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        1880,\n        60\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appbgxPBurOmQK3E7\",\n          \"cachedResultUrl\": \"https://airtable.com/appbgxPBurOmQK3E7\",\n          \"cachedResultName\": \"Building Inventory Survey Example\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"tblEHkoTvKpa4Aa0Q\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"id\": \"={{ $('Get Applicable Rows').item.json.id }}\",\n            \"Color\": \"={{ $json.output.output.color }}\",\n            \"Model\": \"={{ $json.output.output.model }}\",\n            \"Title\": \"={{ $json.output.output.title }}\",\n            \"Material\": \"={{ $json.output.output.material }}\",\n            \"AI_status\": true,\n            \"Condition\": \"={{ $json.output.output.condition }}\",\n            \"Description\": \"={{ $json.output.output.description }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"id\",\n              \"defaultMatch\": true\n            },\n            {\n              \"id\": \"Title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Image\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Image\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Model\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Model\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Material\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Material\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Color\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Color\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Condition\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Condition\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"AI_status\",\n              \"type\": \"boolean\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"AI_status\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"id\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"update\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"Und0frCQ6SNVX3VV\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"19d736bf-c29d-46a2-93bc-b536ff28c4b5\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        -260\n      ],\n      \"parameters\": {\n        \"width\": 359.6648027457353,\n        \"height\": 381.0536322713287,\n        \"content\": \"## Try It Out!\\n### This workflow does the following:\\n* Scans an Airtable spreadsheet for rows with product photo images.\\n* Uses an AI vision model to attempt to identify the product.\\n* Uses an AI Agent to research the product on the internet to enrich the product data.\\n* Overwrites our Airtable spreadsheet with the enriched data.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"25f15c48-16bf-4f92-942d-c224ed88d208\",\n      \"name\": \"Analyse Image\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        840,\n        80\n      ],\n      \"parameters\": {\n        \"text\": \"=Focus on the {{ $json.Title }} in the image - we'll refer to this as the \\\"object\\\". Identify the following attributes of the object. If you cannot determine confidently, then leave blank and move to next attribute.\\n* Decription of the object.\\n* The model/make of the object.\\n* The material(s) used in the construction of the object.\\n* The color(s) of the object\\n* The condition of the object. Use one of poor, good, excellent.\\n\",\n        \"options\": {},\n        \"resource\": \"image\",\n        \"imageUrls\": \"={{ $json.Image[0].thumbnails.large.url }}\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"e6c99f71-ccc9-426e-b916-cc38864e3224\",\n      \"name\": \"Object Identifier Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1260,\n        20\n      ],\n      \"parameters\": {\n        \"text\": \"=system: Your role is to help an building surveyor perform a object classification and data collection task whereby the surveyor will take photos of various objects and your job is to try and identify accurately certain product attributes of the objects as detailed below.\\n\\nThe surveyor has given you the following:\\n1) photo url ```{{ $('Get Applicable Rows').item.json.Image[0].thumbnails.large.url }}```.\\n2) photo description ```{{ $json.content }}```.\\n\\nFor each product attribute the surveyor is unable to determine, you may:\\n1) use the reverse image search tool to search the product on the internet via the provided image url.\\n2) use the web scraper tool to read webpages on the internet which may be relevant to the product.\\n3) If after using these tools, you are still unable to determine the required product attributes then leave the data blank.\\n\\nUse all the information provided and gathered, to extract the following product attributes: title, description, model, material, color and condition.\",\n        \"agent\": \"openAiFunctionsAgent\",\n        \"options\": {},\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"661b14bd-6511-4f20-981c-2e68a7c34ec5\",\n      \"name\": \"Actions Router\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1577,\n        733\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"serp.google_reverse_image\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.route }}\",\n                    \"rightValue\": \"serp.google_reverse_image\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"firecrawl.scrape\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"0a1f54ae-39f1-468d-ba6e-1376d13e4ee8\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.route }}\",\n                    \"rightValue\": \"firecrawl.scrape\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"c5078221-9239-4ec0-b25e-7cd880b58216\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        20\n      ],\n      \"parameters\": {\n        \"width\": 181.2788838920522,\n        \"height\": 297.0159375852115,\n        \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ud83d\\udea8**Required**\\n* Set Airtable Base and Table IDs here.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c58c0db4-9b99-4a77-90ae-66fa3981b684\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1840,\n        40\n      ],\n      \"parameters\": {\n        \"width\": 181.2788838920522,\n        \"height\": 297.0159375852115,\n        \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ud83d\\udea8**Required**\\n* Set Airtable Base and Table IDs here.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e3a666d7-d7a5-43f5-8f04-7972332f8916\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1780,\n        440\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 460.3301604548244,\n        \"height\": 298.81538450684064,\n        \"content\": \"## 5.1 Google Reverse Image Tool\\nThis tool uses Google's reverse image API to return websites where similar images are found.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7407cdb-16bb-4bd9-a28e-7a72a5289354\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1780,\n        769.9385328672522\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 575.3216480295998,\n        \"height\": 463.34699288922565,\n        \"content\": \"## 5.2 Webscraper Tool\\nThis tool uses Firecrawl.dev API to crawl webpages and returns those pages in markdown format.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Actions Router\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Analyse Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Object Identifier Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Actions Router\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SERP Google Reverse Image API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Firecrawl Scrape API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Fallback Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scrape Success?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Firecrawl Scrape Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Firecrawl scrape Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Object Identifier Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Applicable Rows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Analyse Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Firecrawl Scrape API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Scrape Success?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Object Identifier Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Enrich Product Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Object Identifier Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Firecrawl Web Scaper Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Object Identifier Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Reverse Image Search Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Object Identifier Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SERP Google Reverse Image API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reverse Image Search Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Test workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Applicable Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.airtable",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.airtable",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.openAi",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": "execute workflow trigger"
  }
}