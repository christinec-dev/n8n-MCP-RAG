{
  "source": "0429_Splitout_GoogleCalendar_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"3c58c896c9089c8fb4d7f2b069bf3119193f239a1f538829758e2f4d6b5f5b24\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"ed18a0ab-ac62-469e-9490-d9fcf75b4606\",\n      \"name\": \"Setup\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -700,\n        320\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"linkedInAPIKey\"\n            },\n            {\n              \"name\": \"twitterAPIKey\"\n            },\n            {\n              \"name\": \"emails\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"d6624796-3f59-4077-8d41-4418c869ad27\",\n      \"name\": \"Every morning @ 7\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -940,\n        320\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 7\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1cb46dc8-c2b5-487c-a382-a5714686be50\",\n      \"name\": \"Get meetings for today\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        -300,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"timeMax\": \"={{ $today.plus({ days: 1 }) }}\",\n          \"timeMin\": \"={{ $today.minus({ days: 3 }) }}\",\n          \"singleEvents\": true\n        },\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"milorad.filipovic19@gmail.com\",\n          \"cachedResultName\": \"milorad.filipovic19@gmail.com\"\n        },\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"googleCalendarOAuth2Api\": {\n          \"id\": \"22\",\n          \"name\": \"Google Calendar account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22167c9c-6dc2-41a8-a8b8-218643b943e5\",\n      \"name\": \"Get attendees email domains\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -80,\n        320\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"domain\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $json.attendees.filter(a => !a.organizer).map(a => a.email.split('@').pop()) }}\"\n            },\n            {\n              \"name\": \"attendeeEmails\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $json.attendees.filter(a => !a.organizer).map(a => a.email) }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"271d0044-ceb1-4e3a-9a60-9c003cd4b198\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        140,\n        320\n      ],\n      \"parameters\": {\n        \"include\": \"selectedOtherFields\",\n        \"options\": {},\n        \"fieldToSplitOut\": \"domain\",\n        \"fieldsToInclude\": \"attendeeEmails, start\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"68041cd4-6dc3-4225-b39e-d227a3142e02\",\n      \"name\": \"Get recent LinkedIn posts\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -20,\n        540\n      ],\n      \"parameters\": {\n        \"url\": \"https://fresh-linkedin-profile-data.p.rapidapi.com/get-company-posts\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {}\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"linkedin_url\",\n              \"value\": \"=https://www.linkedin.com/{{ $json.linkedin.handle }}\"\n            },\n            {\n              \"name\": \"sort_by\",\n              \"value\": \"recent\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-RapidAPI-Key\",\n              \"value\": \"={{ $('Setup').item.json.linkedInAPIKey }}\"\n            },\n            {\n              \"name\": \"X-RapidAPI-Host\",\n              \"value\": \"fresh-linkedin-profile-data.p.rapidapi.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"bcbc845c-dd69-491e-b18d-7e1cd73d94b4\",\n      \"name\": \"Enrich attendee company\",\n      \"type\": \"n8n-nodes-base.clearbit\",\n      \"position\": [\n        580,\n        320\n      ],\n      \"parameters\": {\n        \"domain\": \"={{ $json.domain }}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"clearbitApi\": {\n          \"id\": \"tuwO0i7CavIt5j8X\",\n          \"name\": \"Clearbit account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a928a47a-c7be-4b08-ae78-05541963bf0e\",\n      \"name\": \"Gmail\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1360,\n        640\n      ],\n      \"parameters\": {\n        \"sendTo\": \"={{ $('Setup').first().json.emails }}\",\n        \"message\": \"={{ $json.html }}\",\n        \"options\": {},\n        \"subject\": \"=Latest social activity for: {{ $('Wrap everything together').item.json.name }}\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"10\",\n          \"name\": \"mrdosija@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"cc82d1ef-5601-4844-b2c1-91cb7d16c080\",\n      \"name\": \"Combine all activity for a company\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        460,\n        620\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"clashHandling\": {\n            \"values\": {\n              \"resolveClash\": \"preferInput2\"\n            }\n          }\n        },\n        \"joinMode\": \"keepEverything\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"name\",\n              \"field2\": \"name\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d0843f1d-173c-4c6a-8ef7-be122551ce03\",\n      \"name\": \"Extract data for email\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        680,\n        800\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"attendeeEmail\",\n              \"stringValue\": \"={{ $json.meeting.attendeeEmails.find(a => a.endsWith($json.meeting.domain)) }}\"\n            },\n            {\n              \"name\": \"startHour\",\n              \"type\": \"numberValue\",\n              \"numberValue\": \"={{ DateTime.fromISO($json.meeting.start.dateTime).hour }}\"\n            },\n            {\n              \"name\": \"startMinute\",\n              \"type\": \"numberValue\",\n              \"numberValue\": \"={{ DateTime.fromISO($json.meeting.start.dateTime).minute }}\"\n            }\n          ]\n        },\n        \"include\": \"selected\",\n        \"options\": {},\n        \"includeFields\": \"name, html_twitter, html_linkedin\"\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7bbb4100-7529-4b33-8301-6e312e15d0c3\",\n      \"name\": \"Prepare email template\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        1140,\n        640\n      ],\n      \"parameters\": {\n        \"html\": \"<!DOCTYPE html>\\n\\n<html>\\n<head>\\n  <meta charset=\\\"UTF-8\\\" />\\n\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n     <h2 style=\\\"font-size: 1.2em\\\">\\n      üóìÔ∏è Meeting with <span>{{ $json.attendeeEmail }}</span>\\n       at {{ $json.startHour }}:{{ $json.startMinute < 10 ? `0${$json.startMinute}` : $json.startMinute }}h\\n       <h3>Here's a quick summary of {{ $json.name }}'s recent social media activities</h3>\\n       <p class=\\\"summary\\\">\\n         {{ $json.message.content }}\\n       </p>\\n    </h2>\\n\\n  </div>\\n</body>\\n</html>\\n\\n<style>\\n.container {\\n  font-family: sans-serif;\\n}\\n\\n.summary {\\n  background-color: #f7f9fc; \\n  font-family: sans-serif; \\n  padding: 0.3em 1em\\n}\\n</style>\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"0ebfe036-0988-4775-bff4-1e52ba81fd12\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -773.5590877677955,\n        50.38078783690389\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 409.31582584657923,\n        \"height\": 426.61520915049425,\n        \"content\": \"## Start here\\n1Ô∏è‚É£ Register on [RapidAPI](https://rapidapi.com) and subscribe to these two APIs:\\n- [Fresh LinkedIn Profile Data](https://rapidapi.com/freshdata-freshdata-default/api/fresh-linkedin-profile-data)\\n- [Twitter](https://rapidapi.com/omarmhaimdat/api/twitter154)\\n\\n\\n2Ô∏è‚É£ Set API keys for these two in `linkedInAPIKey` and `twitterAPIKey`fields of this node\\n\\n3Ô∏è‚É£ Set email addresses that should receive the list in the `emails` field of this node\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3fcc1786-757f-49fd-842c-9f77c2a869a4\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -474,\n        620\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 334.90628250854803,\n        \"height\": 282.9114150520537,\n        \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n‚ÑπÔ∏è If you need to get activities from more social media accounts found by ClearBit, they can be added here, just make sure to process them properly in separate switch node branches\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0eb689e9-f347-482c-b6f3-de9913696eec\",\n      \"name\": \"Keep only ones with the domain\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        360,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"881d891e-ea17-4879-a5cf-72d08b281f56\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.domain }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9c479fe7-b0da-402a-bc4e-1c52b0bcb677\",\n      \"name\": \"Extract important data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        220,\n        540\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"linkedin_posts\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $input.item.json.data.slice(0, 10).map(d => { return { text: d.text, likes: d.num_likes, comments: d.num_comments, postedAt: d.posted } } ) }}\"\n            },\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Switch').item.json.name }}\"\n            },\n            {\n              \"name\": \"meeting\",\n              \"type\": \"objectValue\",\n              \"objectValue\": \"={{ $('Split Out').item.json }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"4956210f-4797-4266-acb7-b80684f76052\",\n      \"name\": \"Extract important data again\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        220,\n        740\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"twitter_posts\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $input.item.json.results.map(d => { return { text: d.text, favorites: d.favorite_count, retweets: d.retweet_count, replies: d.reply_count, postedAt: d.creationDate} }) }}\"\n            },\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Switch').item.json.name }}\"\n            },\n            {\n              \"name\": \"meeting\",\n              \"type\": \"objectValue\",\n              \"objectValue\": \"={{ $('Split Out').item.json }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"fda56f50-ebc8-4259-9155-017f09a64f26\",\n      \"name\": \"Ask AI to summerize\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"position\": [\n        680,\n        620\n      ],\n      \"parameters\": {\n        \"prompt\": {\n          \"messages\": [\n            {\n              \"content\": \"=I am a sales representative in my company and I want to see social media activity for a company I am about to meet. I will give you a JSON object  containing company name, and lists of recent LinkedIn and X(Twitter) posts and your job is to give me a summary these posts. This summary needs to be in textual form suitable for email (just the content without the subject and should be impersonal) and should include details interested to a sales representative such as me. JSON data has the following properties: - 'name': Company name, - 'linkedin_posts': List of LinkedIn posts, - 'twitter_posts': List of Twitter posts, You can ignore all other properties in the JSON data. This is the data:\\n{{ JSON.stringify($json) }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"resource\": \"chat\",\n        \"chatModel\": \"gpt-4\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"fN3KsfZMEf9qu6J6\",\n          \"name\": \"OpenAi account 3\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"0c082a02-72b3-47d8-9a62-ca5973eed8be\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -260,\n        640\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"linkedin\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"boolean\",\n                      \"operation\": \"true\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.linkedin.handle !== null }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"twitter\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"bbb0310e-8b20-4bc6-a540-a4cd17470e28\",\n                    \"operator\": {\n                      \"type\": \"boolean\",\n                      \"operation\": \"true\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.twitter.id !== null }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"allMatchingOutputs\": true,\n          \"looseTypeValidation\": false\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"e1cf0a2e-834b-4259-91e4-47e13c07c321\",\n      \"name\": \"Wrap everything together\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        940,\n        640\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"e45f33ec-6d67-4ae9-a450-5c300c8748b1\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        197.44186046511595\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 738.9631933644362,\n        \"height\": 399.8417061497098,\n        \"content\": \"### üì¨ You will receive one email for every company in your calendar. These emails will look something like this:\\n\\n![Email example](https://i.imgur.com/IP2Jw1F.png#full-width)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"31d22fdc-aacf-4228-ac78-b8f05621c0e0\",\n      \"name\": \"Get latest tweets\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -20,\n        740\n      ],\n      \"parameters\": {\n        \"url\": \"https://twitter154.p.rapidapi.com/user/tweets\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1,\n              \"batchInterval\": 2000\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"value\": \"10\"\n            },\n            {\n              \"name\": \"user_id\",\n              \"value\": \"={{ $json.twitter.id }}\"\n            },\n            {\n              \"name\": \"include_replies\",\n              \"value\": \"={{ false }}\"\n            },\n            {\n              \"name\": \"include_pinned\",\n              \"value\": \"={{ false }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-RapidAPI-Host\",\n              \"value\": \"twitter154.p.rapidapi.com\"\n            },\n            {\n              \"name\": \"X-RapidAPI-Key\",\n              \"value\": \"={{ $('Setup').first().json.twitterAPIKey }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Setup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get meetings for today\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get recent LinkedIn posts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get latest tweets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Keep only ones with the domain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every morning @ 7\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Setup\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get latest tweets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract important data again\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Ask AI to summerize\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wrap everything together\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract data for email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wrap everything together\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Extract important data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine all activity for a company\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get meetings for today\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get attendees email domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare email template\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gmail\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Enrich attendee company\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wrap everything together\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare email template\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get recent LinkedIn posts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract important data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get attendees email domains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract important data again\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine all activity for a company\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Keep only ones with the domain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Enrich attendee company\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine all activity for a company\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Ask AI to summerize\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extract data for email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.set",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.googleCalendar",
      "n8n-nodes-base.set",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.clearbit",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.html",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.filter",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.openAi",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest"
    ],
    "trigger": null
  }
}