{
  "source": "0558_Manual_Stickynote_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"name\": \"TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)\",\n  \"nodes\": [\n    {\n      \"id\": \"56f102c4-5b84-4e30-955c-0ea1221c328f\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        480,\n        680\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f562819-ee42-42ad-b821-aff2cbebbc0f\",\n      \"name\": \"TOTP VALIDATION\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        920,\n        680\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"import hmac\\nimport hashlib\\nimport time\\nimport base64\\n\\ndef base32_decode(key):\\n    \\\"\\\"\\\"Decodes a base32 key into bytes\\\"\\\"\\\"\\n    key += '=' * (-len(key) % 8)  # Add necessary '=' for valid length\\n    return base64.b32decode(key.upper(), casefold=True)\\n\\ndef generate_totp(secret, interval=30, digits=6):\\n    \\\"\\\"\\\"Generates a TOTP code based on a secret key\\\"\\\"\\\"\\n    interval_count = int(time.time() // interval)\\n    interval_bytes = interval_count.to_bytes(8, byteorder='big')\\n\\n    hmac_hash = hmac.new(secret, interval_bytes, hashlib.sha1).digest()\\n    \\n    offset = hmac_hash[-1] & 0x0F\\n    binary_code = ((hmac_hash[offset] & 0x7F) << 24 |\\n                   (hmac_hash[offset + 1] & 0xFF) << 16 |\\n                   (hmac_hash[offset + 2] & 0xFF) << 8 |\\n                   (hmac_hash[offset + 3] & 0xFF))\\n    \\n    otp_code = binary_code % (10 ** digits)\\n    \\n    # Format with leading zeros if necessary\\n    otp_code_str = str(otp_code).zfill(digits)\\n    \\n    return otp_code_str\\n\\ndef verify_totp(secret, code, interval=30, digits=6):\\n    \\\"\\\"\\\"Checks whether the TOTP code is valid\\\"\\\"\\\"\\n    secret_bytes = base32_decode(secret)\\n    generated_code = generate_totp(secret_bytes, interval, digits)\\n    \\n    return generated_code == code\\n\\n# Example of use\\nsecret = _input.item.json.totp_secret_example  # Secret key base32 (example)\\ncode =  _input.item.json.code_to_verify_example # Code to check (example)\\n\\n# Return 1 if code is valid. Return 0 if invalid\\nif verify_totp(secret, code):\\n    return [{\\\"status\\\": 1}]\\nelse:\\n    return [{\\\"status\\\": 0}]\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9760b31c-5ba8-4001-9cbe-2be2ae58d58e\",\n      \"name\": \"IF CODE IS VALID\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1140,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"470cf368-daee-4136-b907-a3539765871d\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.status }}\",\n              \"rightValue\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"3a029863-8fd0-42ef-b8ff-9f7cdf6e8d94\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 883,\n        \"height\": 430,\n        \"content\": \"## TOTP Validation with Function Node\\n\\nThis template allows you to verify if a 6-digit TOTP code is valid using the corresponding TOTP secret. It can be used in an authentication system.\\n### Example usage:\\n- You retrieve the user's TOTP secret from a database, then you want to verify if the 2FA code provided by the user is valid.\\n\\n## Setup Guidelines\\n\\nYou only need the \\\"TOTP VALIDATION\\\" node.\\nYou will need to modify lines 39 and 40 of the \\\"TOTP VALIDATION\\\" node with the correct values for your specific context.\\n\\n## Testing the Template\\nYou can define a sample secret and code in the \\\"EXAMPLE FIELDS\\\" node below, then click \\\"Test Workflow\\\".\\nIf the code is valid for the provided secret, the flow will proceed to the \\\"true\\\" branch of the \\\"IF CODE IS VALID\\\" node. Otherwise, it will go to the \\\"false\\\" branch.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f660a50f-2c33-49bb-b975-8d51e9bf24ed\",\n      \"name\": \"EXAMPLE FIELDS\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        700,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"03a66bf9-1bf4-44c0-92e0-edd45929e467\",\n              \"name\": \"code_to_verify_example\",\n              \"type\": \"string\",\n              \"value\": \"516620\"\n            },\n            {\n              \"id\": \"7bb18b0a-1851-4f27-a91f-5f93b663cfd0\",\n              \"name\": \"totp_secret_example\",\n              \"type\": \"string\",\n              \"value\": \"CNSUKUMZLQJEZJ3\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"connections\": {\n    \"EXAMPLE FIELDS\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"TOTP VALIDATION\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"TOTP VALIDATION\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF CODE IS VALID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"EXAMPLE FIELDS\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.code",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}