{
  "source": "0492_HTTP_Respondtowebhook_Create_Webhook.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"73b64763-5e18-4ff1-bb52-ba25a08d3c3a\",\n      \"name\": \"If params correct\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        500,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"2e968b41-88f7-4b28-9837-af50ae130979\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"voice_id\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"ad961bc9-6db8-4cac-8c63-30930e8beca7\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"text\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"39079dec-54c5-458e-afa1-56ee5723f3a3\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        960,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"binary\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b6a344f4-28ac-41a7-8e6a-a2782a5d1c68\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        300,\n        200\n      ],\n      \"webhookId\": \"5acc6769-6c0f-42a8-a69c-b05e437e18a9\",\n      \"parameters\": {\n        \"path\": \"generate-voice\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a25dec72-152b-4457-a18f-9cbbd31840ec\",\n      \"name\": \"Generate voice\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        740,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.elevenlabs.io/v1/text-to-speech/{{ $json.body.voice_id }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"text\\\":  \\\"{{ $json.body.text }}\\\"\\n} \",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpCustomAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpCustomAuth\": {\n          \"id\": \"nhkU37chaiBU6X3j\",\n          \"name\": \"Custom Auth account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e862955e-76d9-4a24-9501-0d5eb8fbe778\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 806.0818150700699,\n        \"height\": 495.17470523089514,\n        \"content\": \"## Generate Text-to-Speech Using Elevenlabs via API\\nThis workflow provides an API endpoint to generate speech from text using [Elevenlabs.io](https://elevenlabs.io/), a popular text-to-speech service.\\n\\n### Step 1: Configure Custom Credentials in n8n\\nTo set up your credentials in n8n, create a new custom authentication entry with the following JSON structure:\\n```json\\n{\\n  \\\"headers\\\": {\\n    \\\"xi-api-key\\\": \\\"your-elevenlabs-api-key\\\"\\n  }\\n}\\n```\\nReplace `\\\"your-elevenlabs-api-key\\\"` with your actual Elevenlabs API key.\\n\\n### Step 2: Send a POST Request to the Webhook\\nSend a POST request to the workflow's webhook endpoint with these two parameters:\\n- `voice_id`: The ID of the voice from Elevenlabs that you want to use.\\n- `text`: The text you want to convert to speech.\\n\\nThis workflow has been a significant time-saver in my video production tasks. I hope it proves just as useful to you!\\n\\nHappy automating!  \\nThe n8Ninja\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"275ca523-8b43-4723-9dc4-f5dc1832fcd1\",\n      \"name\": \"Error\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        740,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"error\\\": \\\"Invalid inputs.\\\"\\n}\"\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If params correct\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate voice\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If params correct\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate voice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.if",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.respondToWebhook"
    ],
    "trigger": null
  }
}