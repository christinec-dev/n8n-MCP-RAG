{
  "source": "1603_Splitout_Manual_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"PpFVCrTiYoa35q1m\",\n  \"meta\": {\n    \"instanceId\": \"b9faf72fe0d7c3be94b3ebff0778790b50b135c336412d28fd4fca2cbbf8d1f5\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"90ac8845-342e-4fdb-ae09-cb9d169b4119\",\n      \"name\": \"When clicking â€˜Test workflowâ€™\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        160,\n        460\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7a2bfc41-1527-448d-a52c-794ca4c9e7ee\",\n      \"name\": \"ScrapingBee- Get page HTML\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2280,\n        1360\n      ],\n      \"parameters\": {\n        \"url\": \"https://app.scrapingbee.com/api/v1\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"api_key\",\n              \"value\": \"<your_scrapingbee_apikey>\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{$json.url}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"a0ab6dcb-ffad-40bf-8a22-f2e152e69b00\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2480,\n        880\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"[{\\n  \\\"product_title\\\":\\\"The title of the product\\\",\\n  \\\"product_price\\\":\\\"The price of the product\\\",\\n  \\\"product_brand\\\": \\\"The brand of the product\\\",\\n  \\\"promo\\\":\\\"true or false\\\",\\n  \\\"promo_percentage\\\":\\\"NUM %\\\"\\n}]\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"34f50603-a969-425d-8a1a-ec8031a5cdfd\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1800,\n        900\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-pro-latest\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2054612e-f3e1-4633-9c1a-0644ae07613c\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        2880,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"output\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1a59a962-f483-4a27-8686-607a7d375584\",\n      \"name\": \"Google Sheets - Get list of URLs\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        620,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"List of URLs\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"Google Sheets - Workflow Vision-Based Scraping\"\n        },\n        \"authentication\": \"serviceAccount\"\n      },\n      \"credentials\": {\n        \"googleApi\": {\n          \"id\": \"\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"e33defac-e5c4-4bf5-ae31-98cf6f1d2579\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        76.45348837209309,\n        -6.191860465116179\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 652.6453488372096,\n        \"content\": \"## Trigger\\nThe default trigger is **When clicking â€˜Test workflowâ€™**, meaning the workflow will **need to be triggered manually**. \\n\\nYou can replace this by selecting a **trigger of your choice**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9f56e57e-8505-4a7a-a531-f7df87a6ea9c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        -12.906976744186068\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 664.2441860465121,\n        \"content\": \"## Google Sheets - List of URLs\\n\\nThe Google Sheet will contain two sheets:  \\n- **List of URLs to** scrape  \\n- **Results** page, populated with the scraping results and AI-extracted data.\\n\\nHere is an **[example Google Sheet](https://docs.google.com/spreadsheets/d/10Gc7ooUeTBbOOE6bgdNe5vSKRkkcAamonsFSjFevkOE/)** you can use. The \\\"Results\\\" sheet is pre-configured for e-commerce website scraping. You can adapt it to your specific needs, but remember to adjust the `Structured Output Parser` node accordingly.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4497a81-6849-4c79-af45-40e518837e2e\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        880,\n        -15.959302325581348\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 667.2965116279074,\n        \"content\": \"## Set Fields\\n\\nThis node allows you to **define the fields** that will be sent to the **ScrapingBee HTTP Node** and the AI Agent. \\n\\nIn this template, **only one field** is pre-configured: **url**. You can customize it by adding additional fields as needed.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82dcdc23-3d71-4281-a3d0-fdbc27327dd0\",\n      \"name\": \"Set fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1040,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c53c5ed2-9c7b-4365-9953-790264c722ab\",\n              \"name\": \"url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ad06f56f-4a02-49d6-9fda-94cdcfadec3b\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1280,\n        -20.537790697674154\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 671.8750000000002,\n        \"content\": \"## ScrapingBee - Get Page Screenshot\\n\\nThis node uses ScrapingBee, a powerful scraping tool, to capture a screenshot of the desired URL.  \\nYou can [try ScrapingBee](https://www.scrapingbee.com/) and enjoy 1,000 free requests (non-affiliate link).  \\n\\nEnsure the `screenshot_full_page` parameter is set to *`true`* for a full-page screenshot. This is crucial for vision-based scraping with the AI Agent.  \\n\\nAlternatively, you can **choose to screenshot only a specific part of the page**. However, keep in mind that the **AI Agent will extract data only from the visible sectionâ€”it has vision**, but not a crystal ball ðŸ”®!\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"01cbc1eb-2910-49b1-89e6-d32d340e5273\",\n      \"name\": \"ScrapingBee - Get page screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1440,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"https://app.scrapingbee.com/api/v1\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"api_key\",\n              \"value\": \"<your_scrapingbee_apikey>\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            },\n            {\n              \"name\": \"screenshot_full_page\",\n              \"value\": \"true\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3e61d7cb-c2af-4275-b075-3dc14ed320b7\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1680,\n        -26.831395348837077\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1000.334302325581,\n        \"height\": 679.5058139534889,\n        \"content\": \"## Vision-Based Scraping AI Agent\\n\\nThis is the central node of the workflow, powered by an AI Agent with two key prompts:\\n\\n- **System Prompt**: Instructs the AI on how and what data to extract from the screenshot. You can customize this to suit your needs. It also includes fallback instructions to call a tool for retrieving the HTML page if data extraction from the screenshot fails.  \\n- **User Message**: Provides the page URL for context.\\n\\n### Sub-Nodes\\n\\n1. **Google Gemini Chat Model**  \\n   Chosen because tests show that **Gemini-1.5-Pro** outperforms GPT-4 and GPT-4-Vision in visual tasks. *Either my prompt wasnâ€™t optimized for GPT models, or GPT might need glasses ðŸ‘“*. \\n**Other multimodal LLMs havenâ€™t been tested yet**.\\n\\n2. **HTML-Based Scraping Tool**  \\n   A **fallback tool** the agent **uses if it cannot extract data directly from the screenshot**.\\n\\n3. **Structured Output Parser**  \\n   Formats the **extracted data into an easy-to-use structure**, ready to be added to the **results page in Google Sheets**.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9fe8ee54-755a-44f2-a2bf-a695e3754b3d\",\n      \"name\": \"HTML-based Scraping Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2160,\n        900\n      ],\n      \"parameters\": {\n        \"name\": \"HTMLScrapingTool\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"PpFVCrTiYoa35q1m\",\n          \"cachedResultName\": \"vb-scraping\"\n        },\n        \"description\": \"=Call this tool ONLY when you need to retrieve the HTML content of a webpage.\",\n        \"responsePropertyName\": \"data\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"12c4fd7e-b662-488a-b779-792cff5464e4\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1680,\n        720\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 305.625,\n        \"height\": 337.03488372093034,\n        \"content\": \"### Google Gemini Chat Model\\n\\nThe **default model is gemini-1.5-pro**. It offers excellent performance for this use case, but **itâ€™s not the most cost-effective optionâ€”use it judiciously**.\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86cf37d9-a4c1-42f4-a98e-ef2ca4410efd\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2020,\n        720\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 305.625,\n        \"height\": 337.03488372093034,\n        \"content\": \"### HTML-Based Scraping Tool\\n\\nThis tool is **invoked when the AI Agent requires the HTML** (*converted to Markdown*) to extract data because the **screenshot alone wasnâ€™t sufficient**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3dc3c83-ed18-4a58-bc36-440efe9462a2\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2360,\n        720\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 305.625,\n        \"height\": 337.03488372093034,\n        \"content\": \"### Structured Output Parser\\n\\nThis node **organizes the extracted data into an easy-to-use JSON format**.  \\n\\nIn this template, the JSON is **designed for an e-commerce webpage**. Customize it to fit your specific needs.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"939f0f2d-19c8-4447-9b25-accfcd5f6a16\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2740,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 671.8750000000002,\n        \"content\": \"## Split Out\\n\\nThis node **splits the array** created by the `Structured Output Parser` into **individual rows**, making them easy to append to the **subsequent Google Sheets node**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"71404369-d2f6-4ca5-ae87-47a51fabfa4a\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3200,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 671.8750000000002,\n        \"content\": \"## Google Sheets - Create Rows\\n\\nThis node **creates rows** in the **Results** sheet using the extracted data.  \\n\\nYou can use the **[example Google Sheet](https://docs.google.com/spreadsheets/d/10Gc7ooUeTBbOOE6bgdNe5vSKRkkcAamonsFSjFevkOE/)** as a template. However, ensure that the **columns in the Results sheet are aligned with the structure of the output** from the `Structured Output Parser node`.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"226520d1-2edb-4ade-9940-0bae461eb161\",\n      \"name\": \"Google Sheets - Create Rows\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        3340,\n        460\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"promo\": \"={{ $json.promo }}\",\n            \"category\": \"={{ $('Set fields').item.json.url }}\",\n            \"product_url\": \"={{ $json.product_title }}\",\n            \"product_brand\": \"={{ $json.product_brand }}\",\n            \"product_price\": \"={{ $json.product_price }}\",\n            \"promo_percent\": \"={{ $json.promo_percentage }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"category\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"category\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"product_url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"product_url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"product_price\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"product_price\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"product_brand\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"product_brand\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"promo\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"promo\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"promo_percent\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"promo_percent\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": []\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": 648398171,\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"Results\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1g81_39MJUlwnInX30ZuBtHUb-Y80WrYyF5lccaRtcu0\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"Google Sheets - Workflow Vision-Based Scraping\"\n        },\n        \"authentication\": \"serviceAccount\"\n      },\n      \"credentials\": {\n        \"googleApi\": {\n          \"id\": \"\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"2c142537-d8fe-4fc1-9758-6a3538c43fc0\",\n      \"name\": \"Vision-based Scraping Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2040,\n        460\n      ],\n      \"parameters\": {\n        \"text\": \"=Here is the screenshot you need to use to extract data about the page:\\n\\n{{ $json.url }}\",\n        \"options\": {\n          \"systemMessage\": \"=Extract the following details from the input screenshot:\\n\\n- Product Titles\\n- Product Prices\\n- Brands\\n- Promotional Information (e.g., if the product is on promo)\\n\\nStep 1: Image-Based Extraction\\nAnalyze the provided screenshot to identify and extract all the required details: product titles, prices, brands, and promotional information.\\nEnsure the extraction is thorough and validate the completeness of the information.\\nCross-check all products for missing or unclear details.\\nHighlight any limitations (e.g., text is unclear, partially cropped, or missing) in the extraction process.\\n\\nStep 2: HTML-Based Extraction (If Needed)\\nIf you determine that any required information is:\\n\\nIncomplete or missing (e.g., not all titles, prices, or brands could be retrieved).\\nAmbiguous or uncertain (e.g., unclear text or potential errors in OCR).\\nUnavailable due to the limitations of image processing (e.g., product links).\\n\\nThen:\\n\\nCall the HTML-based tool with the input URL to access the page content.\\nExtract the required details from the HTML to supplement or replace the image-based results.\\nCombine data from both sources (if applicable) to ensure the final result is comprehensive and accurate.\\n\\nAdditional Notes\\nAvoid redundant HTML tool usageâ€”confirm deficiencies in image-based extraction before proceeding.\\nFor products on promotion, explicitly label this status in the output.\\nReport extraction errors or potential ambiguities (e.g., text illegibility).\\n\\nIn your output, include all these fields as shown in the example below. If there is no promotion, set \\\"promo\\\" to false and \\\"promo_percent\\\" to 0.\\n\\njson\\nCopy code\\n[{\\n  \\\"product_title\\\": \\\"The title of the product\\\",\\n  \\\"product_price\\\": \\\"The price of the product\\\",\\n  \\\"product_brand\\\": \\\"The brand of the product\\\",\\n  \\\"promo\\\": true,\\n  \\\"promo_percent\\\": 25\\n}]\",\n          \"passthroughBinaryImages\": true\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"f4acf278-edec-4bb4-a7cb-1e3c32a6ef4a\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1360,\n        1160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 357.10392441860495,\n        \"content\": \"## HTML-Scraping Tool Trigger\\n\\nThis **node serves as the entry point for the HTML scraping tool.  \\n\\nIt is triggered by the **AI Agent only when it fails to extract data** from the screenshot. The **URL** is sent as a **parameter for the query**.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"79f7b4db-57f1-4004-88b3-51cfcfe9884e\",\n      \"name\": \"HTML-Scraping Tool\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        1480,\n        1360\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"94aa7169-30b5-49dd-864a-be2eabbf85d3\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1760,\n        1160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 357.10392441860495,\n        \"content\": \"## Set Fields - From AI Agent Query\\n\\nThis node sets the fields from the AI Agentâ€™s query.  \\n\\nIn this template, the only field configured is **url**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f2615921-d060-410b-aef4-cd484edb2897\",\n      \"name\": \"Set fields - from AI agent query\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1880,\n        1360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c53c5ed2-9c7b-4365-9953-790264c722ab\",\n              \"name\": \"url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"807e263a-97ce-4369-9ad0-8f973fc8dcc9\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2180,\n        1160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 357.10392441860495,\n        \"content\": \"## ScrapingBee - Get Page HTML\\n\\nThis node utilizes the ScrapingBee API to **retrieve the HTML of the webpage**.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1cd32b9d-b07e-4dbb-9418-a99019c9deae\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2600,\n        1160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 364.53488372093034,\n        \"height\": 357.10392441860495,\n        \"content\": \"## HTML to Markdown\\n\\nThis node **converts the HTML from the previous node** into Markdown format, **helping to save tokens**.  \\n\\nThe converted **Markdown is then automatically sent to the AI Agent** through this node.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3b9096d1-ab5a-48a8-90ee-465483881d95\",\n      \"name\": \"HTML to Markdown\",\n      \"type\": \"n8n-nodes-base.markdown\",\n      \"position\": [\n        2740,\n        1360\n      ],\n      \"parameters\": {\n        \"html\": \"={{ $json.data }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"966ad92a-ddda-4fb9-86ac-9c62f47dfc37\",\n      \"name\": \"Sticky Note14\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -880.9927663601949,\n        0\n      ],\n      \"parameters\": {\n        \"width\": 829.9937466197946,\n        \"height\": 646.0101744186061,\n        \"content\": \"# âœ¨ Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini\\n\\n## Important notes :\\n### Check legal regulations: \\nThis workflow involves scraping, so make sure to check the legal regulations around scraping in your country before getting started. Better safe than sorry!\\n\\n## Workflow description\\nThis workflow leverages a **vision-based AI Agent**, integrated with Google Sheets, ScrapingBee, and the Gemini-1.5-Pro model, to **extract structured data from webpages**. The AI Agent primarily **uses screenshots for data extraction** but switches to HTML scraping when necessary, ensuring high accuracy. \\n\\nKey features include:  \\n- **Google Sheets Integration**: Manage URLs to scrape and store structured results.  \\n- **ScrapingBee**: Capture full-page screenshots and retrieve HTML data for fallback extraction.  \\n- **AI-Powered Data Parsing**: Use Gemini-1.5-Pro for vision-based scraping and a Structured Output Parser to format extracted data into JSON.  \\n- **Token Efficiency**: HTML is converted to Markdown to optimize processing costs.\\n\\nThis template is designed for e-commerce scraping but can be customized for various use cases.  \\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"cf87b8bb-6218-4549-831f-02ff4be611eb\",\n  \"connections\": {\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Sheets - Create Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ScrapingBee - Get page screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML-Scraping Tool\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set fields - from AI agent query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Vision-based Scraping Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML-based Scraping Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Vision-based Scraping Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Vision-based Scraping Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ScrapingBee- Get page HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML to Markdown\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Vision-based Scraping Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Sheets - Get list of URLs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set fields - from AI agent query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ScrapingBee- Get page HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ScrapingBee - Get page screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Vision-based Scraping Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking â€˜Test workflowâ€™\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Sheets - Get list of URLs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.httpRequest",
      "@n8n/n8n-nodes-langchain.outputParserStructured",
      "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.toolWorkflow",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.googleSheets",
      "@n8n/n8n-nodes-langchain.agent",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.markdown",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}