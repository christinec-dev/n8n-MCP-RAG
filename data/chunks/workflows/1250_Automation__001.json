{
  "source": "1250_Automation.json",
  "index": 1,
  "content": "{\n  \"\\\"nodes\\\"\": \"[\",\n  \"\\\"id\\\"\": \"\\\"vBLHyjEnMK9EaWwQ\\\",\",\n  \"\\\"name\\\"\": \"\\\"Mark OpenAi \\\"\",\n  \"\\\"type\\\"\": \"\\\"main\\\",\",\n  \"\\\"position\\\"\": \"[\",\n  \"\\\"parameters\\\"\": \"[\",\n  \"\\\"options\\\"\": \"{},\",\n  \"\\\"credentials\\\"\": \"{\",\n  \"\\\"openAiApi\\\"\": \"{\",\n  \"\\\"typeVersion\\\"\": \"4.2\",\n  \"\\\"text\\\"\": \"\\\"={{ $('When chat message received').item.json.chatInput }}\\\",\",\n  \"\\\"agent\\\"\": \"\\\"openAiFunctionsAgent\\\",\",\n  \"\\\"maxIterations\\\"\": \"10,\",\n  \"\\\"systemMessage\\\"\": \"\\\"You are Airtable assistant. \\\\nYou need to process user's requests and run relevant tools for that. \\\\n\\\\nPlan and execute in right order runs of tools to get data for user's request.\\\\n\\\\nFeel free to ask questions before do actions - especially if you noticed some inconcistency in user requests that might be error/misspelling. \\\\n\\\\nIMPORTANT Always check right table and base ids before doing queries.\\\\n\\\\nIMPORTANT Use Code function to do aggregation functions that requires math like - count, sum, average and etc. Aggegation function could be recognized by words like \\\\\\\"how many\\\\\\\",\\\\\\\"count\\\\\\\",\\\\\\\"what number\\\\\\\" and etc.\\\\nUse Code function to generate graph and images.\\\\n\\\\nIMPORTANT If search with filter failed - try to fetch records without filter\\\\n\\\\nIMPORTANT Ask yourself before answering - am I did everything is possible? Is the answer is right? Is the answer related to user request?\\\\n\\\\nIMPORTANT Always return in response name of Base and Table where records from. \\\"\",\n  \"\\\"promptType\\\"\": \"\\\"define\\\"\",\n  \"\\\"height\\\"\": \"346,\",\n  \"\\\"content\\\"\": \"\\\"### Set up steps\\\\n\\\\n1. **Separate workflows**:\\\\n\\\\t- Create additional workflow and move there Workflow 2.\\\\n\\\\n2. **Replace credentials**:\\\\n\\\\t- Replace connections and credentials in all nodes.\\\\n\\\\n3. **Start chat**:\\\\n\\\\t- Ask questions and don't forget to mention required base name.\\\"\",\n  \"\\\"sessionKey\\\"\": \"\\\"={{ $('When chat message received').item.json.sessionId }}\\\",\",\n  \"\\\"sessionIdType\\\"\": \"\\\"customKey\\\"\",\n  \"\\\"webhookId\\\"\": \"\\\"abf9ab75-eaca-4b91-b3ba-c0f83d3daba4\\\",\",\n  \"\\\"assignments\\\"\": \"[\",\n  \"\\\"value\\\"\": \"\\\"assistants=v2\\\"\",\n  \"\\\"rules\\\"\": \"{\",\n  \"\\\"values\\\"\": \"[\",\n  \"\\\"outputKey\\\"\": \"\\\"code\\\",\",\n  \"\\\"conditions\\\"\": \"[\",\n  \"\\\"version\\\"\": \"2,\",\n  \"\\\"leftValue\\\"\": \"\\\"={{ $('Execute Workflow Trigger').item.json.query.filter_desc }}\\\",\",\n  \"\\\"caseSensitive\\\"\": \"true,\",\n  \"\\\"typeValidation\\\"\": \"\\\"strict\\\"\",\n  \"\\\"combinator\\\"\": \"\\\"and\\\",\",\n  \"\\\"operator\\\"\": \"{\",\n  \"\\\"operation\\\"\": \"\\\"notExists\\\",\",\n  \"\\\"rightValue\\\"\": \"\\\"\\\"\",\n  \"\\\"renameOutput\\\"\": \"true\",\n  \"\\\"aggregate\\\"\": \"\\\"aggregateAllItemData\\\"\",\n  \"\\\"mergeLists\\\"\": \"true\",\n  \"\\\"fieldsToAggregate\\\"\": \"{\",\n  \"\\\"fieldToAggregate\\\"\": \"\\\"records\\\"\",\n  \"\\\"singleValue\\\"\": \"true\",\n  \"\\\"includeOtherFields\\\"\": \"true\",\n  \"\\\"width\\\"\": \"280,\",\n  \"\\\"color\\\"\": \"7,\",\n  \"\\\"fields\\\"\": \"{\",\n  \"\\\"stringValue\\\"\": \"\\\"get_base_tables_schema\\\"\",\n  \"\\\"schemaType\\\"\": \"\\\"manual\\\",\",\n  \"\\\"workflowId\\\"\": \"{\",\n  \"\\\"__rl\\\"\": \"true,\",\n  \"\\\"mode\\\"\": \"\\\"id\\\",\",\n  \"\\\"cachedResultName\\\"\": \"\\\"Airtable Agent Tools\\\"\",\n  \"\\\"description\\\"\": \"\\\"Fetches the schema of tables in a specific base by id.\\\\n\\\\nInput:\\\\nbase_id: appHwXgLVrBujox4J\\\\n\\\\nOutput:\\\\ntable 1: field 1 - type string, fields 2 - type number\\\",\",\n  \"\\\"inputSchema\\\"\": \"\\\"{\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n \\\\\\\"properties\\\\\\\": {\\\\n \\\\\\\"base_id\\\\\\\": {\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n \\\\\\\"description\\\\\\\": \\\\\\\"ID of the base to retrieve the schema for. Format - appHwXgLVrBujox4J\\\\\\\"\\\\n }\\\\n },\\\\n \\\\\\\"required\\\\\\\": [\\\\\\\"base_id\\\\\\\"]\\\\n}\\\",\",\n  \"\\\"specifyInputSchema\\\"\": \"true\",\n  \"\\\"jsCode\\\"\": \"\\\"// Example: convert the incoming query to uppercase and return it\\\\n\\\\nreturn `https://api.mapbox.com/styles/v1/mapbox/streets-v12/static/${query.markers}/-96.9749,41.8219,3.31,0/800x500?before_layer=admin-0-boundary&access_token=<your_public_key>`;\\\",\",\n  \"\\\"resource\\\"\": \"\\\"base\\\",\",\n  \"\\\"airtableTokenApi\\\"\": \"{\",\n  \"\\\"base\\\"\": \"{\",\n  \"\\\"onError\\\"\": \"\\\"continueRegularOutput\\\",\",\n  \"\\\"url\\\"\": \"\\\"https://api.openai.com/v1/threads\\\",\",\n  \"\\\"method\\\"\": \"\\\"POST\\\",\",\n  \"\\\"pagination\\\"\": \"{\",\n  \"\\\"completeExpression\\\"\": \"\\\"={{ $response.body.offset==undefined}}\\\",\",\n  \"\\\"paginationCompleteWhen\\\"\": \"\\\"other\\\"\",\n  \"\\\"jsonBody\\\"\": \"\\\"={\\\\n \\\\\\\"model\\\\\\\": \\\\\\\"gpt-4o-mini\\\\\\\",\\\\n \\\\\\\"messages\\\\\\\": [\\\\n {\\\\n \\\\\\\"role\\\\\\\": \\\\\\\"system\\\\\\\",\\\\n \\\\\\\"content\\\\\\\": {{ JSON.stringify($('Set schema and prompt').item.json.prompt) }}\\\\n },\\\\n {\\\\n \\\\\\\"role\\\\\\\": \\\\\\\"user\\\\\\\",\\\\n \\\\\\\"content\\\\\\\": \\\\\\\"{{ $('Execute Workflow Trigger').item.json.query.filter_desc }}\\\\\\\"\\\\n }],\\\\n \\\\\\\"response_format\\\\\\\":{ \\\\\\\"type\\\\\\\": \\\\\\\"json_schema\\\\\\\", \\\\\\\"json_schema\\\\\\\": {{ $('Set schema and prompt').item.json.schema }}\\\\n\\\\n }\\\\n }\\\",\",\n  \"\\\"sendBody\\\"\": \"true,\",\n  \"\\\"specifyBody\\\"\": \"\\\"json\\\",\",\n  \"\\\"authentication\\\"\": \"\\\"predefinedCredentialType\\\",\",\n  \"\\\"nodeCredentialType\\\"\": \"\\\"openAiApi\\\"\",\n  \"\\\"httpQueryAuth\\\"\": \"{\",\n  \"\\\"contentType\\\"\": \"\\\"multipart-form-data\\\",\",\n  \"\\\"bodyParameters\\\"\": \"{\",\n  \"\\\"parameterType\\\"\": \"\\\"formBinaryData\\\",\",\n  \"\\\"inputDataFieldName\\\"\": \"\\\"data\\\"\",\n  \"\\\"sendHeaders\\\"\": \"true,\",\n  \"\\\"headerParameters\\\"\": \"{\",\n  \"\\\"pinData\\\"\": \"{},\",\n  \"\\\"connections\\\"\": \"{\",\n  \"\\\"If1\\\"\": \"{\",\n  \"\\\"main\\\"\": \"[\",\n  \"\\\"node\\\"\": \"\\\"Merge\\\",\",\n  \"\\\"index\\\"\": \"1\",\n  \"\\\"Merge\\\"\": \"{\",\n  \"\\\"Switch\\\"\": \"{\",\n  \"\\\"Aggregate\\\"\": \"{\",\n  \"\\\"Get Bases\\\"\": \"{\",\n  \"\\\"Aggregate1\\\"\": \"{\",\n  \"\\\"Aggregate2\\\"\": \"{\",\n  \"\\\"Search records\\\"\": \"{\",\n  \"\\\"ai_tool\\\"\": \"[\",\n  \"\\\"Get base schema\\\"\": \"{\",\n  \"\\\"Create map image\\\"\": \"{\",\n  \"\\\"Get list of bases\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model\\\"\": \"{\",\n  \"\\\"ai_languageModel\\\"\": \"[\",\n  \"\\\"Window Buffer Memory\\\"\": \"{\",\n  \"\\\"ai_memory\\\"\": \"[\",\n  \"\\\"OpenAI - Get messages\\\"\": \"{\",\n  \"\\\"OpenAI - Send message\\\"\": \"{\",\n  \"\\\"Set schema and prompt\\\"\": \"{\",\n  \"\\\"Get Base/Tables schema\\\"\": \"{\",\n  \"\\\"OpenAI - Create thread\\\"\": \"{\",\n  \"\\\"OpenAI - Download File\\\"\": \"{\",\n  \"\\\"OpenAI - Run assistant\\\"\": \"{\",\n  \"\\\"Process data with code\\\"\": \"{\",\n  \"\\\"Upload file to get link\\\"\": \"{\",\n  \"\\\"Execute Workflow Trigger\\\"\": \"{\",\n  \"\\\"Airtable - Search records\\\"\": \"{\",\n  \"\\\"When chat message received\\\"\": \"{\",\n  \"\\\"If filter description exists\\\"\": \"{\",\n  \"\\\"OpenAI - Generate search filter\\\"\": \"{\"\n}",
  "metadata": {
    "node_types": [],
    "trigger": null
  }
}