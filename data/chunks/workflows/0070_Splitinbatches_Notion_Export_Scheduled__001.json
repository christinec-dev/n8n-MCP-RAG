{
  "source": "0070_Splitinbatches_Notion_Export_Scheduled.json",
  "index": 1,
  "content": "{\n  \"id\": 115,\n  \"name\": \"Archive empty pages in Notion Database\",\n  \"nodes\": [\n    {\n      \"name\": \"Get All Databases\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        240,\n        300\n      ],\n      \"parameters\": {\n        \"resource\": \"database\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"36\",\n          \"name\": \"Notion account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Get All Database Pages\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        420,\n        300\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"databaseId\": \"={{$json[\\\"id\\\"]}}\"\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"36\",\n          \"name\": \"Notion account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Get Page Blocks\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        1180,\n        280\n      ],\n      \"parameters\": {\n        \"blockId\": \"={{$json[\\\"id\\\"]}}\",\n        \"resource\": \"block\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"36\",\n          \"name\": \"Notion account\"\n        }\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"Process Blocks\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1360,\n        280\n      ],\n      \"parameters\": {\n        \"functionCode\": \"let returnData = {\\n  json: {\\n    toDelete: false,\\n    pageID: $node[\\\"SplitInBatches\\\"].json[\\\"id\\\"],\\n  }\\n};\\n\\nif (!items[0].json.id) {\\n  returnData.json.toDelete = true;\\n  return [returnData];\\n}\\n\\nfor (item of items) {\\n  \\n  let toDelete = false;\\n\\n  let type = item.json.type;\\n  let data = item.json[type];\\n\\n  if (!toDelete) {\\n    if (data.text.length == 0) {\\n      toDelete = true;\\n    } else {\\n      returnData.json.toDelete = false;\\n      break;\\n    }\\n  }\\n\\n  returnData.json.toDelete = toDelete;\\n}\\n\\nreturn [returnData];\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SplitInBatches\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1000,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Check for empty properties\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        600,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"for (item of items) {\\n\\n  let toDelete = false;\\n  for (const key in item.json.properties) {\\n    let type = item.json.properties[key].type;\\n    let data = item.json.properties[key][type];\\n    \\n    if (!data || data.length == 0) {\\n      toDelete = true;\\n    } else {\\n      toDelete = false;\\n      break;\\n    }\\n  }\\n\\n  item.json.toDelete = toDelete;\\n}\\n\\nreturn items;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Archive Page\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        1760,\n        260\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$json[\\\"pageID\\\"]}}\",\n        \"operation\": \"archive\"\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"36\",\n          \"name\": \"Notion account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"If toDelete\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1560,\n        280\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{$json[\\\"toDelete\\\"]}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"If Empty Properties\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        760,\n        300\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{$json[\\\"toDelete\\\"]}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Every day @ 2am\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        80,\n        300\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"hour\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"If toDelete\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Archive Page\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Blocks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If toDelete\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SplitInBatches\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Page Blocks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every day @ 2am\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Databases\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Page Blocks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process Blocks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Databases\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Database Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Empty Properties\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Database Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check for empty properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for empty properties\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Empty Properties\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.function",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.function",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.cron"
    ],
    "trigger": null
  }
}