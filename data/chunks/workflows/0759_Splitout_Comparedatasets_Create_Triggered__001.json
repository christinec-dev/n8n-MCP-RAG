{
  "source": "0759_Splitout_Comparedatasets_Create_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"25fb4302-853a-421d-8e4f-4a18d723c4a0\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"disabled\": true,\n      \"position\": [\n        -860,\n        380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"acb8e29a-75b8-4ccb-aca8-20d5a7053334\",\n      \"name\": \"Gong\",\n      \"type\": \"n8n-nodes-base.gong\",\n      \"disabled\": true,\n      \"position\": [\n        -440,\n        120\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"toDateTime\": \"={{ $now.toISO() }}\",\n          \"fromDateTime\": \"={{ $now.minus({ days: 2 }).toISO() }}\"\n        },\n        \"options\": {},\n        \"returnAll\": true,\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"gongApi\": {\n          \"id\": \"EchfvOC4rjw8MUkr\",\n          \"name\": \"Liam Gong Cred\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"930a7fc9-64a1-4966-be0d-c58132b735e5\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -700,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1080,\n        \"height\": 920,\n        \"content\": \"## Get Gong Calls and Supporting Data\\nBesides the phone calls, integration and competitor data is extracted to supplement the AI prompt with accurate data to compare against mispronunciations. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f21ae8cc-eed1-4d31-8b1f-cc731e3dc642\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        400,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 880,\n        \"height\": 920,\n        \"content\": \"## Remove Duplicates from Queue\\nChecks notion for already processed calls and removes them from the processing queue ensuring data is not duplicated. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d796312a-2a7f-429f-8550-d4af6d81a26d\",\n      \"name\": \"Transcript Processor\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2200,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"7BAQDjnHQVYO1SWG\",\n          \"cachedResultName\": \"Transcript Processor Demo\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b381f944-d865-450e-a24d-31d394a01b36\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1820,\n        420\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 440,\n        \"content\": \"## Generate Clean Transcript \\nAllows for reduced prompting in the OpenAI node. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7a87e6a0-0009-4776-bf2e-bea68702c808\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1820,\n        -40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 440,\n        \"content\": \"## Pass Call Transcripts to Call Processor\\nThe OpenAI node handles this process and outputs in structured JSON.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c3b5280-c5e1-49d1-9651-e3fdd45978f7\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        -60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 500,\n        \"height\": 920,\n        \"content\": \"## Loop through all calls to get enrichment\\nAllows for easier processing due to complexity \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ce942178-c93e-490a-9b4e-0798f8c5c742\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1080,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 360,\n        \"height\": 1200,\n        \"content\": \"![Callforge](https://uploads.n8n.io/templates/callforgeshadow.png)\\n## CallForge - The AI Gong Sales Call Processor\\nCallForge allows you to extract important information for different departments from your Sales Gong Calls. \\n\\n### Call PreProcessor\\nThis workflow preps the calls to pass into the call processor. It also pulls data from the product in order to enrich the AI Prompt to catch typos in the Gong call transcript. It then cleans up the transcript into a single string and then sends it to the call processor.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"41f3d049-e25b-453a-bf98-501af7f177d0\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -860,\n        580\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"02265963-ab06-4bf5-8b0b-5299cd3330c9\",\n      \"name\": \"Call Aggregator\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        -100,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"calls\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"044e1b65-059c-4084-b85a-e10e6149be34\",\n      \"name\": \"Integration Aggregator\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        -240,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"fieldToAggregate\": \"Google Sheets\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"31df099f-45ec-4dff-b968-a90e7eaa67b5\",\n      \"name\": \"Get Integrations\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -460,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": 1859794756,\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1DKrLntdoNScMey5Bb4ggSpS8NFHlYN3kuTJQbrbJU7I/edit#gid=1859794756\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1DKrLntdoNScMey5Bb4ggSpS8NFHlYN3kuTJQbrbJU7I\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1DKrLntdoNScMey5Bb4ggSpS8NFHlYN3kuTJQbrbJU7I/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Most Popular Node Combos\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"4ZBfVX71VUd6pRy3\",\n          \"name\": \"Google Sheets Angel Access\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"42a8299e-d2e4-48a9-bba9-1c5e419d8c0c\",\n      \"name\": \"Comma Separate Integrations\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -20,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"39dfde65-e5e0-46d8-8596-af7ea31fcd3b\",\n              \"name\": \"integrations\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json[\\\"Google Sheets\\\"].join() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4226f79a-8b28-46d7-8b3b-972ef41d9535\",\n      \"name\": \"Comma separate competitors\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -20,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c419af9b-f161-4aac-863f-3a450aaf759f\",\n              \"name\": \"competitors\",\n              \"type\": \"string\",\n              \"value\": \"={{ $jmespath($json.properties['Competitor vs.'].select.options, '[].name').join() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"cce3fab9-63fb-49de-8e3f-4fb7956d0b80\",\n      \"name\": \"Get list of Competitors\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        -460,\n        580\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"resource\": \"database\",\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"2cb8596f-2029-4d15-bf56-7001652f6fcf\",\n          \"cachedResultUrl\": \"https://www.notion.so/2cb8596f20294d15bf567001652f6fcf\",\n          \"cachedResultName\": \"n8n vs.\"\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"80\",\n          \"name\": \"Notion david-internal\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 2.2,\n      \"waitBetweenTries\": 3000\n    },\n    {\n      \"id\": \"05e82483-ed91-4733-a8a7-621d8cf6f3f1\",\n      \"name\": \"Merge 3 objects into one\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        260,\n        380\n      ],\n      \"parameters\": {\n        \"numberInputs\": 3\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"f01f839a-b0b5-4368-8cd3-3466f3cd44a4\",\n      \"name\": \"Aggregate Call Data\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        560,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"calldata\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c89b9deb-7f52-4d0d-8cdf-ce1b2a1771d2\",\n      \"name\": \"Split Out Call Data and Competitors\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        760,\n        240\n      ],\n      \"parameters\": {\n        \"include\": \"selectedOtherFields\",\n        \"options\": {},\n        \"fieldToSplitOut\": \"calldata[0].calls\",\n        \"fieldsToInclude\": \"calldata[1].integrations, , calldata[2].competitors\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5c90fd2-03f4-425c-9a49-b26887705c6c\",\n      \"name\": \"Reduce down to 1 object\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        480,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3835aeb8-589c-49b5-995a-2bf0bc0698a8\",\n      \"name\": \"Get Previous Phone Calls\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        700,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1a85b6e0-c94f-81a3-aa21-e3ccf8296d72\",\n          \"cachedResultUrl\": \"https://www.notion.so/1a85b6e0c94f81a3aa21e3ccf8296d72\",\n          \"cachedResultName\": \"Sales Call Summaries Demo\"\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": {\n          \"id\": \"2B3YIiD4FMsF9Rjn\",\n          \"name\": \"Angelbot Notion\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 2.2,\n      \"waitBetweenTries\": 3000\n    },\n    {\n      \"id\": \"9b7d60bd-d08a-4529-aefb-c89f277fcd8f\",\n      \"name\": \"Isolate Only Call IDs\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        900,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"328e6ac8-88f3-4c2f-b8e8-d4a0756efd24\",\n              \"name\": \"Call ID\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.property_gong_call_id ? $json.property_gong_call_id : \\\"none\\\" }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3eb7613c-2eaa-430a-9f67-5fc486b84ff0\",\n      \"name\": \"Only Process New Calls\",\n      \"type\": \"n8n-nodes-base.compareDatasets\",\n      \"position\": [\n        1120,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resolve\": \"preferInput1\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"['calldata[0].calls'].id\",\n              \"field2\": \"Call ID\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"5e69b2a1-eb6a-4bb4-a126-0605f60ff95b\",\n      \"name\": \"Loop Over Calls\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1500,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"6b170ccb-d492-4e7e-9aeb-13c769d36040\",\n      \"name\": \"Process All Call Transcripts\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2200,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"cg4Eo7yZlhWkqHCB\",\n          \"cachedResultName\": \"Call Processor Demo\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3107c6d8-0c8c-4dad-bcbc-c897b0be45b9\",\n      \"name\": \"Receive all Transcripts\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1920,\n        140\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Gong\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Call Aggregator\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call Aggregator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge 3 objects into one\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Calls\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Receive all Transcripts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Transcript Processor\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Integrations\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Integration Aggregator\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Call Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Call Data and Competitors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Transcript Processor\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Calls\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Isolate Only Call IDs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Only Process New Calls\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Integration Aggregator\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Comma Separate Integrations\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Only Process New Calls\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Calls\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get list of Competitors\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Comma separate competitors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive all Transcripts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process All Call Transcripts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Reduce down to 1 object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Previous Phone Calls\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gong\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get list of Competitors\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get Integrations\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Previous Phone Calls\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Isolate Only Call IDs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge 3 objects into one\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate Call Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Reduce down to 1 object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Comma separate competitors\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge 3 objects into one\",\n            \"type\": \"main\",\n            \"index\": 2\n          }\n        ]\n      ]\n    },\n    \"Comma Separate Integrations\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge 3 objects into one\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gong\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get Integrations\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get list of Competitors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Call Data and Competitors\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Only Process New Calls\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.gong",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflow",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.executeWorkflowTrigger",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.googleSheets",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.set",
      "n8n-nodes-base.compareDatasets",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.executeWorkflow",
      "n8n-nodes-base.noOp"
    ],
    "trigger": "execute workflow trigger"
  }
}