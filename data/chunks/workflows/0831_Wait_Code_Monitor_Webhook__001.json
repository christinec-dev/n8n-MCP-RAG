{
  "source": "0831_Wait_Code_Monitor_Webhook.json",
  "index": 1,
  "content": "{\n  \"nodes\": [\n    {\n      \"id\": \"ffe22db7-06b9-4efe-ab35-758e420dbe57\",\n      \"name\": \"END\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        -2880,\n        540\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9480feb6-e12a-4b59-998e-bdc7b119087a\",\n      \"name\": \"Workflow 1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2620,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"54492842-137b-48d6-851a-1ce6cc751612\",\n      \"name\": \"Workflow 2\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2620,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"83bbda2c-112b-4ed0-9ccd-c7a5c840100d\",\n      \"name\": \"Workflow 3\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2620,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"74d889d9-5215-495b-8e60-e1c78d79ae8c\",\n      \"name\": \"Incoming Webhook Data\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -4760,\n        220\n      ],\n      \"webhookId\": \"94d08900-4816-4c74-962a-aacff5077d5d\",\n      \"parameters\": {\n        \"path\": \"94d08900-4816-4c74-962a-aacff5077d5d\",\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"cb5e3e72-6678-4efb-8301-f149014444d2\",\n      \"name\": \"Fetch Webhook Data & Declare lockValue\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -4520,\n        220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Parse the Slack payload\\nconst payload = JSON.parse($('Incoming Webhook Data').first().json[\\\"body\\\"][\\\"payload\\\"]);\\n\\n// Extract button action details\\nconst var1 = payload.var1;\\nconst var2 = payload.var2;\\nconst var3 = payload.var3;\\n\\n// Log or return the details\\nreturn {\\n    var1 : var1,\\n    var2: var2,\\n    var3: var3,\\n    lockValue : `${var1}-${var2}-${var3}`\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e118f753-945b-4951-95da-394732fc636c\",\n      \"name\": \"Check Redis Lock\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -4220,\n        220\n      ],\n      \"parameters\": {\n        \"key\": \"xyz-lock\",\n        \"options\": {},\n        \"operation\": \"get\",\n        \"propertyName\": \"Element\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"o0RxOKCtencIaop1\",\n          \"name\": \"Geoffrey Redis\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c1488bae-cb82-48ce-94cd-5359d7d10b04\",\n      \"name\": \"Acquire Redis Lock\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -3520,\n        200\n      ],\n      \"parameters\": {\n        \"key\": \"xyz-lock\",\n        \"ttl\": 180,\n        \"value\": \"={{ $('Fetch Webhook Data & Declare lockValue').item.json.lookupVariable }}\",\n        \"expire\": true,\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"o0RxOKCtencIaop1\",\n          \"name\": \"Geoffrey Redis\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0fe5e1d8-f1e4-40e0-a3a4-4c00bbf2b50b\",\n      \"name\": \"redisLock existence boolean\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -4020,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"905501b4-718c-44fb-b2a5-a8eaf8605511\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.Element }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"3c66fab5-2c2a-4bba-8ba1-ed85e57cd42d\",\n      \"name\": \"redisLock acquired booleans\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -3800,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6c071e68-a15a-4da8-b962-fe173b1eb145\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.Element }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"787d1c86-1a66-40ea-b8b6-29f50a48737c\",\n      \"name\": \"Poll for lock\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -3520,\n        420\n      ],\n      \"webhookId\": \"615b4c18-2c29-418c-a2bf-302ff24e5c65\",\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f5b88169-e97b-4359-890e-969dbdc6d829\",\n      \"name\": \"duplicateWebhook boolean\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -3200,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08500e34-cc7f-4005-87bd-f7250dc076fe\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $('Fetch Webhook Data & Declare lockValue').item.json.lookupVariable }}\",\n              \"rightValue\": \"={{ $input.first().json.Element }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"db4e4149-7970-402c-a3d7-2cfe47b6a5b7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -4760,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 480,\n        \"height\": 220,\n        \"content\": \"#### ðŸ”’ This workflow demonstrates Redis-based locking to prevent concurrent execution of workflows.\\n\\n**Steps:**\\n+ Try to acquire a lock via Redis\\n+ If successful, execute workflow\\n+ If duplicate request; ignore request\\n+ Release the lock after completion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"879b7ab5-402b-4ea8-977b-64d29cd9bb39\",\n      \"name\": \"Discard Redis Lock\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -2320,\n        200\n      ],\n      \"parameters\": {\n        \"key\": \"n8n-rca-lock\",\n        \"operation\": \"delete\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"o0RxOKCtencIaop1\",\n          \"name\": \"Geoffrey Redis\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"494030d6-e731-4f4f-9193-7b46f2d470d0\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3580,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 80,\n        \"content\": \"Attempts to acquire a lock using Redis by setting a key with expiration.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a643b45e-2067-4c42-8c1c-365b3fea911a\",\n      \"name\": \"Workflow Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -2880,\n        200\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"1\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2761039b-e76c-4606-9aaf-48a569942ab7\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"2\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"ef07c62f-bd3f-4f54-85b9-9dbf64915f2c\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"3\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2dfc15de-bf33-4c25-932f-dae16758e2e6\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"5531d4c3-158c-4f98-b6fa-9ef9a85eef71\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2940,\n        680\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"height\": 80,\n        \"content\": \"Skips execution when duplicate request is received.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0a159f03-3ecc-4010-ab63-cc24df90df31\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2320,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"height\": 80,\n        \"content\": \"Deletes the Redis lock key to release the lock.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Workflow 1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Discard Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Workflow 2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Discard Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Workflow 3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Discard Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Poll for lock\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"duplicateWebhook boolean\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Workflow Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Workflow 1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Workflow 2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Workflow 3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Redis Lock\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"redisLock existence boolean\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Acquire Redis Lock\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Workflow Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Incoming Webhook Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fetch Webhook Data & Declare lockValue\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"duplicateWebhook boolean\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"END\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Check Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"redisLock acquired booleans\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Acquire Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Poll for lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"redisLock existence boolean\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Acquire Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"redisLock acquired booleans\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fetch Webhook Data & Declare lockValue\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Redis Lock\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.code",
      "n8n-nodes-base.redis",
      "n8n-nodes-base.redis",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.wait",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.redis",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}