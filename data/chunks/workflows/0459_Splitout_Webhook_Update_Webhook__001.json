{
  "source": "0459_Splitout_Webhook_Update_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"2a5a96c9-926c-447d-8244-db760e48a45f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -180,\n        -140\n      ],\n      \"parameters\": {\n        \"content\": \"## Edit your own prompt ⬇️\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c3a6b0b-2771-441d-8cb2-e17c07a92156\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1440,\n        -100\n      ],\n      \"parameters\": {\n        \"content\": \"## Filter comments and customize your trigger words ⬇️\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f42b776-cc24-486c-889f-7c09522503ed\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1180,\n        -120\n      ],\n      \"parameters\": {\n        \"content\": \"## Replace your gitlab URL and token ⬇️\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b8859219-ce90-4940-8d9e-338c742def5e\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        -140\n      ],\n      \"parameters\": {\n        \"content\": \"## Replace your gitlab URL and token ⬇️\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6be296f3-bd61-4644-825f-d96d591f229e\",\n      \"name\": \"Need Review\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1440,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"617eb2c5-dd4b-4e28-b533-0c32ea6ca961\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.body.object_attributes.note }}\",\n              \"rightValue\": \"+0\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"fe59eeab-03a1-4b36-97f2-bf04bf6e4b8d\",\n      \"name\": \"Get Changes\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1180,\n        80\n      ],\n      \"parameters\": {\n        \"url\": \"=https://gitlab.com/api/v4/projects/{{ $json[\\\"body\\\"][\\\"project_id\\\"] }}/merge_requests/{{ $json[\\\"body\\\"][\\\"merge_request\\\"][\\\"iid\\\"] }}/changes\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"PRIVATE-TOKEN\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4fe2800c-1eb5-44c6-93bb-25285a015b1d\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -1000,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"changes\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1838ffe7-a846-473b-9716-2714d527c727\",\n      \"name\": \"Skip File Changes\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -820,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c6e1430b-84a7-47ce-8fe9-7b94da0f2d31\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.renamed_file }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"bf6e9eb9-d72d-459c-a722-9614bab8842c\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.deleted_file }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"501623a9-9515-4034-bb13-a5a6a4f924eb\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"startsWith\"\n              },\n              \"leftValue\": \"={{ $json.diff }}\",\n              \"rightValue\": \"@@\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6215ecd2-55ad-4652-8c1f-f08713fdc237\",\n      \"name\": \"Parse Last Diff Line\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -560,\n        -120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const parseLastDiff = (gitDiff) => {\\n  gitDiff = gitDiff.replace(/\\\\n\\\\\\\\ No newline at end of file/, '')\\n  \\n  const diffList = gitDiff.trimEnd().split('\\\\n').reverse();\\n  const lastLineFirstChar = diffList?.[0]?.[0];\\n  const lastDiff =\\n    diffList.find((item) => {\\n      return /^@@ \\\\-\\\\d+,\\\\d+ \\\\+\\\\d+,\\\\d+ @@/g.test(item);\\n    }) || '';\\n\\n  const [lastOldLineCount, lastNewLineCount] = lastDiff\\n    .replace(/@@ \\\\-(\\\\d+),(\\\\d+) \\\\+(\\\\d+),(\\\\d+) @@.*/g, ($0, $1, $2, $3, $4) => {\\n      return `${+$1 + +$2},${+$3 + +$4}`;\\n    })\\n    .split(',');\\n  \\n  if (!/^\\\\d+$/.test(lastOldLineCount) || !/^\\\\d+$/.test(lastNewLineCount)) {\\n    return {\\n      lastOldLine: -1,\\n      lastNewLine: -1,\\n      gitDiff,\\n    };\\n  }\\n\\n\\n  const lastOldLine = lastLineFirstChar === '+' ? null : (parseInt(lastOldLineCount) || 0) - 1;\\n  const lastNewLine = lastLineFirstChar === '-' ? null : (parseInt(lastNewLineCount) || 0) - 1;\\n\\n  return {\\n    lastOldLine,\\n    lastNewLine,\\n    gitDiff,\\n  };\\n};\\n\\nreturn parseLastDiff($input.item.json.diff)\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bb3d6be0-7e85-4c2e-840a-090a36b48236\",\n      \"name\": \"Basic LLM Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        -180,\n        60\n      ],\n      \"parameters\": {\n        \"text\": \"=File path：{{ $('Skip File Changes').item.json.new_path }}\\n\\n```Original code\\n {{ $json.originalCode }}\\n```\\nchange to\\n```New code\\n {{ $json.newCode }}\\n```\\nPlease review the code changes in this section:\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"# Overview:| You are a senior programming expert Bot, responsible for reviewing code changes and providing review recommendations. At the beginning of the suggestion, it is necessary to clearly make a decision to \\\"reject\\\" or \\\"accept\\\" the code change, and rate the change in the format \\\"Change Score: Actual Score\\\", with a score range of 0-100 points. Then, point out the existing problems in concise language and a stern tone. If you feel it is necessary, you can directly provide the modified content. Your review proposal must use rigorous Markdown format.\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"f3a6e8c6-eda1-4af1-bdd5-f3b56ef8c23b\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -180,\n        220\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"796b0d0f-320f-43ff-943a-0d15b73878c7\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1680,\n        100\n      ],\n      \"webhookId\": \"78214945-1731-46ca-a13f-132df9ee1d14\",\n      \"parameters\": {\n        \"path\": \"e21095c0-1876-4cd9-9e92-a2eac737f03e\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"74a7dd0c-fc01-411c-8ea9-e43b45c376c2\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -360,\n        -120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nvar diff = $input.item.json.gitDiff\\n\\nlet lines = diff.trimEnd().split('\\\\n');\\n\\nlet originalCode = '';\\nlet newCode = '';\\n\\nlines.forEach(line => {\\n  console.log(line)\\n    if (line.startsWith('-')) {\\n        originalCode += line + \\\"\\\\n\\\";\\n    } else if (line.startsWith('+')) {\\n        newCode += line + \\\"\\\\n\\\";\\n    } else {\\n        originalCode += line + \\\"\\\\n\\\";\\n        newCode += line + \\\"\\\\n\\\";\\n    }\\n});\\n\\nreturn {\\n  originalCode:originalCode,\\n  newCode:newCode\\n};\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d55f0b8f-aac5-49e3-a5f1-9dd1a7c46254\",\n      \"name\": \"Post Discussions\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        240,\n        60\n      ],\n      \"parameters\": {\n        \"url\": \"=https://gitlab.com/api/v4/projects/{{ $('Webhook').item.json[\\\"body\\\"][\\\"project_id\\\"] }}/merge_requests/{{ $('Webhook').item.json[\\\"body\\\"][\\\"merge_request\\\"][\\\"iid\\\"] }}/discussions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"body\",\n              \"value\": \"={{ $('Basic LLM Chain').item.json[\\\"text\\\"] }}\"\n            },\n            {\n              \"name\": \"position[position_type]\",\n              \"value\": \"text\"\n            },\n            {\n              \"name\": \"position[old_path]\",\n              \"value\": \"={{ $('Split Out').item.json.old_path }}\"\n            },\n            {\n              \"name\": \"position[new_path]\",\n              \"value\": \"={{ $('Split Out').item.json.new_path }}\"\n            },\n            {\n              \"name\": \"position[start_sha]\",\n              \"value\": \"={{ $('Get Changes').item.json.diff_refs.start_sha }}\"\n            },\n            {\n              \"name\": \"position[head_sha]\",\n              \"value\": \"={{ $('Get Changes').item.json.diff_refs.head_sha }}\"\n            },\n            {\n              \"name\": \"position[base_sha]\",\n              \"value\": \"={{ $('Get Changes').item.json.diff_refs.base_sha }}\"\n            },\n            {\n              \"name\": \"position[new_line]\",\n              \"value\": \"={{ $('Parse Last Diff Line').item.json.lastNewLine || ''  }}\"\n            },\n            {\n              \"name\": \"position[old_line]\",\n              \"value\": \"={{ $('Parse Last Diff Line').item.json.lastOldLine || '' }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"PRIVATE-TOKEN\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Need Review\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Skip File Changes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Changes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Need Review\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Changes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Basic LLM Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Post Discussions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Skip File Changes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Last Diff Line\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Last Diff Line\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.if",
      "n8n-nodes-base.code",
      "@n8n/n8n-nodes-langchain.chainLlm",
      "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest"
    ],
    "trigger": null
  }
}