{
  "source": "0428_Splitout_GoogleCalendar_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"3c58c896c9089c8fb4d7f2b069bf3119193f239a1f538829758e2f4d6b5f5b24\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"f59411f9-5dad-4f8c-af0c-c3ab25171107\",\n      \"name\": \"Get recetn tweets\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        233.55908776779552,\n        1409.619212163096\n      ],\n      \"parameters\": {\n        \"url\": \"https://twitter154.p.rapidapi.com/user/tweets\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1,\n              \"batchInterval\": 2000\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"value\": \"10\"\n            },\n            {\n              \"name\": \"user_id\",\n              \"value\": \"={{ $json.twitter.id }}\"\n            },\n            {\n              \"name\": \"include_replies\",\n              \"value\": \"={{ false }}\"\n            },\n            {\n              \"name\": \"include_pinned\",\n              \"value\": \"={{ false }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-RapidAPI-Host\",\n              \"value\": \"twitter154.p.rapidapi.com\"\n            },\n            {\n              \"name\": \"X-RapidAPI-Key\",\n              \"value\": \"={{ $('Setup').first().json.twitterAPIKey }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"c25d29ef-71bb-4ea1-8794-47911dac997f\",\n      \"name\": \"Setup\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -440,\n        980\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"linkedInAPIKey\"\n            },\n            {\n              \"name\": \"twitterAPIKey\"\n            },\n            {\n              \"name\": \"emails\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"5bf52838-157b-49fe-a4d8-3817198502dd\",\n      \"name\": \"Every morning @ 7\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -680,\n        980\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 7\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"aff4dd6e-a480-4f43-9b48-05172d4b7b2d\",\n      \"name\": \"Get meetings for today\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        -80,\n        980\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"timeMax\": \"={{ $now.endOf('day') }}\",\n          \"timeMin\": \"={{ $now.beginningOf('day') }}\",\n          \"singleEvents\": true\n        },\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"milorad.filipovic19@gmail.com\",\n          \"cachedResultName\": \"milorad.filipovic19@gmail.com\"\n        },\n        \"operation\": \"getAll\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63973273-3821-4c9f-8976-6dd47ac9a62e\",\n      \"name\": \"Get attendees email domains\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        120,\n        980\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"domain\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $json.attendees.filter(a => !a.organizer).map(a => a.email.split('@').pop()) }}\"\n            },\n            {\n              \"name\": \"attendeeEmails\",\n              \"type\": \"arrayValue\",\n              \"arrayValue\": \"={{ $json.attendees.filter(a => !a.organizer).map(a => a.email) }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"093b978f-8d5e-4051-be21-e8a7a3430c9c\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        300,\n        980\n      ],\n      \"parameters\": {\n        \"include\": \"selectedOtherFields\",\n        \"options\": {},\n        \"fieldToSplitOut\": \"domain\",\n        \"fieldsToInclude\": \"attendeeEmails, start\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"467308c9-c6a0-4d1c-a6e1-4598075e62a6\",\n      \"name\": \"Get recent LinkedIn posts\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        233.55908776779552,\n        1209.619212163096\n      ],\n      \"parameters\": {\n        \"url\": \"https://fresh-linkedin-profile-data.p.rapidapi.com/get-company-posts\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {}\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"linkedin_url\",\n              \"value\": \"=https://www.linkedin.com/{{ $json.linkedin.handle }}\"\n            },\n            {\n              \"name\": \"sort_by\",\n              \"value\": \"recent\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-RapidAPI-Key\",\n              \"value\": \"={{ $('Setup').item.json.linkedInAPIKey }}\"\n            },\n            {\n              \"name\": \"X-RapidAPI-Host\",\n              \"value\": \"fresh-linkedin-profile-data.p.rapidapi.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"71a9223b-4d71-4d0d-a4df-f8836d3c3d1f\",\n      \"name\": \"Enrich attendee company\",\n      \"type\": \"n8n-nodes-base.clearbit\",\n      \"position\": [\n        640,\n        980\n      ],\n      \"parameters\": {\n        \"domain\": \"={{ $json.domain }}\",\n        \"additionalFields\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0fad8349-2a4f-4cee-a03e-98e8d95b015c\",\n      \"name\": \"Gmail\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1313.5590877677955,\n        1309.619212163096\n      ],\n      \"parameters\": {\n        \"sendTo\": \"={{ $('Setup').first().json.emails }}\",\n        \"message\": \"={{ $json.html }}\",\n        \"options\": {},\n        \"subject\": \"=Latest social activity for: {{ $('Extract data for email').item.json.name }} \"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"10\",\n          \"name\": \"mrdosija@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"bf667011-717e-4a5a-ac7d-c377edb063f8\",\n      \"name\": \"Format LinkedIn Posts\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        453.5590877677955,\n        1209.619212163096\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// console.log('LINKEDIN', $('Enrich attendee company').item.json.name.toLowerCase())\\nconst company = $('Enrich attendee company').item.json.name.toLowerCase();\\n\\nlet html = `\\n<div style=\\\"display: flex; align-items: center; margin: 2em 0 1em\\\">\\n  <img src=\\\"https://store-images.s-microsoft.com/image/apps.31120.9007199266245564.44dc7699-748d-4c34-ba5e-d04eb48f7960.bc4172bd-63f0-455a-9acd-5457f44e4473\\\" style=\\\"width: 20px; height: 20px; margin-right: 10px\\\" />\\n  <h3 style=\\\"margin: 0\\\">LinkedIn posts</h3>\\n</div>\\n<table style=\\\"width: 100%\\\">\\n`;\\nfor(article of $input.item.json.data.slice(0,10)) {\\n  html += `\\n    <tr>\\n      <td style=\\\"background-color: #f7f9fc; font-family: sans-serif; padding: 0.3em 1em\\\">\\n        <div>\\n          <a style=\\\"display: block; color: #000; text-decoration: none; margin-bottom: 5px; font-size: 1.1em\\\" href=\\\"${article.url}\\\"><i>${article.text}</i></a>\\n        </div>\\n        <p style=\\\"margin: 0; font-size: 0.8em\\\">\\n          <span title=\\\"Likes\\\">‚ù§Ô∏è ${article.num_likes}</span> | <span title=\\\"Comments\\\">üí¨ ${article.num_comments}</span>\\n        </p>\\n      </td>\\n    </tr>\\n  `\\n}\\nhtml += '</table>';\\n\\nreturn { \\n  \\\"html_linkedin\\\": html,\\n  name: $('Switch').item.json.name,\\n  meeting: $('Split Out').item.json\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ee7ad92e-d4ed-4046-8d31-9c5ce4dda92b\",\n      \"name\": \"Format Tweets\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        453.5590877677955,\n        1409.619212163096\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const company = $('Enrich attendee company').item.json.name.toLowerCase();\\nlet html = `\\n<div style=\\\"display: flex; align-items: center; margin: 2em 0 1em\\\">\\n  <img src=\\\"https://img.freepik.com/free-vector/new-2023-twitter-logo-x-icon-design_1017-45418.jpg?size=338&ext=jpg&ga=GA1.1.2008272138.1708473600&semt=ais\\\" style=\\\"width: 20px; height: 20px; margin-right: 10px\\\" />\\n  <h3 style=\\\"margin: 0\\\">Tweets</h3>\\n</div>\\n<table style=\\\"width: 100%\\\">`;\\nfor(article of $input.item.json.results) {\\n  html += `\\n    <tr>\\n      <td style=\\\"background-color: #f7f9fc; font-family: sans-serif; padding: 0.3em 1em\\\">\\n        <div>\\n          <a style=\\\"display: block; color: #000; text-decoration: none; margin-bottom: 5px; font-size: 1.1em\\\" href=\\\"https://twitter.com/${article.user.username}/status/${article.tweet_id}\\\">\\n          <i>${article.text}</i></a>\\n        </div>\\n        <p style=\\\"margin: 0; font-size: 0.8em\\\">\\n          <span title=\\\"Retweets\\\">üîÑ ${article.retweet_count}</span> | <span title=\\\"Favorites\\\">‚ù§Ô∏è ${article.favorite_count}</span> | <span title=\\\"Replies\\\">üí¨ ${article.reply_count}</span>\\n        </p>\\n      </td>\\n    </tr>\\n  `\\n}\\nhtml += '</table>';\\n\\nreturn { \\n    \\\"html_twitter\\\": html,\\n    name: $('Switch').item.json.name,\\n   meeting: $('Split Out').item.json\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0523a00c-e6d3-4158-a861-3bbdd1d6af24\",\n      \"name\": \"Combine all activity for a company\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        693.5590877677955,\n        1309.619212163096\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"clashHandling\": {\n            \"values\": {\n              \"resolveClash\": \"preferInput2\"\n            }\n          }\n        },\n        \"joinMode\": \"keepEverything\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"name\",\n              \"field2\": \"name\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"f7f8a5fd-e768-4011-bdbb-cf41a617ce00\",\n      \"name\": \"Extract data for email\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        873.5590877677955,\n        1309.619212163096\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"attendeeEmail\",\n              \"stringValue\": \"={{ $json.meeting.attendeeEmails.find(a => a.endsWith($json.meeting.domain)) }}\"\n            },\n            {\n              \"name\": \"startHour\",\n              \"type\": \"numberValue\",\n              \"numberValue\": \"={{ DateTime.fromISO($json.meeting.start.dateTime).hour }}\"\n            },\n            {\n              \"name\": \"startMinute\",\n              \"type\": \"numberValue\",\n              \"numberValue\": \"={{ DateTime.fromISO($json.meeting.start.dateTime).minute }}\"\n            }\n          ]\n        },\n        \"include\": \"selected\",\n        \"options\": {},\n        \"includeFields\": \"name, html_twitter, html_linkedin\"\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"679fb981-1774-4a3e-8aa4-0cef2f416ecb\",\n      \"name\": \"Prepare email template\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        1093.5590877677955,\n        1309.619212163096\n      ],\n      \"parameters\": {\n        \"html\": \"<!DOCTYPE html>\\n\\n<html>\\n<head>\\n  <meta charset=\\\"UTF-8\\\" />\\n  <title>Social media activity for company: {{ $json.name }}</title>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n     <h2 style=\\\"font-size: 1.2em\\\">\\n      üóìÔ∏è Meeting with \\n       <span>{{ $json.attendeeEmail }}</span> \\n       at {{ $json.startHour }}:{{ $json.startMinute < 10 ? `0${$json.startMinute}` : $json.startMinute }}h\\n    </h2>\\n    {{ $json.html_linkedin ?? ''}}\\n    {{ $json.html_twitter  ?? ''}}\\n  </div>\\n</body>\\n</html>\\n\\n<style>\\n.container {\\n  font-family: sans-serif;\\n}\\n</style>\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8d08145c-9376-4933-8cb2-05babc855b7a\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -6.440912232204482,\n        1309.619212163096\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"linkedin\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"boolean\",\n                      \"operation\": \"true\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.linkedin.handle !== null }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"twitter\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"bbb0310e-8b20-4bc6-a540-a4cd17470e28\",\n                    \"operator\": {\n                      \"type\": \"boolean\",\n                      \"operation\": \"true\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.twitter.id !== null }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"allMatchingOutputs\": true,\n          \"looseTypeValidation\": false\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"e4332ab1-5618-477c-9c0b-a2a01278036f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        720\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 409.31582584657923,\n        \"height\": 426.61520915049425,\n        \"content\": \"## Start here\\n1Ô∏è‚É£ Register on [RapidAPI](https://rapidapi.com) and subscribe to these two APIs:\\n- [Fresh LinkedIn Profile Data](https://rapidapi.com/freshdata-freshdata-default/api/fresh-linkedin-profile-data)\\n- [Twitter](https://rapidapi.com/omarmhaimdat/api/twitter154)\\n\\n\\n2Ô∏è‚É£ Set API keys for these two in `linkedInAPIKey` and `twitterAPIKey`fields of this node\\n\\n3Ô∏è‚É£ Set email addresses that should receive the list in the `emails` field of this node\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b7a7085-8e19-40a2-9910-6ad829433706\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -220.44091223220448,\n        1289.619212163096\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 334.90628250854803,\n        \"height\": 308.7389742148118,\n        \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nüí° If you need to get activities from more social media accounts found by ClearBit, they can be added here, just make sure to process them properly in separate switch node branches\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8f616351-c18d-460c-9d58-abe01c04e90b\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        840,\n        560\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 738.9631933644362,\n        \"height\": 717.2835666148258,\n        \"content\": \"### You will receive one email for every company in your calendar. These emails will look something like this:\\n\\n![hd](https://i.imgur.com/7T8XIX3.png#full-width)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dbd6c7df-d857-40e2-b1ba-cb1e68f9cb1a\",\n      \"name\": \"Keep only ones with the domain\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        460,\n        980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"881d891e-ea17-4879-a5cf-72d08b281f56\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.domain }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Setup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get meetings for today\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get recent LinkedIn posts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get recetn tweets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Keep only ones with the domain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format Tweets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine all activity for a company\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Every morning @ 7\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Setup\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get recetn tweets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format Tweets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format LinkedIn Posts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine all activity for a company\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract data for email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare email template\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get meetings for today\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get attendees email domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare email template\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gmail\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Enrich attendee company\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get recent LinkedIn posts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format LinkedIn Posts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get attendees email domains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Keep only ones with the domain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Enrich attendee company\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine all activity for a company\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract data for email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.googleCalendar",
      "n8n-nodes-base.set",
      "n8n-nodes-base.splitOut",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.clearbit",
      "n8n-nodes-base.gmail",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.html",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.filter"
    ],
    "trigger": null
  }
}