{
  "source": "1740_Webhook_Respondtowebhook_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"W1ugowsjzt1SC4hH\",\n  \"meta\": {\n    \"instanceId\": \"04ab549d8bbb435ec33b81e4e29965c46cf6f0f9e7afe631018b5e34c8eead58\"\n  },\n  \"name\": \"Validate Seatable Webhooks with HMAC SHA256 Authentication\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"ec4bdb4f-3c3e-4405-af80-2ad7ab3d57fc\",\n      \"name\": \"200\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        420,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"noData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1b6c9f8c-1b5b-499d-abb5-bb1059b73ce7\",\n      \"name\": \"403\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        420,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 403\n        },\n        \"respondWith\": \"noData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e3976bf3-60e0-4c1c-bfdb-22ad336760a5\",\n      \"name\": \"Calculate sha256\",\n      \"type\": \"n8n-nodes-base.crypto\",\n      \"position\": [\n        -20,\n        -20\n      ],\n      \"parameters\": {\n        \"type\": \"SHA256\",\n        \"action\": \"hmac\",\n        \"binaryData\": true,\n        \"dataPropertyName\": \"seatable-signature\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5e74ba50-e0fe-41e0-9b84-7078f1d150a3\",\n      \"name\": \"Seatable Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -240,\n        -20\n      ],\n      \"webhookId\": \"8c9d8c0f-d5ea-469d-afc9-d4e8a352f1a4\",\n      \"parameters\": {\n        \"path\": \"s0m3-d4nd0m-1d\",\n        \"options\": {\n          \"rawBody\": true\n        },\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dbfcc59f-5411-4d99-8cde-26ae91cdd6af\",\n      \"name\": \"Add nodes for processing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        420,\n        -220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a508534f-abb4-4455-b47a-1aaf56ce1124\",\n      \"name\": \"hash matches\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        200,\n        -20\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ String($json['seatable-signature']) }}\",\n              \"value2\": \"={{ String($json.headers['x-seatable-signature'].replace(\\\"sha256=\\\", \\\"\\\")) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1495d5c1-3467-4639-a32d-51a6497aed51\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -400,\n        -660\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 580,\n        \"content\": \"## üìå Validate Seatable Webhooks with HMAC SHA256 Authentication\\n\\nThis mini workflow is designed to **securely validate incoming Seatable webhooks** using HMAC SHA256 signature verification.\\n\\n### üîê What it does:\\n- Listens for incoming Seatable webhook requests.\\n- Calculates a SHA256 HMAC hash of the raw request body using your shared secret.\\n- Compares the computed hash with the `x-seatable-signature` header (after removing the `sha256=` prefix).\\n- If the hashes match: responds with **200 OK** and forwards the request to subsequent nodes.\\n- If the hashes don‚Äôt match: responds with **403 Forbidden**.\\n\\n### ‚ö†Ô∏è Important Notes:\\nThis workflow is provided as a **template** and is not intended to work standalone. **Please duplicate it** and integrate it with your custom logic at the \\\"Add nodes for processing\\\" node.\\n\\nConfiguration steps:\\n- Set your **secret key** in the ‚ÄúCalculate sha256‚Äù crypto node (replace the placeholder).\\n- Adjust the webhook path to suit your environment (or set it to \\\"manual\\\" for testing).\\n- Connect your actual logic after the verification step.\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"8da47cde-25ce-459e-a74d-91ba0d5173e3\",\n  \"connections\": {\n    \"hash matches\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"200\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Add nodes for processing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"403\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculate sha256\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"hash matches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Seatable Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculate sha256\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.crypto",
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.if",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}