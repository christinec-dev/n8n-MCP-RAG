{
  "source": "1497_Automation.json",
  "index": 1,
  "content": "{\n  \"\\\"meta\\\"\": \"{\",\n  \"\\\"instanceId\\\"\": \"\\\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\\\",\",\n  \"\\\"templateCredsSetupCompleted\\\"\": \"true\",\n  \"\\\"nodes\\\"\": \"[\",\n  \"\\\"id\\\"\": \"\\\"23bca6e2-e16a-48a4-a7fc-96ce25846764\\\",\",\n  \"\\\"name\\\"\": \"\\\"Sticky Note20\\\",\",\n  \"\\\"type\\\"\": \"\\\"ai_outputParser\\\",\",\n  \"\\\"position\\\"\": \"[\",\n  \"\\\"parameters\\\"\": \"{\",\n  \"\\\"schemaType\\\"\": \"\\\"manual\\\",\",\n  \"\\\"inputSchema\\\"\": \"\\\"{\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n \\\\\\\"properties\\\\\\\": {\\\\n \\\\\\\"title\\\\\\\": {\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n \\\\\\\"description\\\\\\\":\\\\\\\" A short title summarising the research topic\\\\\\\"\\\\n },\\\\n \\\\\\\"description\\\\\\\": {\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n \\\\\\\"description\\\\\\\": \\\\\\\"A short description to summarise the research topic\\\\\\\"\\\\n }\\\\n }\\\\n}\\\"\",\n  \"\\\"typeVersion\\\"\": \"1\",\n  \"\\\"options\\\"\": \"{}\",\n  \"\\\"assignments\\\"\": \"[\",\n  \"\\\"value\\\"\": \"\\\"={{ [] }}\\\"\",\n  \"\\\"model\\\"\": \"{\",\n  \"\\\"__rl\\\"\": \"true,\",\n  \"\\\"mode\\\"\": \"\\\"id\\\",\",\n  \"\\\"credentials\\\"\": \"{\",\n  \"\\\"openAiApi\\\"\": \"{\",\n  \"\\\"webhookId\\\"\": \"\\\"d4ea875f-83cb-49a8-8992-c08b4114c9bd\\\",\",\n  \"\\\"path\\\"\": \"\\\"deep_research\\\",\",\n  \"\\\"ignoreBots\\\"\": \"true,\",\n  \"\\\"buttonLabel\\\"\": \"\\\"Done\\\",\",\n  \"\\\"formTitle\\\"\": \"\\\"DeepResearcher\\\",\",\n  \"\\\"formFields\\\"\": \"{\",\n  \"\\\"values\\\"\": \"[\",\n  \"\\\"fieldType\\\"\": \"\\\"dropdown\\\",\",\n  \"\\\"fieldLabel\\\"\": \"\\\"={{ \\\\\\\"\\\\\\\" }}\\\",\",\n  \"\\\"formDescription\\\"\": \"\\\"=<img\\\\n src=\\\\\\\"https://res.cloudinary.com/daglih2g8/image/upload/f_auto,q_auto/v1/n8n-workflows/o4wqztloz3j6okfxpeyw\\\\\\\"\\\\n width=\\\\\\\"100%\\\\\\\"\\\\n style=\\\\\\\"border:1px solid #ccc\\\\\\\"\\\\n/>\\\"\",\n  \"\\\"text\\\"\": \"\\\"=Given the following contents from a SERP search for the query <query>{{ $('Item Ref').first().json.query }}</query>, generate a list of learnings from the contents. Return a maximum of 3 learnings, but feel free to return less if the contents are clear. Make sure each learning is unique and not similar to each other. The learnings should be concise and to the point, as detailed and infromation dense as possible. Make sure to include any entities like people, places, companies, products, things, etc in the learnings, as well as any exact metrics, numbers, or dates. The learnings will be used to research the topic further.\\\\n\\\\n<contents>\\\\n{{\\\\n$('Convert to Markdown')\\\\n .all()\\\\n .map(item =>`<content>\\\\\\\\n${item.json.markdown.substr(0, 25_000)}\\\\\\\\n</content>`)\\\\n .join('\\\\\\\\n')\\\\n}}\\\\n</contents>\\\",\",\n  \"\\\"messages\\\"\": \"{\",\n  \"\\\"messageValues\\\"\": \"[\",\n  \"\\\"message\\\"\": \"\\\"=You are an expert researcher. Today is {{ $now.toLocaleString() }}. Follow these instructions when responding:\\\\n - You may be asked to research subjects that is after your knowledge cutoff, assume the user is right when presented with news.\\\\n - The user is a highly experienced analyst, no need to simplify it, be as detailed as possible and make sure your response is correct.\\\\n - Be highly organized.\\\\n - Suggest solutions that I didn't think about.\\\\n - Be proactive and anticipate my needs.\\\\n - Treat me as an expert in all subject matter.\\\\n - Mistakes erode my trust, so be accurate and thorough.\\\\n - Provide detailed explanations, I'm comfortable with lots of detail.\\\\n - Value good arguments over authorities, the source is irrelevant.\\\\n - Consider new technologies and contrarian ideas, not just the conventional wisdom.\\\\n - You may use high levels of speculation or prediction, just flag it for me.\\\"\",\n  \"\\\"promptType\\\"\": \"\\\"define\\\",\",\n  \"\\\"hasOutputParser\\\"\": \"true\",\n  \"\\\"fieldToSplitOut\\\"\": \"\\\"tag\\\"\",\n  \"\\\"executeOnce\\\"\": \"true,\",\n  \"\\\"jsonOutput\\\"\": \"\\\"={{ $('Generate Learnings').item.json }}\\\"\",\n  \"\\\"onError\\\"\": \"\\\"continueRegularOutput\\\",\",\n  \"\\\"url\\\"\": \"\\\"=https://api.notion.com/v1/blocks/{{ $('Get Existing Row1').first().json.id }}/children\\\",\",\n  \"\\\"method\\\"\": \"\\\"PATCH\\\",\",\n  \"\\\"sendBody\\\"\": \"true,\",\n  \"\\\"authentication\\\"\": \"\\\"predefinedCredentialType\\\",\",\n  \"\\\"bodyParameters\\\"\": \"{\",\n  \"\\\"genericAuthType\\\"\": \"\\\"httpQueryAuth\\\",\",\n  \"\\\"httpQueryAuth\\\"\": \"{\",\n  \"\\\"httpHeaderAuth\\\"\": \"{\",\n  \"\\\"html\\\"\": \"\\\"<div class=\\\\\\\"form-group\\\\\\\" style=\\\\\\\"margin-bottom:16px;\\\\\\\">\\\\n <label class=\\\\\\\"form-label\\\\\\\" for=\\\\\\\"field-2\\\\\\\">\\\\n Enter research breadth (Default 2)\\\\n </label>\\\\n <p style=\\\\\\\"font-size:12px;color:#666;text-align:left\\\\\\\">\\\\n This value determines how many sources to explore.\\\\n </p>\\\\n <input\\\\n class=\\\\\\\"form-input\\\\\\\"\\\\n type=\\\\\\\"range\\\\\\\"\\\\n id=\\\\\\\"field-2\\\\\\\"\\\\n name=\\\\\\\"field-2\\\\\\\"\\\\n value=\\\\\\\"2\\\\\\\"\\\\n step=\\\\\\\"1\\\\\\\"\\\\n max=\\\\\\\"5\\\\\\\"\\\\n min=\\\\\\\"1\\\\\\\"\\\\n list=\\\\\\\"breadth-markers\\\\\\\"\\\\n >\\\\n <datalist\\\\n id=\\\\\\\"breadth-markers\\\\\\\"\\\\n style=\\\\\\\"display: flex;\\\\n flex-direction: row;\\\\n justify-content: space-between;\\\\n writing-mode: horizontal-tb;\\\\n margin-top: -10px;\\\\n text-align: center;\\\\n font-size: 10px;\\\\n margin-left: 16px;\\\\n margin-right: 16px;\\\\\\\"\\\\n >\\\\n <option value=\\\\\\\"1\\\\\\\" label=\\\\\\\"1\\\\\\\"></option>\\\\n <option value=\\\\\\\"2\\\\\\\" label=\\\\\\\"2\\\\\\\"></option>\\\\n <option value=\\\\\\\"3\\\\\\\" label=\\\\\\\"3\\\\\\\"></option>\\\\n <option value=\\\\\\\"4\\\\\\\" label=\\\\\\\"4\\\\\\\"></option>\\\\n <option value=\\\\\\\"5\\\\\\\" label=\\\\\\\"5\\\\\\\"></option>\\\\n </datalist>\\\\n</div>\\\\n\\\\n\\\",\",\n  \"\\\"ignore\\\"\": \"\\\"a,img,picture,svg,video,audio,iframe\\\"\",\n  \"\\\"destinationKey\\\"\": \"\\\"markdown\\\"\",\n  \"\\\"placeholder\\\"\": \"\\\"=\\\",\",\n  \"\\\"requiredField\\\"\": \"true\",\n  \"\\\"workflowInputs\\\"\": \"{\",\n  \"\\\"color\\\"\": \"7,\",\n  \"\\\"width\\\"\": \"180,\",\n  \"\\\"height\\\"\": \"260,\",\n  \"\\\"content\\\"\": \"\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n### UPDATE NOTION CREDENTIAL HERE!\\\"\",\n  \"\\\"operation\\\"\": \"\\\"notEmpty\\\",\",\n  \"\\\"completionTitle\\\"\": \"\\\"=Thank you for using DeepResearcher.\\\",\",\n  \"\\\"completionMessage\\\"\": \"\\\"=You may now close this window.\\\"\",\n  \"\\\"waitForSubWorkflow\\\"\": \"true\",\n  \"\\\"workflowId\\\"\": \"{\",\n  \"\\\"data\\\"\": \"\\\"={{ $json }}\\\",\",\n  \"\\\"jobType\\\"\": \"\\\"deepresearch_learnings\\\",\",\n  \"\\\"requestId\\\"\": \"\\\"={{ $('JobType Router').first().json.requestId }}\\\"\",\n  \"\\\"schema\\\"\": \"[\",\n  \"\\\"display\\\"\": \"true,\",\n  \"\\\"removed\\\"\": \"false,\",\n  \"\\\"required\\\"\": \"false,\",\n  \"\\\"displayName\\\"\": \"\\\"data\\\",\",\n  \"\\\"defaultMatch\\\"\": \"false,\",\n  \"\\\"canBeUsedToMatch\\\"\": \"true\",\n  \"\\\"mappingMode\\\"\": \"\\\"defineBelow\\\",\",\n  \"\\\"matchingColumns\\\"\": \"[],\",\n  \"\\\"attemptToConvertTypes\\\"\": \"false,\",\n  \"\\\"convertFieldsToString\\\"\": \"true\",\n  \"\\\"jsonBody\\\"\": \"\\\"={{\\\\n{\\\\n \\\\\\\"children\\\\\\\": $json.block\\\\n}\\\\n}}\\\",\",\n  \"\\\"sendQuery\\\"\": \"true,\",\n  \"\\\"specifyBody\\\"\": \"\\\"json\\\",\",\n  \"\\\"queryParameters\\\"\": \"{\",\n  \"\\\"dataToSave\\\"\": \"{\",\n  \"\\\"key\\\"\": \"\\\"Request ID|rich_text\\\",\",\n  \"\\\"rules\\\"\": \"{\",\n  \"\\\"outputKey\\\"\": \"\\\"report\\\",\",\n  \"\\\"conditions\\\"\": \"[\",\n  \"\\\"version\\\"\": \"2,\",\n  \"\\\"leftValue\\\"\": \"\\\"={{ $json }}\\\",\",\n  \"\\\"caseSensitive\\\"\": \"true,\",\n  \"\\\"typeValidation\\\"\": \"\\\"strict\\\"\",\n  \"\\\"combinator\\\"\": \"\\\"and\\\",\",\n  \"\\\"operator\\\"\": \"{\",\n  \"\\\"rightValue\\\"\": \"\\\"\\\"\",\n  \"\\\"renameOutput\\\"\": \"true\",\n  \"\\\"singleValue\\\"\": \"true\",\n  \"\\\"alwaysOutputData\\\"\": \"true\",\n  \"\\\"title\\\"\": \"\\\"={{ $json.output.title }}\\\"\",\n  \"\\\"resource\\\"\": \"\\\"databasePage\\\",\",\n  \"\\\"databaseId\\\"\": \"{\",\n  \"\\\"cachedResultUrl\\\"\": \"\\\"https://www.notion.so/19486dd60c0c80da9cb7eb1468ea9afd\\\",\",\n  \"\\\"cachedResultName\\\"\": \"\\\"n8n DeepResearch\\\"\",\n  \"\\\"propertiesUi\\\"\": \"{\",\n  \"\\\"propertyValues\\\"\": \"[\",\n  \"\\\"textContent\\\"\": \"\\\"={{ $('Set Variables').first().json.request_id }}\\\"\",\n  \"\\\"statusValue\\\"\": \"\\\"Done\\\"\",\n  \"\\\"notionApi\\\"\": \"{\",\n  \"\\\"limit\\\"\": \"1,\",\n  \"\\\"filters\\\"\": \"{\",\n  \"\\\"condition\\\"\": \"\\\"equals\\\",\",\n  \"\\\"richTextValue\\\"\": \"\\\"={{ $json.requestId.toString() }}\\\"\",\n  \"\\\"matchType\\\"\": \"\\\"allFilters\\\",\",\n  \"\\\"filterType\\\"\": \"\\\"manual\\\"\",\n  \"\\\"pageId\\\"\": \"{\",\n  \"\\\"date\\\"\": \"\\\"={{ $now.toISO() }}\\\"\",\n  \"\\\"tables\\\"\": \"true\",\n  \"\\\"markdown\\\"\": \"\\\"={{ $json.text }}\\\"\",\n  \"\\\"modelName\\\"\": \"\\\"models/gemini-2.0-flash\\\"\",\n  \"\\\"googlePalmApi\\\"\": \"{\",\n  \"\\\"maxTries\\\"\": \"2,\",\n  \"\\\"timeout\\\"\": \"\\\"={{ 1000 * 60 }}\\\"\",\n  \"\\\"sendHeaders\\\"\": \"true,\",\n  \"\\\"headerParameters\\\"\": \"{\",\n  \"\\\"nodeCredentialType\\\"\": \"\\\"notionApi\\\"\",\n  \"\\\"retryOnFail\\\"\": \"true,\",\n  \"\\\"waitBetweenTries\\\"\": \"3000\",\n  \"\\\"multiselect\\\"\": \"true,\",\n  \"\\\"fieldOptions\\\"\": \"{\",\n  \"\\\"option\\\"\": \"\\\"=I understand higher depth and breath values I've selected may incur longer wait times and higher costs. I acknowledging this and wish to proceed with the research request.\\\"\",\n  \"\\\"jsCode\\\"\": \"\\\"const urls = $('JobType Router').first().json.data.all_urls;\\\\nconst chunksize = 50;\\\\nconst splits = Math.max(1, Math.floor(urls.length/chunksize));\\\\n\\\\nconst blocks = Array(splits).fill(0)\\\\n .map((_, idx) => {\\\\n const block = urls\\\\n .slice(\\\\n idx * chunksize, \\\\n (idx * chunksize) + chunksize - 1\\\\n )\\\\n .map(url => {\\\\n return {\\\\n object: \\\\\\\"block\\\\\\\",\\\\n type: \\\\\\\"bulleted_list_item\\\\\\\",\\\\n bulleted_list_item: {\\\\n rich_text: [\\\\n { type: \\\\\\\"text\\\\\\\", text: { content: url } }\\\\n ]\\\\n }\\\\n }\\\\n });\\\\n return { json: { block } }\\\\n });\\\\n\\\\nreturn [\\\\n { json: {\\\\n block:[{\\\\n \\\\\\\"object\\\\\\\": \\\\\\\"block\\\\\\\",\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"heading_2\\\\\\\",\\\\n \\\\\\\"heading_2\\\\\\\": {\\\\n \\\\\\\"rich_text\\\\\\\": [\\\\n {\\\\n \\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\",\\\\n \\\\\\\"text\\\\\\\": {\\\\n \\\\\\\"content\\\\\\\": \\\\\\\"Sources\\\\\\\"\\\\n }\\\\n }\\\\n ]\\\\n }\\\\n }]\\\\n } },\\\\n ...blocks\\\\n];\\\"\",\n  \"\\\"aggregate\\\"\": \"\\\"aggregateAllItemData\\\"\",\n  \"\\\"pinData\\\"\": \"{},\",\n  \"\\\"connections\\\"\": \"{\",\n  \"\\\"Item Ref\\\"\": \"{\",\n  \"\\\"main\\\"\": \"[\",\n  \"\\\"node\\\"\": \"\\\"Report Page Generator\\\",\",\n  \"\\\"index\\\"\": \"0\",\n  \"\\\"Create Row\\\"\": \"{\",\n  \"\\\"Web Search\\\"\": \"{\",\n  \"\\\"Valid Pages\\\"\": \"{\",\n  \"\\\"Confirmation\\\"\": \"{\",\n  \"\\\"Has Content?\\\"\": \"{\",\n  \"\\\"Has Results?\\\"\": \"{\",\n  \"\\\"Valid Blocks\\\"\": \"{\",\n  \"\\\"Append Blocks\\\"\": \"{\",\n  \"\\\"HTML to Array\\\"\": \"{\",\n  \"\\\"Page Contents\\\"\": \"{\",\n  \"\\\"SERP to Items\\\"\": \"{\",\n  \"\\\"Set Variables\\\"\": \"{\",\n  \"\\\"Tags to Items\\\"\": \"{\",\n  \"\\\"URLs to Items\\\"\": \"{\",\n  \"\\\"Empty Response\\\"\": \"{\",\n  \"\\\"Execution Data\\\"\": \"{\",\n  \"\\\"JobType Router\\\"\": \"{\",\n  \"\\\"Convert to HTML\\\"\": \"{\",\n  \"\\\"Set In-Progress\\\"\": \"{\",\n  \"\\\"Get Existing Row\\\"\": \"{\",\n  \"\\\"Research Request\\\"\": \"{\",\n  \"\\\"Results to Items\\\"\": \"{\",\n  \"\\\"Set Next Queries\\\"\": \"{\",\n  \"\\\"Feedback to Items\\\"\": \"{\",\n  \"\\\"For Each Block...\\\"\": \"{\",\n  \"\\\"For Each Query...\\\"\": \"{\",\n  \"\\\"Get Existing Row1\\\"\": \"{\",\n  \"\\\"Get Initial Query\\\"\": \"{\",\n  \"\\\"Is Depth Reached?\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model\\\"\": \"{\",\n  \"\\\"ai_languageModel\\\"\": \"[\",\n  \"\\\"Parse JSON blocks\\\"\": \"{\",\n  \"\\\"Set Initial Query\\\"\": \"{\",\n  \"\\\"Accumulate Results\\\"\": \"{\",\n  \"\\\"Generate Learnings\\\"\": \"{\",\n  \"\\\"On form submission\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model1\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model2\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model3\\\"\": \"{\",\n  \"\\\"OpenAI Chat Model4\\\"\": \"{\",\n  \"\\\"Convert to Markdown\\\"\": \"{\",\n  \"\\\"DeepResearch Report\\\"\": \"{\",\n  \"\\\"Clarifying Questions\\\"\": \"{\",\n  \"\\\"DeepResearch Results\\\"\": \"{\",\n  \"\\\"For Each Question...\\\"\": \"{\",\n  \"\\\"Get Research Results\\\"\": \"{\",\n  \"\\\"URL Sources to Lists\\\"\": \"{\",\n  \"\\\"Ask Clarity Questions\\\"\": \"{\",\n  \"\\\"Generate SERP Queries\\\"\": \"{\",\n  \"\\\"Initiate DeepResearch\\\"\": \"{\",\n  \"\\\"Report Page Generator\\\"\": \"{\",\n  \"\\\"Top 5 Organic Results\\\"\": \"{\",\n  \"\\\"Upload to Notion Page\\\"\": \"{\",\n  \"\\\"DeepResearch Learnings\\\"\": \"{\",\n  \"\\\"Notion Block Generator\\\"\": \"{\",\n  \"\\\"DeepResearch Subworkflow\\\"\": \"{\",\n  \"\\\"Google Gemini Chat Model\\\"\": \"{\",\n  \"\\\"Structured Output Parser\\\"\": \"{\",\n  \"\\\"ai_outputParser\\\"\": \"[\",\n  \"\\\"Research Goal + Learnings\\\"\": \"{\",\n  \"\\\"Structured Output Parser1\\\"\": \"{\",\n  \"\\\"Structured Output Parser2\\\"\": \"{\",\n  \"\\\"Structured Output Parser4\\\"\": \"{\"\n}",
  "metadata": {
    "node_types": [],
    "trigger": null
  }
}