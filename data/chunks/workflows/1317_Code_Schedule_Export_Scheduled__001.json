{
  "source": "1317_Code_Schedule_Export_Scheduled.json",
  "index": 1,
  "content": "{\n  \"id\": \"As8TxF3PjyXygc0o\",\n  \"meta\": {\n    \"instanceId\": \"a059b3dfdab56aa587cc6a2c8635f6f2700cf0c7064dbfb5981c26f7ad9eab88\"\n  },\n  \"name\": \"ðŸ§¹ Archive (delete) duplicate items from a Notion database\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b758ce01-7f5e-4bdc-a4c3-6c00d6bc022a\",\n      \"name\": \"Every day\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -180,\n        660\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {}\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1ca45ba5-4635-4710-9807-26f22d535059\",\n      \"name\": \"Get pages from database\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        60,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"ef8c8cfa-12fb-4fb9-8552-09f69f1f358d\",\n      \"name\": \"Aggregate all items\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        500,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"pages\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f1c3c0ad-f904-4d63-a131-0b045a21ce04\",\n      \"name\": \"Format items properly\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        280,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"309a1e9b-f3e9-41a0-aadb-aa74bc993fe9\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"ad6e8fa9-9872-456d-971f-3cef940b7d8a\",\n              \"name\": \"property_to_check\",\n              \"type\": \"string\",\n              \"value\": \"=\\\"SET YOUR PROPERTY HERE\\\"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"5d39d3b7-604d-4aca-bf9a-3bb09bddad66\",\n      \"name\": \"Filter duplicates\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        720,\n        560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const inputData = $input.first().json.pages;\\n\\nconst seen = new Set();\\nconst duplicates = new Map();\\n\\ninputData.forEach(item => {\\n  const propertyValue = item.property_to_check;\\n  if (seen.has(propertyValue)) {\\n    duplicates.set(propertyValue, item);\\n  } else {\\n    seen.add(propertyValue);\\n  }\\n});\\n\\nconst output = Array.from(duplicates.values()).map(item => ({ json: item }));\\n\\nreturn output;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"55a8f0eb-702b-4056-a28c-96a7ade7c2cd\",\n      \"name\": \"Archive pages\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        920,\n        560\n      ],\n      \"parameters\": {\n        \"pageId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.id }}\"\n        },\n        \"operation\": \"archive\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"2c9655ea-401c-410b-a4b1-b001ae6dbe4b\",\n      \"name\": \"When a page is added to the database\",\n      \"type\": \"n8n-nodes-base.notionTrigger\",\n      \"position\": [\n        -180,\n        460\n      ],\n      \"parameters\": {\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        },\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"672b647c-d009-45c3-b69e-6dfe85992e15\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"width\": 860,\n        \"height\": 460,\n        \"content\": \"## ðŸ§¹ Archive (delete) extra duplicate items from Notion database\\n### ABOUT THIS WORKFLOW\\nThis n8n workflow automatically gets duplicate database pages based on a property and \\\"archives\\\" them (equivalent to deleting them), leaving just one copy.\\n\\n### SETUP\\n1. Create a Notion credential.\\n2. Add it to the Notion nodes, selecting the appropriate database.\\n3. In the \\\"Set\\\" node (\\\"Format items properly\\\"), specify a reference to the property you want to check for duplicates and assign it to the field \\\"property_to_check\\\". I recommend using the n8n property drag-and-drop feature.\\n4. Enjoy!\\n\\n### ABOUT THE TRIGGERS\\nThis workflow offers two possible triggers by default:\\n- Run every time a page is added to the database.\\n- Run every day.\\n\\n\\nYou can enable, disable, or modify these triggers as you like.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"83881bd3-60e3-40be-a469-0b7acb21d2be\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 420,\n        \"content\": \"## TRIGGERS\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cd4b8717-19ae-42d6-ac87-bbdd071dd774\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        480\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 860,\n        \"height\": 340,\n        \"content\": \"## GET DUPLICATE PAGES\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"087fb844-2241-4ed9-976d-9bdc7ccd8aa5\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        880,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 180,\n        \"height\": 420,\n        \"content\": \"## ARCHIVE (DELETE)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"fdd2e5ad-4ff5-4432-a5f9-ebbeb1a1a6cb\",\n  \"connections\": {\n    \"Every day\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get pages from database\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter duplicates\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Archive pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate all items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter duplicates\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format items properly\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate all items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get pages from database\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format items properly\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When a page is added to the database\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get pages from database\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.scheduleTrigger",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.aggregate",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.notion",
      "n8n-nodes-base.notionTrigger",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}