{
  "source": "2037_Manual_N8N_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"zlHbtHIcCZ9enKwg\",\n  \"meta\": {\n    \"instanceId\": \"406f1bca875c48c0fa12bf65a32e67f001617a6df6d6fd6dd72bff9d20014812\"\n  },\n  \"name\": \"v1 helper - Find params with affected expressions\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b3dd44ca-960f-4689-9545-30a05dc0441e\",\n      \"name\": \"When clicking \\\"Execute Workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        580,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"96db239d-05b6-4e1d-b101-e66c2a9708f6\",\n      \"name\": \"n8n\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        800,\n        320\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"activeWorkflows\": true\n        }\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"hcJ2iZYYgs54eCaT\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b2286f6b-ba37-433c-b22a-95032bc25b6e\",\n      \"name\": \"Find params with affected expressions\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1040,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const AFFECTED_EXTENSIONS = ['beginningOf', 'endOfMonth', 'minus', 'plus'];\\n\\nconst isExpression = (value) => typeof value === 'string' && value.startsWith('={{');\\n\\nconst containsAny = (str, substrings) => {\\n  for (const substring of substrings) {\\n    if (str.includes(substring)) return true;\\n  }\\n  \\n  return false;\\n}\\n\\nconst isAffected = (value) => isExpression(value) && containsAny(value, AFFECTED_EXTENSIONS);\\n\\nfunction findParamsByTest(target, test) {\\n  const parameterNames = [];\\n\\n  function search(obj) {\\n    if (typeof obj === 'object') {\\n      for (const key in obj) {\\n        const value = obj[key];\\n\\n        if (test(value)) {\\n          parameterNames.push(key);\\n        } else if (typeof value === 'object') {\\n          search(value);\\n        }\\n      }\\n    }\\n  }\\n\\n  search(target);\\n\\n  return parameterNames;\\n}\\n\\nreturn $input.all().reduce((allLocations, { json: workflow }) => {\\n  const perWorkflow = workflow.nodes.reduce((allLocationsPerWorkflow, node) => {\\n    const perNode = findParamsByTest(node.parameters, isAffected).map(\\n      (parameterName) => {\\n\\t\\treturn {\\n\\t\\t\\tworkflowName: workflow.name,\\n\\t\\t\\tnodeName: node.name,\\n\\t\\t\\tparameterName,\\n        };\\n      },\\n    );\\n\\n    return [...allLocationsPerWorkflow, ...perNode];\\n  }, []);\\n\\n  return [...allLocations, ...perWorkflow];\\n}, []);\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee189fa0-cf89-4b8d-8351-ed9598f18502\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        600,\n        92\n      ],\n      \"parameters\": {\n        \"width\": 548.6551724137931,\n        \"height\": 191.08045977011497,\n        \"content\": \"## v1 Helper\\n\\nℹ️ This workflow is to be run **after upgrading to n8n v1**.\\n\\nThis workflow returns all locations where a node in an active workflow contains a parameter using an **expression extension affected by [v1 changes](https://github.com/n8n-io/n8n/pull/6435)**. For every location, please check that the workflow still behaves as intended.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {},\n  \"versionId\": \"da694734-30ae-46b1-8e29-877c95b670ab\",\n  \"connections\": {\n    \"n8n\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Find params with affected expressions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Execute Workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.code",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}