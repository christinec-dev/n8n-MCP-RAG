{
  "source": "1063_Slack_Graphql_Automation_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"5\",\n  \"name\": \"Slack-GitHub User Info\",\n  \"nodes\": [\n    {\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        300,\n        300\n      ],\n      \"webhookId\": \"dacd64a7-a83e-4492-b8fe-363453906d0d\",\n      \"parameters\": {\n        \"path\": \"dacd64a7-a83e-4492-b8fe-363453906d0d\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"GraphQL\",\n      \"type\": \"n8n-nodes-base.graphql\",\n      \"position\": [\n        500,\n        300\n      ],\n      \"parameters\": {\n        \"query\": \"=query {\\nuser(login:\\\"{{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"text\\\"]}}\\\"){\\nname\\ncompany\\nlocation\\navatarUrl\\nemail\\npullRequests(last: 25) {\\nedges {\\nnode {\\ncommits(last:25) {\\nnodes {\\ncommit {\\nauthor {\\nemail\\nname\\n}\\n}\\n}\\n}\\n}\\n}\\n}\\n}\\n}\",\n        \"endpoint\": \"https://api.github.com/graphql\",\n        \"requestFormat\": \"json\",\n        \"responseFormat\": \"string\",\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"n8n\"\n            },\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"bearer <Personal Token>\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        700,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"let emails = [];\\nlet tempEmails = [];\\nconst name = $node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"name\\\"];\\nconst publicEmail = $node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"email\\\"];\\nconst username = $node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"text\\\"];\\nconst nameRegex = new RegExp(name,\\\"g\\\")\\n\\nif(publicEmail){\\n// if public email address exists, push it to the tempEmails array\\n  tempEmails.push(publicEmail)\\n}\\n\\n// looping through the pull requests\\nfor(const edge of items[0].json.data.data.user.pullRequests.edges){\\n // looping through the commits\\n  for(node of edge.node.commits.nodes){\\n\\n    // Checks the name associated with the email address\\n    if(nameRegex.test(node.commit.author.name)|| node.commit.author.name == username) {\\n     // if name equals to contributors name or username, push the email address in tempEmails\\n      tempEmails.push(node.commit.author.email)\\n    }\\n  }\\n}\\n\\n// Remove duplicates\\nemails = [...new Set(tempEmails)]\\n\\n// RegEx Pattern for email address generated by GitHub\\nlet re = /^\\\\w+(.)*@users.noreply.github.com/\\n\\n// Remove the email addresses Generated by GitHub\\nemails = emails.filter(email => !re.test(email))\\n\\n\\nreturn [{json:{emails,}}]\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Slack\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        900,\n        300\n      ],\n      \"parameters\": {\n        \"channel\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"channel_id\\\"]}}\",\n        \"attachments\": [\n          {\n            \"title\": \"=GitHub Details for: {{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"text\\\"]}}\"\n          },\n          {\n            \"text\": \"=*Name:*  {{$node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"name\\\"]}}\\n*Email:* {{$node[\\\"Function\\\"].json[\\\"emails\\\"].join(', ')}}\\n*Company:* {{$node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"company\\\"]}}\\n*Location:* {{$node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"location\\\"]}}\"\n          },\n          {\n            \"thumb_url\": \"={{$node[\\\"GraphQL\\\"].json[\\\"data\\\"][\\\"data\\\"][\\\"user\\\"][\\\"avatarUrl\\\"]}}\"\n          }\n        ],\n        \"otherOptions\": {},\n        \"authentication\": \"oAuth2\"\n      },\n      \"credentials\": {\n        \"slackOAuth2Api\": \"Slack OAuth2\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"GraphQL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GraphQL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Slack\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.graphql",
      "n8n-nodes-base.function",
      "n8n-nodes-base.slack"
    ],
    "trigger": null
  }
}