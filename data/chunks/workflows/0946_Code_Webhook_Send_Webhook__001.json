{
  "source": "0946_Code_Webhook_Send_Webhook.json",
  "index": 1,
  "content": "{\n  \"id\": \"3tJcVzt2OqeyjfnH\",\n  \"meta\": {\n    \"instanceId\": \"03e9d14e9196363fe7191ce21dc0bb17387a6e755dcc9acc4f5904752919dca8\"\n  },\n  \"name\": \"Analyze_email_headers_for_IPs_and_spoofing__3\",\n  \"tags\": [\n    {\n      \"id\": \"GCHVocImoXoEVnzP\",\n      \"name\": \"🛠️ In progress\",\n      \"createdAt\": \"2023-10-31T02:17:21.618Z\",\n      \"updatedAt\": \"2023-10-31T02:17:21.618Z\"\n    },\n    {\n      \"id\": \"QPJKatvLSxxtrE8U\",\n      \"name\": \"Secops\",\n      \"createdAt\": \"2023-10-31T02:15:11.396Z\",\n      \"updatedAt\": \"2023-10-31T02:15:11.396Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"a2dca82d-f2b4-41f7-942a-2713a5ae012e\",\n      \"name\": \"Receive Headers\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -320,\n        740\n      ],\n      \"webhookId\": \"1bde44ab-1360-48b3-9b2f-260a82629bfa\",\n      \"parameters\": {\n        \"path\": \"90e9e395-1d40-4575-b2a0-fbf52c534167\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8cb2e9f4-6954-4812-a443-47cc83e7db0a\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2900,\n        420\n      ],\n      \"parameters\": {\n        \"width\": 528.410729274179,\n        \"height\": 545.969373616973,\n        \"content\": \"## Output\\nReturns output like:\\n```\\n[\\n    {\\n        \\\"ipAnalysis\\\": [\\n            {\\n                \\\"IP\\\": \\\"104.245.209.248\\\",\\n                \\\"fraud_score\\\": 87,\\n                \\\"recent_abuse\\\": true,\\n                \\\"Organization\\\": \\\"Deft Hosting\\\",\\n                \\\"tor\\\": false,\\n                \\\"ISP\\\": \\\"Server Central Network\\\",\\n                \\\"recent_spam_activity\\\": \\\"Identified spam in the past 24-48 hours\\\",\\n                \\\"ip_sender_reputation\\\": \\\"Bad\\\"\\n            },\\n            {\\n                \\\"IP\\\": \\\"09.06.05.41\\\",\\n                \\\"recent_spam_activity\\\": \\\"unknown\\\",\\n                \\\"ip_sender_reputation\\\": \\\"unknown\\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\\"spf\\\": \\\"pass\\\",\\n        \\\"dkim\\\": \\\"pass\\\",\\n        \\\"dmarc\\\": \\\"pass\\\"\\n    }\\n]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2464403b-5cb9-4090-b923-912bb8af673a\",\n      \"name\": \"Fraud Score\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1340,\n        560\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"let recentSpamActivity = \\\"undefined\\\";\\nlet ipSenderReputation = \\\"undefined\\\";\\n\\ntry {\\n  if ($('IP Quality Score')) {\\n    const fraudScore = $('IP Quality Score').item.json.fraud_score;\\n\\n    recentSpamActivity = \\\"Not associated with recent spam activity\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      recentSpamActivity = \\\"Identified spam in the past 24-48 hours\\\";\\n    } else if( fraudScore >= 75 ) {\\n      recentSpamActivity = \\\"Identified spam in the past month\\\";\\n    }\\n\\n    if(!fraudScore) recentSpamActivity = \\\"unknown\\\";\\n    \\n    ipSenderReputation = \\\"unknown\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      ipSenderReputation = \\\"Bad\\\";\\n    } else if( fraudScore >= 75 ) {\\n      ipSenderReputation = \\\"Poor\\\";  \\n    } else if( fraudScore >= 50 ) {\\n      ipSenderReputation = \\\"Suspicious\\\";  \\n    } else if( fraudScore >= 11 ) {\\n      ipSenderReputation = \\\"OK\\\";  \\n    } else if( fraudScore <= 10 ) {\\n      ipSenderReputation = \\\"Good\\\";  \\n    }\\n  }\\n} catch (error) {\\n  return {\\n    \\\"recent_spam_activity\\\": recentSpamActivity,\\n    \\\"ip_sender_reputation\\\": ipSenderReputation\\n  };\\n}\\n\\nreturn {\\n  \\\"recent_spam_activity\\\": recentSpamActivity,\\n  \\\"ip_sender_reputation\\\": ipSenderReputation\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"70e3e88a-001a-40fc-a771-ace7696f54eb\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        2680,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json.result }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4e16523d-a7e1-44d1-840a-3df3a44bd034\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        -39.5\n      ],\n      \"parameters\": {\n        \"width\": 628.6931617686989,\n        \"height\": 834.0576186324413,\n        \"content\": \"![ipqualityscore](https://i.imgur.com/CQRV2uV.png)\\n## IP Reputation and Email Security Analysis\\nThis critical part of the workflow specializes in fortifying email security by extracting IP addresses from received headers. With a refined process, it analyzes the extracted IPs against the IP Quality Score API, assessing potential risks and preventing fraudulent activities.\\n\\nThe `Extract IPs from \\\"received\\\"` node initiates the process by isolating IP addresses from email headers, demonstrating n8n's capacity to dissect and parse complex data. The `Split Out IPs` node then prepares these IPs for individual scrutiny, showcasing the flexibility of n8n to handle data at granular levels. Finally, the `IP Quality Score` node queries an external API to evaluate each IP, reinforcing the security parameters by providing detailed risk assessments.\\n\\n### Authentication - Free Tier Available (5000 credits/month)\\n\\nIP Quality Score uses the API key as part of the website URL. Since n8n does not currently allow for exposing credentials in the URL, you will need to hardcode your API key in the fake expression snippet in the `IP Quality Score` node.\\n\\nThe API key can be found by [visiting their documentation here](https://www.ipqualityscore.com/documentation/proxy-detection-api/overview), logging in, and then scrolling down to the Private Key. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2e8ead40-a97a-4c7e-953c-33546b83eaf6\",\n      \"name\": \"Explode Email Header\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        80,\n        740\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Takes the Header string and splits it into various items for analysis.\\nlet returnArray = [];\\n\\nfor (const item of $input.all()) {\\n  const headerStr = item.json.header;\\n  const headerLines = headerStr.split('\\\\n');\\n    const headerObj = {};\\n\\n    let currentKey = null;\\n    let currentValue = '';\\n\\n    headerLines.forEach((line) => {\\n        const match = line.match(/^([\\\\w-]+):\\\\s*(.*)/);\\n\\n        if (match) {\\n            if (currentKey) {\\n                if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n                headerObj[currentKey].push({ [`${currentKey}`]: currentValue });\\n            }\\n\\n            currentKey = match[1].toLowerCase();\\n            currentValue = match[2];\\n        } else {\\n            currentValue += ' ' + line.trim();\\n        }\\n    });\\n\\n    if (currentKey) {\\n        if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n        headerObj[currentKey].push({ [`${currentKey}Item`]: currentValue });\\n    }\\n  returnArray.push({\\\"header\\\":headerObj});\\n}\\n\\nreturn returnArray;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1118176d-a315-439d-a3b6-fe4d40c900c6\",\n      \"name\": \"Split Out IPs\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        740,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"destinationFieldName\": \"ip\"\n        },\n        \"fieldToSplitOut\": \"ips\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"ef118900-11a6-418a-b1b3-159933d62cbf\",\n      \"name\": \"Extract IPs from \\\"received\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        540,\n        560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let ips = []\\n\\nfor (const item of $input.all()) {\\n  const header = JSON.stringify(item.json.header.received);\\n  console.log(header)\\n  const ipRegex = /\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\b/g;\\n  const ipAddresses = header.match(ipRegex) || [];\\n  ips.push(...ipAddresses);\\n}\\n\\nreturn [\\n  {\\n    ips: ips\\n  }\\n];\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"ffefc1e2-214c-47d7-a7a3-104fefdccda1\",\n      \"name\": \"IP Quality Score\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        920,\n        560\n      ],\n      \"parameters\": {\n        \"url\": \"=https://ipqualityscore.com/api/json/ip/{{ Replace me with your API key, it can be found inside the api documentation, leave json.ip alone }}/{{ $json.ip }}?strictness=1&allow_public_access_points=true&lighter_penalties=true\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"2f1c5b30-950c-4e0d-81a6-bf4c2c64f968\",\n      \"name\": \"IP-API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1140,\n        560\n      ],\n      \"parameters\": {\n        \"url\": \"=http://ip-api.com/json/{{ $('Split Out IPs').item.json.ip }}\",\n        \"method\": \"POST\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"c9cae845-63e8-475a-bc08-ba0552712394\",\n      \"name\": \"Collect interesting data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1520,\n        560\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"IP\",\n              \"value\": \"={{ $('Split Out IPs').item.json.ip }}\"\n            },\n            {\n              \"name\": \"fraud_score\",\n              \"value\": \"={{ $('IP Quality Score').item.json.fraud_score }}\"\n            },\n            {\n              \"name\": \"recent_abuse\",\n              \"value\": \"={{ $('IP Quality Score').item.json.recent_abuse }}\"\n            },\n            {\n              \"name\": \"Organization\",\n              \"value\": \"={{ $('IP Quality Score').item.json.organization }}\"\n            },\n            {\n              \"name\": \"tor\",\n              \"value\": \"={{ $('IP Quality Score').item.json.tor }}\"\n            },\n            {\n              \"name\": \"ISP\",\n              \"value\": \"={{ $('IP-API').item.json.isp }}\"\n            },\n            {\n              \"name\": \"recent_spam_activity\",\n              \"value\": \"={{ $json.recent_spam_activity }}\"\n            },\n            {\n              \"name\": \"ip_sender_reputation\",\n              \"value\": \"={{ $json.ip_sender_reputation }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"dotNotation\": true\n        },\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"01b33cc9-b7b3-44e6-b683-b753e6daa2dc\",\n      \"name\": \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        520,\n        1160\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let mailAuth = [];\\n\\nfor (const item of $input.all()) {\\n  // SPF\\n  let spf = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=pass\\\") ) {\\n    spf = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=fail\\\") ) {\\n    spf = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=neutral\\\") ) {\\n    spf = \\\"neutral\\\";\\n  }\\n\\n  // DKIM\\n  let dkim = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=pass\\\") ) {\\n    dkim = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=fail\\\") ) {\\n    dkim = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=temperror\\\") ) {\\n    dkim = \\\"error\\\";\\n  }\\n\\n  // DMARC\\n  let dmarc = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=pass\\\") ) {\\n    dmarc = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=fail\\\") ) {\\n    dmarc = \\\"fail\\\";    \\n  }\\n  \\n  mailAuth.push({\\n    \\\"spf\\\": spf,\\n    \\\"dkim\\\": dkim,\\n    \\\"dmarc\\\": dmarc\\n  });\\n}\\n\\nreturn mailAuth;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"33923ec2-10db-4799-9b5e-a369cdd74640\",\n      \"name\": \"SPF from \\\"received-spf\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        500,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let spfArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const spfList = item.json.header[\\\"received-spf\\\"];\\n\\n    if (!spfList || spfList.length == 0) {\\n        spfArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const spfItem of spfList) {\\n            if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                spfArray.push(\\\"fail\\\");\\n            } else if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                spfArray.push(\\\"pass\\\");\\n            } else {\\n                spfArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{spf:spfArray.join(\\\",\\\")}];\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"9cec1f09-3887-46ec-aa25-b03a0ab34190\",\n      \"name\": \"DKIM from \\\"dkim-signature\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let dkimArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dkimList = item.json.header[\\\"dkim-signature\\\"];\\n\\n    if (!dkimList || dkimList.length == 0) { dkimArray.push(\\\"not-found\\\") } else {\\n        dkimArray.push(\\\"found\\\");\\n        return dkimArray;\\n    }\\n\\n}\\nreturn [{dkim:dkimArray.join(\\\",\\\")}];\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"0f856808-c044-4547-bc81-5e6d1208d9ad\",\n      \"name\": \"DMARC from \\\"received-dmarc\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1020,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let dmarcArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dmarcList = item.json.header[\\\"received-dmarc\\\"];\\n\\n    if (!dmarcList || dmarcList.length == 0) {\\n        dmarcArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const dmarcItem of dmarcList) {\\n            if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                dmarcArray.push(\\\"fail\\\");\\n            } else if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                dmarcArray.push(\\\"pass\\\");\\n            } else {\\n                dmarcArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{dmarc:dmarcArray.join(\\\",\\\")}];\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"0780dc59-8a4c-4355-9cdc-35b2505043a6\",\n      \"name\": \"DKIM\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1260,\n        2718\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"spf=pass\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"spf=fail\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"spf=neutral\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"value1\": \"={{ $('Authentication Results Present?').item.json.header['authentication-results'] }}\",\n        \"dataType\": \"string\",\n        \"fallbackOutput\": 3\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b0be02f9-ae6c-460e-9e1c-0be8f878f81b\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -359.7001600000003,\n        -46.60400000000038\n      ],\n      \"parameters\": {\n        \"width\": 811.1951544353835,\n        \"height\": 1042.0833160085729,\n        \"content\": \"![webhook](https://i.imgur.com/D6SP9P0.png)\\n## Workflow Overview\\nThis n8n workflow is adept at dissecting email headers to assess security risks. It employs a webhook to receive data, then diverges into two thorough investigative paths based on specific header contents. For emails with `received` headers, it extracts IP details and consults the IP Quality Score API for comprehensive risk assessments, including potential fraud or abuse and geolocation insights via the IP-API.\\n\\nConversely, when `authentication-results` headers are present, it meticulously evaluates SPF, DKIM, and DMARC verifications, categorizing each email based on the authentication checks.\\n\\nFinally, the workflow converges the data from both paths to provide a cohesive analysis, which is then relayed back through the webhook, furnishing a detailed report on IP reputation and email authentication status.\\n\\n`Please note that the workflow is not yet complete, but should still work without the DKIM analysis.`\\n\\n## Triggered Via Webhook\\nThe workflow is triggered on-demand by incoming webhook queries or can be used inside of the `Execute Workflow` node by replacing the `webhook trigger` with an `Execute Workflow Trigger` and the `respond to webhook` node with a `Set node` set to only keep the set node data. This allows you to use it as part of a larger workflow, in which this portion handles the header analysis. Simply add the  Example input looks like:\\n\\n```\\n[\\n  {\\n    \\\"headers\\\": {\\n      \\\"host\\\": \\\"internal.users.n8n.cloud\\\"\\n    },\\n    \\\"params\\\": {},\\n    \\\"query\\\": {},\\n    \\\"body\\\": \\\"Delivered-To: g.andreini@gmail.com\\\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\\\n        d=google.com; s=arc-20160816;\\\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\\\n         PfNA==\\\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\\\n         BYoQ==\\\\nARC-Authentication-Results: i=1; mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReturn-Path: <eljyzxd@molkase.de>\\\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\\\n        for <g.andreini@gmail.com>\\\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\\\nAuthentication-Results: mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\\\nFrom: Legal Casino <eljyzxd@molkase.de>\\\\nTo: <info@tevassociati.it>\\\\nSubject: Bonus for all European residents\\\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\\\nMIME-Version: 1.0\\\\nContent-Type: multipart/related; type=\\\\\\\"multipart/alternative\\\\\\\"; boundary=\\\\\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\\\\\"\\\\nX-Virus-Scanned: ClamAV using ClamSMTP\\\"\\n  }\\n]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3c8fe0f3-0b65-4366-9c1e-a2a7bcc35ed5\",\n      \"name\": \"Extract Email Header from webhook\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -99,\n        740\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"header\",\n              \"value\": \"={{ $json.body }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4eef6457-27cf-442f-bccf-75663170401b\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        20\n      ],\n      \"parameters\": {\n        \"width\": 610.1426815377504,\n        \"height\": 772.7590323462559,\n        \"content\": \"![ipapi](https://i.imgur.com/OMhn14b.png)\\n## IP Reputation and Fraud Analysis\\nThis workflow section performs an in-depth reputation assessment of each IP address. The `IP-API` node retrieves geolocation data, while the `Fraud Score` node evaluates the risk associated with the IP, flagging any potential spam or abuse activities.\\n\\n### Consolidation of Findings\\nKey data points such as fraud scores and ISP information are synthesized by the `Collect interesting data` node, providing a clear profile of each IP for informed decision-making.\\n\\n### Authentication - Free Tier Available (45 requests/min)\\nThis endpoint is limited to `45 requests per minute from an IP address`.\\n\\nIf you go over the limit your requests will be throttled `(HTTP 429)` until your rate limit window is reset. If you constantly go over the limit your IP address will be banned for 1 hour.\\n\\nNo authentication needed, [Click here to view documentation.](https://ip-api.com/docs)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"764de66e-8e40-44d1-8c09-fb099753d800\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1720,\n        141.75\n      ],\n      \"parameters\": {\n        \"width\": 1153.9919748350057,\n        \"height\": 818.3738794326835,\n        \"content\": \"![n8n](https://i.imgur.com/lKnBNnH.png)\\n## Analyze and Respond to Email Header Analysis\\nThe concluding segment of the `Analyze Email Headers For IPs and Spoofing` workflow integrates sophisticated data processing to analyze and respond to the collected email header information. This part of the workflow is crucial as it synthesizes the data gathered from email headers and prepares it for actionable insights.\\n\\n- `Data Aggregation and Merging:` The nodes `Merge1` and Item `Lists2` are pivotal for aggregating the data from previous steps. These nodes effectively concatenate various items and compile the IP analysis data. This operation is essential for creating a comprehensive view of the email headers, focusing particularly on IPs and potential spoofing indicators.\\n\\n- `Further Merging and Response Preparation:` Another merge operation is performed by `Merge3`, which prepares the data for the final output. Following this, Item Lists3 further concatenates items to form a single, coherent result. This step ensures that all the relevant information is accurately compiled and ready for the final response.\\n\\n- `Final Response to Webhook:` The Respond to Webhook node serves as the endpoint of this workflow. It is configured to respond with the analyzed data, encapsulated in a text format. The response is set to return a 200 HTTP status code, signaling a successful operation. This node exemplifies n8n's capability in not just processing and analyzing data, but also in seamlessly communicating results back to a designated receiver, be it a webhook or any other endpoint.\\n\\n\\nBy the end of this workflow, you have a structured and detailed analysis of email headers, specifically tailored to identify IPs and potential spoofing threats. This underscores n8n's effectiveness as a cybersecurity tool, providing not just data processing capabilities but also actionable insights crucial for maintaining email security.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2fa3c912-f478-48a1-9b2e-5e3f51c6a363\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        800\n      ],\n      \"parameters\": {\n        \"width\": 630.5819800503231,\n        \"height\": 535.80387776221,\n        \"content\": \"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## Authentication Analysis\\n\\nThis section assesses the presence and validity of SPF, DKIM, and DMARC records within email headers to confirm authentication. `SPF/DKIM/DMARC from \\\"authentication-results\\\"` node evaluates the authentication results, ensuring that emails meet the set security standards for sender verification. \\n\\nThe n8n code nodes use either a version of `Javascript` called `node.js` or a version of `Python` called `Pyodide`. In this case we are using Javascript.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5297e5a0-f2d1-4ee3-b931-9b1abe75b2cc\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        2038\n      ],\n      \"parameters\": {\n        \"width\": 983.9576126829675,\n        \"height\": 1039.0141642262715,\n        \"content\": \"![n8n](https://i.imgur.com/yz109RJ.png)\\n## SPF and DKIM Authentication Routing\\nThis group of nodes orchestrates the authentication status routing for SPF and DKIM records found in email headers.\\n\\nSPF Validation Decision-Making\\nThe `SPF` switch node evaluates the SPF results from the email header, directing the flow to different paths based on whether SPF passes, fails, or is neutral. The `\\\"Set1,\\\" \\\"Set2,\\\" and \\\"Set4\\\"` nodes then assign the respective SPF authentication statuses, marking emails for further processing based on their security verification.\\n\\nDKIM Evaluation Handling\\nAlthough not explicitly processing DKIM, the `\\\"DKIM\\\" switch node` is likely misnamed and should be adjusted to reflect its role correctly. It seems to be set up for similar routing logic as the SPF node, which suggests it should handle DKIM results. If it's indeed for DKIM, ensure it's checking for `\\\"dkim=pass/fail/neutral\\\"` within the authentication results.\\n\\nUnknown SPF Status Assignment\\nFinally, the `\\\"Set5\\\"` node appears to handle cases where SPF results are not found or are indeterminate, setting the status to `\\\"unknown.\\\"`\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f6c06bc5-048c-433e-9bfa-f155ca6735e4\",\n      \"name\": \"Received Headers Present?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        300,\n        660\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.header.received.length }}\",\n              \"operation\": \"larger\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a92ef09c-0cc6-469c-98ff-8c6172615a4b\",\n      \"name\": \"Authentication Results Present?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        300,\n        820\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.header[\\\"authentication-results\\\"].length }}\",\n              \"operation\": \"larger\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aef7f739-dfef-40b1-b01f-29adad4a9bda\",\n      \"name\": \"Aggregate Authentication Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1280,\n        1858\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"={{ $('SPF from \\\"received-spf\\\"').all() }}\"\n            },\n            {\n              \"name\": \"dkim\",\n              \"value\": \"={{ $('DKIM from \\\"dkim-signature\\\"').all() }}\"\n            },\n            {\n              \"name\": \"dmarc\",\n              \"value\": \"={{ $('DMARC from \\\"received-dmarc\\\"').all() }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5d7ce661-3bdf-45e5-a1e2-335602e62b5d\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        1349.3807407407407\n      ],\n      \"parameters\": {\n        \"width\": 984.4210239195738,\n        \"height\": 672.6925241611406,\n        \"content\": \"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## Email Authentication Assessment\\nThis set of nodes is dedicated to evaluating the authentication of email headers, specifically focusing on SPF, DKIM, and DMARC validations.\\n\\n### SPF, DKIM, and DMARC Extraction\\nStarting with `SPF from 'received-spf',` this node analyzes the email's SPF records for compliance. Following this, `DKIM from 'dkim-signature'` examines the DKIM signatures to verify their presence and status. Next, `DMARC from 'received-dmarc'` checks DMARC records for alignment with expected security practices.\\n\\n### Data Aggregation\\nOnce the assessments are complete, `Aggregate Authentication Data` compiles the findings into a cohesive dataset, providing clear indicators of each email's authentication status.\\n\\n### Key Focus\\nThese nodes are essential in filtering out potentially harmful emails by verifying their authenticity, a key step in protecting against phishing and spoofing attempts.\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88888a82-815b-423a-85d3-8c86756d10cd\",\n      \"name\": \"IP Data Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1800,\n        660\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"b7add244-9759-450f-8b01-6ec4555a5971\",\n      \"name\": \"Merge Security Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2171,\n        760\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"ef679cda-9420-44fd-90cc-23be1b166e2c\",\n      \"name\": \"Join IP Analysis into one JSON object\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        1960,\n        660\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"operation\": \"concatenateItems\",\n        \"destinationFieldName\": \"ipAnalysis\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1e5ae57b-948c-40c8-8248-fcbda80264e2\",\n      \"name\": \"Join results into one JSON object\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        2391,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"operation\": \"concatenateItems\",\n        \"destinationFieldName\": \"result\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"7fef7675-1350-4886-b184-f907dacf08b1\",\n      \"name\": \"SPF Authentication Checker\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        500,\n        2718\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"spf=pass\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"spf=fail\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"spf=neutral\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"value1\": \"={{ JSON.stringify($json.header[\\\"authentication-results\\\"]) }}\",\n        \"dataType\": \"string\",\n        \"fallbackOutput\": 3\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"410ccb8c-a551-45a3-a487-b0ce15a56882\",\n      \"name\": \"Set SPF Pass Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2518\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"pass\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"127c0c91-162c-4cbb-b692-eb0675a55c42\",\n      \"name\": \"Set SPF Fail Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2658\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"fail\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7a15ae91-012f-4fc8-9075-7f855b15d979\",\n      \"name\": \"Set SPF Neutral Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2798\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"neutral\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2ac1e5ce-83a4-4205-9774-76506f06108e\",\n      \"name\": \"Set SPF UnknownStatus\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2938\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"unknown\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Receive Headers\": [\n      {\n        \"json\": {\n          \"body\": \"Delivered-To: g.andreini@gmail.com\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\n        d=google.com; s=arc-20160816;\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\n         PfNA==\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\n         BYoQ==\\nARC-Authentication-Results: i=1; mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReturn-Path: <eljyzxd@molkase.de>\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\n        for <g.andreini@gmail.com>\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\nAuthentication-Results: mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\nFrom: Legal Casino <eljyzxd@molkase.de>\\nTo: <info@tevassociati.it>\\nSubject: Bonus for all European residents\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\nMIME-Version: 1.0\\nContent-Type: multipart/related; type=\\\"multipart/alternative\\\"; boundary=\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\"\\nX-Virus-Scanned: ClamAV using ClamSMTP\",\n          \"query\": {},\n          \"params\": {},\n          \"headers\": {\n            \"host\": \"internal.users.n8n.cloud\",\n            \"accept\": \"*/*\",\n            \"x-real-ip\": \"10.255.0.2\",\n            \"user-agent\": \"PostmanRuntime/7.32.3\",\n            \"content-type\": \"text/plain\",\n            \"authorization\": \"1234567890\",\n            \"postman-token\": \"8701ef86-2136-4c79-941a-bc8ed79bcc9e\",\n            \"content-length\": \"3900\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            \"x-forwarded-for\": \"10.255.0.2\",\n            \"x-forwarded-host\": \"internal.users.n8n.cloud\",\n            \"x-forwarded-port\": \"443\",\n            \"x-forwarded-proto\": \"https\",\n            \"x-forwarded-server\": \"e591fa1c2d01\"\n          }\n        },\n        \"pairedItem\": {\n          \"item\": 0\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"6e01f4f9-d42b-4168-91a1-0bfe850c43ea\",\n  \"connections\": {\n    \"IP-API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fraud Score\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fraud Score\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Collect interesting data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IP Data Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join IP Analysis into one JSON object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out IPs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP Quality Score\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive Headers\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Email Header from webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IP Quality Score\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP-API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Security Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join results into one JSON object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Fail Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Pass Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Explode Email Header\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Received Headers Present?\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Authentication Results Present?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF UnknownStatus\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Neutral Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF from \\\"received-spf\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM from \\\"dkim-signature\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Collect interesting data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP Data Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Received Headers Present?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract IPs from \\\"received\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"IP Data Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"DKIM from \\\"dkim-signature\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DMARC from \\\"received-dmarc\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF Authentication Checker\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set SPF Pass Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF Fail Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF Neutral Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF UnknownStatus\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"DMARC from \\\"received-dmarc\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate Authentication Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract IPs from \\\"received\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out IPs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Authentication Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Authentication Results Present?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"SPF Authentication Checker\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"SPF from \\\"received-spf\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Email Header from webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Explode Email Header\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join results into one JSON object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join IP Analysis into one JSON object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.webhook",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.respondToWebhook",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.code",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.code",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.httpRequest",
      "n8n-nodes-base.set",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.code",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.if",
      "n8n-nodes-base.if",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.itemLists",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}