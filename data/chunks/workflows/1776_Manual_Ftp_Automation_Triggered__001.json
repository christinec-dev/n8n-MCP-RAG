{
  "source": "1776_Manual_Ftp_Automation_Triggered.json",
  "index": 1,
  "content": "{\n  \"id\": \"YoUP55V241b9F2ze\",\n  \"meta\": {\n    \"instanceId\": \"35ec7a1e5284dd5dab4dac454bbb30405138d2784c99e56ef8887a4fa9cd1977\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Qdrant Vector Database Embedding Pipeline\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"934ffad4-c93e-40c1-b4fd-1c09b518a9c3\",\n      \"name\": \"Qdrant Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        460,\n        -460\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"sv_lang_data\",\n          \"cachedResultName\": \"sv_lang_data\"\n        },\n        \"embeddingBatchSize\": 100\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"vUb9tbEnXzu7uNUb\",\n          \"name\": \"QdrantApi svenska\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4127d85d-45c9-4536-a15d-08af9dfdcfa8\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -960,\n        -460\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"abb61b81-72e0-468e-855b-72402db828fc\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        400,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"kftHaZgVKiB9BmKU\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e9ae24be-6da9-4c04-b891-7e450f505e02\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        780,\n        -180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"dataType\": \"binary\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9aff896d-4edb-494c-b84f-ede4e47db1e3\",\n      \"name\": \"Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter\",\n      \"position\": [\n        800,\n        20\n      ],\n      \"parameters\": {\n        \"separator\": \"\\\"chunk_id\\\"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a083a47e-a835-4323-86a8-a2eaed226aaa\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -760,\n        -680\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 260,\n        \"height\": 200,\n        \"content\": \"### Fetch JSON File List\\n**Node:** FTP (all files)\\n**Operation:** List\\n**Path:** <file path>\\n\\nRecursively lists all .json files prepared for embedding.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"072ae9dc-c1cd-4ceb-954a-6b6b1b984e29\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -660\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"height\": 180,\n        \"content\": \"### Iterate Over Files\\n**Node:** Loop Over Items\\n\\nBatches each file path individually for processing.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"08d852f2-f1de-42ce-b882-1dc1343ed967\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -160,\n        -700\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 420,\n        \"height\": 220,\n        \"content\": \"### Download Each File\\n**Node:** FTP (1 file download)\\n\\nDownloads the current file in binary form using:\\n```\\nPath = file_path/{{ $json.name }}\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"905c3d74-2817-4aa3-865d-51e972cbbb5a\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        920,\n        -80\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 320,\n        \"height\": 400,\n        \"content\": \"### Parse JSON Document (Default Data Loader)\\n**Node:** Default Data Loader\\n**Loader Type**: binary\\n- Converts JSON structure into a document format compatible with embedding.\\n\\n\\n### Split into Smaller Chunks\\n**Node:** Character Text Splitter\\n**Split by:** \\\"chunk_id\\\" or custom logic based on chunk formatting\\n\\nOptional node if chunk size normalization is required before embedding.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9fb8e5be-3ee1-42b4-a858-40bc6afcf457\",\n      \"name\": \"List all the files\",\n      \"type\": \"n8n-nodes-base.ftp\",\n      \"position\": [\n        -700,\n        -460\n      ],\n      \"parameters\": {\n        \"path\": \"Oracle/AI/embedding/svenska\",\n        \"operation\": \"list\"\n      },\n      \"credentials\": {\n        \"ftp\": {\n          \"id\": \"JufoKeNjsIgbCBWe\",\n          \"name\": \"FTP account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6f8d0390-5851-44ca-9712-0ae51f9a22ef\",\n      \"name\": \"Loop over one item\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -400,\n        -460\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1c89a4a9-ec68-4c48-b7bc-74f5b30d8ac2\",\n      \"name\": \"Downloading item\",\n      \"type\": \"n8n-nodes-base.ftp\",\n      \"position\": [\n        -40,\n        -440\n      ],\n      \"parameters\": {\n        \"path\": \"=Oracle/AI/embedding/svenska/{{ $json.name }}\",\n        \"binaryPropertyName\": \"binary.data\"\n      },\n      \"credentials\": {\n        \"ftp\": {\n          \"id\": \"JufoKeNjsIgbCBWe\",\n          \"name\": \"FTP account\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"01ca4ee3-5f1c-4977-a7f9-88e46db580ad\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        -960\n      ],\n      \"parameters\": {\n        \"width\": 480,\n        \"height\": 460,\n        \"content\": \"### Store in Vector DB\\n**Node:** Qdrant Vector Store\\n**Batch Size:** 100\\n\\n**Collection:** <collection_name>\\nSends cleaned text chunks to OpenAI to get embeddings (1536 dim for text-embedding-ada-002)\\n\\n#### collection settings in Qdrant cluster\\n```\\nPUT /collections/{collection_name}\\n{\\n    \\\"vectors\\\": {\\n      \\\"size\\\": 1536,\\n      \\\"distance\\\": \\\"Cosine\\\"\\n    }\\n}\\n```\\nEmbed Chunks\\n**Node:** Embeddings OpenAI\\nPushes the embedded chunks (with metadata) into Qdrant for semantic retrieval.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"c71fca63-26e9-4795-9a00-942dab6d07ce\",\n  \"connections\": {\n    \"Downloading item\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List all the files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over one item\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over one item\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Downloading item\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List all the files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List all the files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "n8n-nodes-base.manualTrigger",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.ftp",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.ftp",
      "n8n-nodes-base.stickyNote"
    ],
    "trigger": null
  }
}