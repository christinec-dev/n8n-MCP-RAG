{
  "source": "1194_Slack_Emailreadimap_Create.json",
  "index": 1,
  "content": "{\n  \"id\": 91,\n  \"name\": \"New invoice email notification\",\n  \"nodes\": [\n    {\n      \"name\": \"Check for new emails\",\n      \"type\": \"n8n-nodes-base.emailReadImap\",\n      \"position\": [\n        500,\n        300\n      ],\n      \"parameters\": {\n        \"format\": \"resolved\",\n        \"mailbox\": \"Inbox\",\n        \"options\": {\n          \"allowUnauthorizedCerts\": true\n        }\n      },\n      \"credentials\": {\n        \"imap\": {\n          \"id\": \"24\",\n          \"name\": \"GMAIL\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"If email body contains invoice\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        700,\n        300\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$json[\\\"text\\\"].toLowerCase()}}\",\n              \"value2\": \"invoice\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"combineOperation\": \"any\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Extract the total amount\",\n      \"type\": \"n8n-nodes-base.mindee\",\n      \"position\": [\n        900,\n        280\n      ],\n      \"parameters\": {\n        \"rawData\": true,\n        \"resource\": \"invoice\",\n        \"binaryPropertyName\": \"attachment_0\"\n      },\n      \"credentials\": {\n        \"mindeeInvoiceApi\": {\n          \"id\": \"62\",\n          \"name\": \"Mindee Invoice account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Send new invoice notification\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1580,\n        300\n      ],\n      \"parameters\": {\n        \"text\": \":new: There is a new invoice to pay :new:\",\n        \"channel\": \"team-accounts\",\n        \"blocksUi\": {\n          \"blocksValues\": []\n        },\n        \"attachments\": [\n          {\n            \"color\": \"#FFBF00\",\n            \"fields\": {\n              \"item\": [\n                {\n                  \"short\": true,\n                  \"title\": \"Amount\",\n                  \"value\": \"={{$node[\\\"If Amount > 1000\\\"].json[\\\"predictions\\\"][0][\\\"total_incl\\\"][\\\"amount\\\"]}}\"\n                },\n                {\n                  \"short\": false,\n                  \"title\": \"From\",\n                  \"value\": \"={{$node[\\\"Check for new emails\\\"].json[\\\"from\\\"][\\\"value\\\"][0][\\\"address\\\"]}}\"\n                },\n                {\n                  \"short\": true,\n                  \"title\": \"Subject\",\n                  \"value\": \"={{$node[\\\"Check for new emails\\\"].json[\\\"subject\\\"]}}\"\n                }\n              ]\n            },\n            \"footer\": \"=*Date:* {{$node[\\\"Check for new emails\\\"].json[\\\"date\\\"]}}\"\n          }\n        ],\n        \"otherOptions\": {}\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"53\",\n          \"name\": \"Slack Access Token\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Send email to finance manager\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        1340,\n        120\n      ],\n      \"parameters\": {\n        \"text\": \"Hi,\\n\\nThere is a new high value invoice to be paid that you may need to approve.\\n\\n~ n8n workflow\",\n        \"options\": {},\n        \"subject\": \"New high value invoice\",\n        \"toEmail\": \"finance-manager@company.tld\",\n        \"fromEmail\": \"n8n@noreply.tld\",\n        \"attachments\": \"attachment_0\"\n      },\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"26\",\n          \"name\": \"mailtrap\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"If Amount > 1000\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1080,\n        280\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{$json[\\\"predictions\\\"][0][\\\"total_incl\\\"][\\\"amount\\\"]}}\",\n              \"value2\": 1000,\n              \"operation\": \"larger\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"If Amount > 1000\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send email to finance manager\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send new invoice notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for new emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If email body contains invoice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract the total amount\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Amount > 1000\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send email to finance manager\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send new invoice notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If email body contains invoice\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract the total amount\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.emailReadImap",
      "n8n-nodes-base.if",
      "n8n-nodes-base.mindee",
      "n8n-nodes-base.slack",
      "n8n-nodes-base.emailSend",
      "n8n-nodes-base.if"
    ],
    "trigger": null
  }
}