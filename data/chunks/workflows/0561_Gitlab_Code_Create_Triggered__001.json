{
  "source": "0561_Gitlab_Code_Create_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"d53e56b8545e15a14aa4da6d83ec1d0183c6196323c9b6f7c0a36af8ff413264\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"9800aaf1-f330-4898-8da7-e60667ab9597\",\n      \"name\": \"When clicking \\\"Test Workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        880,\n        360\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2772836c-7e75-4d99-a130-f249a3868843\",\n      \"name\": \"Globals\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1100,\n        360\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"repo.owner\",\n              \"stringValue\": \"owner-slug\"\n            },\n            {\n              \"name\": \"repo.name\",\n              \"stringValue\": \"repo-slug\"\n            },\n            {\n              \"name\": \"repo.branch\",\n              \"stringValue\": \"branch-slug\"\n            },\n            {\n              \"name\": \"repo.path\",\n              \"stringValue\": \"path\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"21c87038-3b5f-4ff8-88f2-7dde7f92af17\",\n      \"name\": \"Result\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1700,\n        80\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ff6c0a0a-3a2e-4eb7-9eac-1b6986dee524\",\n      \"name\": \"Current workflow\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1720,\n        460\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d8e48d3c-6df9-4662-b06b-27572182c28d\",\n      \"name\": \"Loop Over Workflows\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1500,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"01d1d850-f0e9-4f7d-877a-78cbec050d6e\",\n      \"name\": \"Get file\",\n      \"type\": \"n8n-nodes-base.gitlab\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1960,\n        460\n      ],\n      \"parameters\": {\n        \"owner\": \"={{ $('Globals').first().json.repo.owner }}\",\n        \"filePath\": \"={{ $('Globals').first().json.repo.path }}{{ $json.id }}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"get\",\n        \"repository\": \"={{ $('Globals').first().json.repo.name }}\",\n        \"binaryPropertyName\": \"file-from-gitlab\",\n        \"additionalParameters\": {\n          \"reference\": \"={{ $('Globals').first().json.repo.branch }}\"\n        }\n      },\n      \"credentials\": {\n        \"gitlabApi\": {\n          \"id\": \"1JK5aC2W8tuDKw2e\",\n          \"name\": \"GitLab account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"1cc2e4b6-8143-4d11-8898-78521e2b0170\",\n      \"name\": \"File status\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2620,\n        440\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"var item = $json;\\n\\n// Check first if is error\\nif (item.error) {\\n  if (\\\"The resource you are requesting could not be found\\\" == item.error) {\\n    item[\\\"status\\\"] = \\\"new\\\";\\n  } else {\\n    item[\\\"status\\\"] = \\\"error\\\";\\n  }\\n  return $input.item;\\n}\\n\\n// If not error check file with saved version\\nvar workflowFromN8n = item[\\\"workflow-from-n8n\\\"];\\nvar workflowFromGitlab = item[\\\"workflow-from-gitlab\\\"];\\nvar areEquals = objectsAreEquals(workflowFromN8n, workflowFromGitlab);\\n\\nif (areEquals) {\\n  item[\\\"status\\\"] = \\\"same\\\";\\n} else {\\n  item[\\\"status\\\"] = \\\"diff\\\";\\n}\\n\\n// Return Item\\nreturn item;\\n\\n/**\\n * Compare to objects\\n * @param object1 \\n * @param object2 \\n * @returns true if the are the same without ignored fields\\n */\\nfunction objectsAreEquals(object1, object2) {\\n  const objectKeys1 = Object.keys(object1);\\n  const objectKeys2 = Object.keys(object2);\\n\\n  // If the numbers of fields are differents, the objects are differents\\n  if (objectKeys1.length !== objectKeys2.length) {\\n    return false;\\n  }\\n  for (const key of objectKeys1) {\\n    // Define some fields to be ignored\\n    var ignoreCurrent = false;\\n    switch (key) {\\n      case \\\"updatedAt\\\": // Changed because workflow change... not usefull\\n      case \\\"global\\\": // changed for running reasons, no need to check\\n        ignoreCurrent = true;\\n    }\\n\\n    // If it's not an ignored field\\n    if (!ignoreCurrent) {\\n      const value1 = object1[key];\\n      const value2 = object2[key];\\n      const isBothAreObjects = isObject(value1) && isObject(value2);\\n\\n      // If it's objects recursive check\\n      if (isBothAreObjects && !objectsAreEquals(value1, value2)) {\\n        return false;\\n      }\\n\\n      // If it's not objects, just compare values\\n      if (!isBothAreObjects && value1 != value2) {\\n        return false;\\n      }\\n    }\\n  }\\n  return true;\\n}\\n\\n/**\\n * Tool function to determine if an parameter is an object\\n * @param object \\n * @returns \\n */\\nfunction isObject(object) {\\n  return object !== null && typeof object === \\\"object\\\";\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8e428b8a-6ac3-47c6-aa53-7a461fcaab0c\",\n      \"name\": \"Status error\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3360,\n        640\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Current workflow').item.json.name }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"stringValue\": \"=Error : {{ $json.error }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"9007c9ae-bac0-4c65-9d50-c63d3a20f49c\",\n      \"name\": \"End Loop\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        3600,\n        420\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ac768b04-fa1f-4cef-8c7c-61508bb46bfc\",\n      \"name\": \"Create file\",\n      \"type\": \"n8n-nodes-base.gitlab\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3100,\n        140\n      ],\n      \"parameters\": {\n        \"owner\": \"={{ $('Globals').first().json.repo.owner }}\",\n        \"branch\": \"={{ $('Globals').first().json.repo.branch }}\",\n        \"filePath\": \"={{ $('Globals').first().json.repo.path }}{{ $json.id }}.json\",\n        \"resource\": \"file\",\n        \"repository\": \"={{ $('Globals').first().json.repo.name }}\",\n        \"fileContent\": \"={{ JSON.stringify($('Current workflow').item.json, null, 4) }}\",\n        \"commitMessage\": \"=Create file for workflow {{ $('Current workflow').item.json.name }}\",\n        \"additionalParameters\": {\n          \"author\": {\n            \"name\": \"n8n\",\n            \"email\": \"noreply-n8n@mipih.fr\"\n          }\n        }\n      },\n      \"credentials\": {\n        \"gitlabApi\": {\n          \"id\": \"1JK5aC2W8tuDKw2e\",\n          \"name\": \"GitLab account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"17d32e40-56c1-46e1-b7a6-0438adf5069c\",\n      \"name\": \"Extract From File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        2180,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"fromJson\",\n        \"destinationKey\": \"workflow-from-gitlab\",\n        \"binaryPropertyName\": \"file-from-gitlab\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51a50508-bfe2-4a70-aa77-420c2f7d6ae1\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        2880,\n        440\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"new\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"new\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"same\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"0ff6e053-e89d-49fa-b8c8-3a51ffe016d8\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"same\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"diff\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"b6b954c3-e74c-4f60-8e9e-ac79d4b741f3\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"diff\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\",\n          \"renameFallbackOutput\": \"error\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"4a71677b-2c35-40b3-a45c-320e0779a949\",\n      \"name\": \"New file version\",\n      \"type\": \"n8n-nodes-base.gitlab\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3100,\n        300\n      ],\n      \"parameters\": {\n        \"owner\": \"={{ $('Globals').first().json.repo.owner }}\",\n        \"branch\": \"={{ $('Globals').first().json.repo.branch }}\",\n        \"filePath\": \"={{ $('Globals').first().json.repo.path }}{{ $json['workflow-from-n8n'].id }}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"edit\",\n        \"repository\": \"={{ $('Globals').first().json.repo.name }}\",\n        \"fileContent\": \"={{ JSON.stringify($json['workflow-from-n8n'], null, 4) }}\",\n        \"commitMessage\": \"=New file version for workflow {{ $json['workflow-from-n8n'].name }}\"\n      },\n      \"credentials\": {\n        \"gitlabApi\": {\n          \"id\": \"1JK5aC2W8tuDKw2e\",\n          \"name\": \"GitLab account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"a2d22bb4-ff42-41c5-8ef9-6214f114275e\",\n      \"name\": \"Error output to normal output\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2180,\n        560\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c1932cee-dcb4-4f32-8eff-7ded3558ba53\",\n      \"name\": \"Status new\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3360,\n        120\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Current workflow').item.json.name }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"stringValue\": \"new\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"769cf25b-311a-4aaa-9eb8-5c9616f91beb\",\n      \"name\": \"Status diff\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3360,\n        280\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Current workflow').item.json.name }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"stringValue\": \"diff\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"3089818c-0020-4d13-864e-6f04b6ea9d91\",\n      \"name\": \"Status same\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3360,\n        420\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('Current workflow').item.json.name }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"stringValue\": \"same\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7fcffb00-2177-49b9-b0ee-7ccec076814d\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1920,\n        160\n      ],\n      \"parameters\": {\n        \"width\": 839.0943396226413,\n        \"height\": 587.9245283018865,\n        \"content\": \"## Check file\\nGet the file.\\nUse error output as normal output.\\nSome code to analyse the file and set a status.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c0eff6a-e469-41bd-890c-76bc760a2b4e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2860,\n        14\n      ],\n      \"parameters\": {\n        \"width\": 720.3234501347711,\n        \"height\": 806.2533692722375,\n        \"content\": \"## Save the data\\nSave the data as new or edited file, ignored or note as error.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a02c50c9-fe6c-4c90-93ee-dc82b8fb3abe\",\n      \"name\": \"Retrieve all workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        1300,\n        360\n      ],\n      \"parameters\": {\n        \"filters\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"9Skqv84KE7fa1hJx\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee96caf2-bf4d-4d10-a6bc-0a30ec9c9db8\",\n      \"name\": \"Save each version in a different field\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2400,\n        360\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"workflow-from-gitlab\",\n              \"type\": \"objectValue\",\n              \"objectValue\": \"={{ $json['workflow-from-gitlab'] }}\"\n            },\n            {\n              \"name\": \"workflow-from-n8n\",\n              \"type\": \"objectValue\",\n              \"objectValue\": \"={{ $('Current workflow').item.json }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Status same\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"New file version\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Status error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Globals\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Retrieve all workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"End Loop\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract From File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error output to normal output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Status new\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"End Loop\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Status new\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Status error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Status diff\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"End Loop\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Status same\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"End Loop\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Status error\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"End Loop\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Current workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"New file version\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Status diff\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Status error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract From File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save each version in a different field\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Current workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve all workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error output to normal output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Test Workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Globals\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save each version in a different field\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.set",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.splitInBatches",
      "n8n-nodes-base.gitlab",
      "n8n-nodes-base.code",
      "n8n-nodes-base.set",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.gitlab",
      "n8n-nodes-base.extractFromFile",
      "n8n-nodes-base.switch",
      "n8n-nodes-base.gitlab",
      "n8n-nodes-base.noOp",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.n8n",
      "n8n-nodes-base.set"
    ],
    "trigger": null
  }
}