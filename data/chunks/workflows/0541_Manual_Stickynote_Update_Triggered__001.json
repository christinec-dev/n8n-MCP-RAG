{
  "source": "0541_Manual_Stickynote_Update_Triggered.json",
  "index": 1,
  "content": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"141638a4-b340-473f-a800-be7dbdcff131\",\n      \"name\": \"When clicking \\\"Test workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        695,\n        380\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6ccdaca5-f620-4afa-bed6-92f3a450687d\",\n      \"name\": \"Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        875,\n        380\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"0B43u2YYOTJR2cC1BRkptZ3N4QTk4NEtxRko5cjhKUUFyemw0\",\n          \"cachedResultUrl\": \"https://drive.google.com/file/d/0B43u2YYOTJR2cC1BRkptZ3N4QTk4NEtxRko5cjhKUUFyemw0/view?usp=drivesdk&resourcekey=0-UJ8EfTMMBRNVyBb6KhN2Tg\",\n          \"cachedResultName\": \"0B0A0255.jpeg\"\n        },\n        \"options\": {},\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b0c2f7a4-a336-4705-aeda-411f2518aaef\",\n      \"name\": \"Get Color Information\",\n      \"type\": \"n8n-nodes-base.editImage\",\n      \"position\": [\n        1200,\n        200\n      ],\n      \"parameters\": {\n        \"operation\": \"information\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3e42b3f1-6900-4622-8c0d-2d9a27a7e1c9\",\n      \"name\": \"Resize Image\",\n      \"type\": \"n8n-nodes-base.editImage\",\n      \"position\": [\n        1200,\n        580\n      ],\n      \"parameters\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"options\": {},\n        \"operation\": \"resize\",\n        \"resizeOption\": \"onlyIfLarger\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"00425bb2-289e-4a09-8fcb-52319281483c\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        2300,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"metadata\": {\n            \"metadataValues\": [\n              {\n                \"name\": \"source\",\n                \"value\": \"={{ $('Document for Embedding').item.json.metadata.source }}\"\n              },\n              {\n                \"name\": \"format\",\n                \"value\": \"={{ $('Document for Embedding').item.json.metadata.format }}\"\n              },\n              {\n                \"name\": \"backgroundColor\",\n                \"value\": \"={{ $('Document for Embedding').item.json.metadata.backgroundColor }}\"\n              }\n            ]\n          }\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06dbdf39-9d72-460e-a29c-1ae4e9f3552a\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        2300,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"139cac42-c006-4c9d-8298-ade845e137a7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1140,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 372,\n        \"height\": 288,\n        \"content\": \"### Get Color Channels\\n[Source: https://www.pinecone.io/learn/series/image-search/color-histograms/](https://www.pinecone.io/learn/series/image-search/color-histograms/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9b8584ae-067c-4515-b194-32986ba3bf8b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1140,\n        418\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 376.4067897296865,\n        \"height\": 335.30166772984643,\n        \"content\": \"### Generate Image Keywords\\n[Source: https://www.pinecone.io/learn/series/image-search/bag-of-visual-words/](https://www.pinecone.io/learn/series/image-search/bag-of-visual-words/)\\n\\nNote, OpenAI Image models work best when image is resized to 512x512.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7f2c27d7-9947-42fa-aafb-78f4f95ac433\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        240,\n        540\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 359.1981770749933,\n        \"height\": 98.40143173756314,\n        \"content\": \"⚠️ **Multimodal embedding is not designed analyze medical images for diagnostic features or disease patterns.** Please do not use Multimodal embedding for medical purposes.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cb6b4a82-db5f-41f0-94dc-6cfabe0905eb\",\n      \"name\": \"Combine Image Analysis\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1700,\n        260\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"1ba33665-3ebb-4b23-989d-eec53dfd225a\",\n      \"name\": \"Document for Embedding\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1860,\n        257\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8204b731-24e2-4993-9e6d-4cea80393580\",\n              \"name\": \"data\",\n              \"type\": \"string\",\n              \"value\": \"=## keywords\\\\n\\n{{ $json.content }}\\\\n\\n## color information:\\\\n\\n{{ JSON.stringify($json[\\\"Channel Statistics\\\"]) }}\"\n            },\n            {\n              \"id\": \"ca49cccf-ea4e-4362-bf49-ac836c8758d3\",\n              \"name\": \"metadata\",\n              \"type\": \"object\",\n              \"value\": \"={ \\\"format\\\": \\\"{{ $json.format }}\\\", \\\"backgroundColor\\\": \\\"{{ $json[\\\"Background Color\\\"] }}\\\", \\\"source\\\": \\\"{{ $binary.data.fileName }}\\\" } \"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"5d01a2fd-0190-48fc-b588-d5872c5cd793\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        640,\n        250.0169327052916\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 418.6907913057789,\n        \"height\": 316.7698949693208,\n        \"content\": \"## 1. Get the Source Image\\nIn this demo, we just need an image file. We'll pull an image from google drive but you can use all input trigger or source you prefer.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c9825f3-6a2b-4fd2-bdb1-e49f8d947e7a\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1098.439755647174,\n        -145.1609149026466\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 462.52060804115854,\n        \"height\": 938.3723985625845,\n        \"content\": \"## 2. Image Embedding Methods\\n[Read more about working with images in n8n](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.editimage)\\n\\nThere are a [myriad of image embedding techniques](https://www.pinecone.io/learn/series/image-search/) some which involve specialised models and some which do a simplified image-to-text representation.\\nIn this demo, we'll use the simplified text representation methods: collecting color channel information and using Multimodal LLMs to produce keywords for the image. Together, these will form the document we'll embed to represent our image for search.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4035987-16c0-4d03-9e20-5f2042a6a020\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1600,\n        120\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 418.6907913057789,\n        \"height\": 343.6004071339855,\n        \"content\": \"## 3. Generate Embedding Doc\\nIt is important to define your metadata for later filtering and retrieval purposes.\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91fe4c5c-c063-48e2-b248-801c11880c69\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2060,\n        -11.068945113406585\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 532.5269726975372,\n        \"height\": 665.9365418117011,\n        \"content\": \"## 3. Store in Vector Store\\n[Read more about vector stores](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory)\\n\\nOnce our document is ready, we can just insert into any vector store to make it ready for searching. When searching, be sure to defined the same vector store index used here!\\nNote: Metadata is defined in the document loader which must be mapped manually.\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6e8ffa06-ddec-463a-b8d6-581ad7095398\",\n      \"name\": \"Embeddings OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        2680,\n        547\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3dea73b2-6aa1-4158-945e-a5d6bea65244\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2620,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 400.96585774172854,\n        \"height\": 512.739000439197,\n        \"content\": \"## 4. Try it out!\\n[Read more about vector stores](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory)\\n\\nHere's a quick test to use a simple text prompt to search for the image. Next step would be to implement image-to-image search by using the \\\"Embedding Doc\\\" to search rather to store in the vector database.\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f6a543d4-df3b-456c-8f85-4dca29029b55\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        240,\n        140\n      ],\n      \"parameters\": {\n        \"width\": 359.6648027457353,\n        \"height\": 384.6280362222034,\n        \"content\": \"## Try It Out!\\n### This workflow does the following:\\n* Downloads a selected image from Google Drive.\\n* Extracts colour channel information from the image.\\n* Generates semantic keywords of the iamge using OpenAI vision model.\\n* Combines extracted and generated data to create an embedding document for the image.\\n* Inserts this document into a vector store to allow for vector search on the original image. \\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"724acae9-75d2-4421-b5a3-b920f7bda825\",\n      \"name\": \"In-Memory Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\",\n      \"position\": [\n        2180,\n        200\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"memoryKey\": \"image_embeddings\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"52afd512-0d55-4ae3-9377-4cb324c571a8\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        2180,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c769f279-22ef-4cb1-aef3-9089bb92a0a4\",\n      \"name\": \"Search for Image\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\",\n      \"position\": [\n        2680,\n        387\n      ],\n      \"parameters\": {\n        \"mode\": \"load\",\n        \"prompt\": \"student having fun\",\n        \"memoryKey\": \"image_embeddings\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9aea3018-1377-4802-a5d0-509c221f4fc7\",\n      \"name\": \"Get Image Keywords\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1360,\n        580\n      ],\n      \"parameters\": {\n        \"text\": \"Extract all possible semantic keywords which describe the image. Be comprehensive and be sure to identify subjects (if applicable) such as biological and non-biological objects, lightning, mood, tone, color, special effects, camera and/or techniques used if known. Respond with a comma-separated list.\",\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o\",\n          \"cachedResultName\": \"GPT-4O\"\n        },\n        \"options\": {},\n        \"resource\": \"image\",\n        \"inputType\": \"base64\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Color Information\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Resize Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Resize Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"In-Memory Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Search for Image\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Image Analysis\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"In-Memory Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Color Information\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Image Analysis\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Image Analysis\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Document for Embedding\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Document for Embedding\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"In-Memory Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Test workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}",
  "metadata": {
    "node_types": [
      "n8n-nodes-base.manualTrigger",
      "n8n-nodes-base.googleDrive",
      "n8n-nodes-base.editImage",
      "n8n-nodes-base.editImage",
      "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.merge",
      "n8n-nodes-base.set",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "n8n-nodes-base.stickyNote",
      "n8n-nodes-base.stickyNote",
      "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "@n8n/n8n-nodes-langchain.openAi"
    ],
    "trigger": null
  }
}